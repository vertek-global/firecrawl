{"version":3,"file":"generic-ai.js","sourceRoot":"","sources":["../../../src/lib/generic-ai.ts"],"names":[],"mappings":";;AAqDA,4BAOC;AAED,8CAOC;AArED,2CAA8C;AAC9C,2DAAkD;AAClD,iDAA8C;AAC9C,uCAAoC;AACpC,2CAAwC;AACxC,iEAA+D;AAC/D,iDAA8C;AAC9C,iDAA8C;AAC9C,yDAAqD;AAYrD,MAAM,eAAe,GAAa,OAAO,CAAC,GAAG,CAAC,eAAe;IAC3D,CAAC,CAAC,QAAQ;IACV,CAAC,CAAC,QAAQ,CAAC;AAEb,MAAM,YAAY,GAA0B;IAC1C,MAAM,EAAE,IAAA,qBAAY,EAAC;QACjB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;QAClC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;KACvC,CAAC,EAAE,gBAAgB;IACpB,MAAM,EAAE,IAAA,iCAAY,EAAC;QACnB,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;KACrC,CAAC;IACF,SAAS,EAAT,qBAAS,EAAE,mBAAmB;IAC9B,IAAI,EADO,mBAAmB;IAC9B,WAAI,EAAE,cAAc;IACpB,MAAM,EADA,cAAc;IACpB,eAAM,EAAE,8BAA8B;IACtC,UAAU,EAAE,IAAA,kCAAgB,EAAC;QAC3B,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;KACvC,CAAC;IACF,SAAS,EAAT,qBAAS,EAAE,mBAAmB;IAC9B,SAAS,EADE,mBAAmB;IAC9B,qBAAS,EAAE,mBAAmB;IAC9B,MAAM,EAAE,IAAA,4BAAY,EAAC;QACnB,OAAO,EAAE,WAAW;QACpB,8CAA8C;QAC9C,OAAO,EAAC,4FAA4F;QACpG,QAAQ,EAAE,QAAQ;QAClB,iBAAiB,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAClD,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;SAC9D,CAAC,CAAC,CAAC;YACF,OAAO,EAAE,gBAAgB;SAC1B;KACF,CAAC;CACH,CAAC;AAEF,SAAgB,QAAQ,CAAC,IAAY,EAAE,WAAqB,eAAe;IACzE,IAAG,IAAI,KAAK,gBAAgB,EAAC,CAAC;QAC5B,IAAI,GAAG,8BAA8B,CAAA;IACvC,CAAC;IACD,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU;QAC3B,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QAChD,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC;AAED,SAAgB,iBAAiB,CAC/B,IAAY,EACZ,WAAqB,eAAe;IAEpC,OAAO,OAAO,CAAC,GAAG,CAAC,oBAAoB;QACrC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;QACpE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["import { createOpenAI } from \"@ai-sdk/openai\";\nimport { createOllama } from \"ollama-ai-provider\";\nimport { anthropic } from \"@ai-sdk/anthropic\";\nimport { groq } from \"@ai-sdk/groq\";\nimport { google } from \"@ai-sdk/google\";\nimport { createOpenRouter } from \"@openrouter/ai-sdk-provider\";\nimport { fireworks } from \"@ai-sdk/fireworks\";\nimport { deepinfra } from \"@ai-sdk/deepinfra\";\nimport { createVertex } from \"@ai-sdk/google-vertex\";\n\ntype Provider =\n  | \"openai\"\n  | \"ollama\"\n  | \"anthropic\"\n  | \"groq\"\n  | \"google\"\n  | \"openrouter\"\n  | \"fireworks\"\n  | \"deepinfra\"\n  | \"vertex\";\nconst defaultProvider: Provider = process.env.OLLAMA_BASE_URL\n  ? \"ollama\"\n  : \"openai\";\n\nconst providerList: Record<Provider, any> = {\n  openai: createOpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n      baseURL: process.env.OPENAI_BASE_URL,\n  }), //OPENAI_API_KEY\n  ollama: createOllama({\n    baseURL: process.env.OLLAMA_BASE_URL,\n  }),\n  anthropic, //ANTHROPIC_API_KEY\n  groq, //GROQ_API_KEY\n  google, //GOOGLE_GENERATIVE_AI_API_KEY\n  openrouter: createOpenRouter({\n    apiKey: process.env.OPENROUTER_API_KEY,\n  }),\n  fireworks, //FIREWORKS_API_KEY\n  deepinfra, //DEEPINFRA_API_KEY\n  vertex: createVertex({\n    project: \"firecrawl\",\n    //https://github.com/vercel/ai/issues/6644 bug\n    baseURL:\"https://aiplatform.googleapis.com/v1/projects/firecrawl/locations/global/publishers/google\",\n    location: \"global\",\n    googleAuthOptions: process.env.VERTEX_CREDENTIALS ? {\n      credentials: JSON.parse(atob(process.env.VERTEX_CREDENTIALS)),\n    } : {\n      keyFile: \"./gke-key.json\",\n    },\n  }),\n};\n\nexport function getModel(name: string, provider: Provider = defaultProvider) {\n  if(name === \"gemini-2.5-pro\"){\n    name = \"gemini-2.5-pro-preview-06-05\"\n  }\n  return process.env.MODEL_NAME\n    ? providerList[provider](process.env.MODEL_NAME)\n    : providerList[provider](name);\n}\n\nexport function getEmbeddingModel(\n  name: string,\n  provider: Provider = defaultProvider,\n) {\n  return process.env.MODEL_EMBEDDING_NAME\n    ? providerList[provider].embedding(process.env.MODEL_EMBEDDING_NAME)\n    : providerList[provider].embedding(name);\n}\n"]}