{"version":3,"file":"deep-research-redis.js","sourceRoot":"","sources":["../../../../src/lib/deep-research/deep-research-redis.ts"],"names":[],"mappings":"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","sourcesContent":["import { redisEvictConnection } from \"../../services/redis\";\nimport { logger as _logger } from \"../logger\";\n\nexport enum DeepResearchStep {\n  INITIAL = \"initial\",\n  SEARCH = \"search\",\n  EXTRACT = \"extract\",\n  ANALYZE = \"analyze\",\n  SYNTHESIS = \"synthesis\",\n  COMPLETE = \"complete\"\n}\n\nexport type DeepResearchActivity = {\n  type: 'search' | 'extract' | 'analyze' | 'reasoning' | 'synthesis' | 'thought';\n  status: 'processing' | 'complete' | 'error';\n  message: string;\n  timestamp: string;\n  depth: number;\n};\n\nexport type DeepResearchSource = {\n  url: string;\n  title: string;\n  description: string;\n};\n\nexport type DeepResearchFinding = {\n  text: string;\n  source: string;\n};\n\nexport type StoredDeepResearch = {\n  id: string;\n  team_id: string;\n  createdAt: number;\n  status: \"processing\" | \"completed\" | \"failed\" | \"cancelled\";\n  error?: any;\n  currentDepth: number;\n  maxDepth: number;\n  completedSteps: number;\n  totalExpectedSteps: number;\n  findings: DeepResearchFinding[];\n  sources: DeepResearchSource[];\n  activities: DeepResearchActivity[];\n  summaries: string[];\n  finalAnalysis?: string;\n  json?: any;\n};\n\n// TTL of 6 hours\nconst DEEP_RESEARCH_TTL = 6 * 60 * 60;\n\nexport async function saveDeepResearch(id: string, research: StoredDeepResearch) {\n  _logger.debug(\"Saving deep research \" + id + \" to Redis...\");\n  await redisEvictConnection.set(\"deep-research:\" + id, JSON.stringify(research));\n  await redisEvictConnection.expire(\"deep-research:\" + id, DEEP_RESEARCH_TTL);\n}\n\nexport async function getDeepResearch(id: string): Promise<StoredDeepResearch | null> {\n  const x = await redisEvictConnection.get(\"deep-research:\" + id);\n  return x ? JSON.parse(x) : null;\n}\n\nexport async function updateDeepResearch(\n  id: string,\n  research: Partial<StoredDeepResearch>,\n) {\n  const current = await getDeepResearch(id);\n  if (!current) return;\n\n  const updatedResearch = {\n    ...current,\n    ...research,\n    // Append new activities if provided\n    activities: research.activities \n      ? [...(current.activities || []), ...research.activities]\n      : current.activities,\n    // Append new findings if provided  \n    // findings: research.findings\n    //   ? [...(current.findings || []), ...research.findings]\n    //   : current.findings,\n    // Append new sources if provided\n    sources: research.sources\n      ? [...(current.sources || []), ...research.sources]\n      : current.sources,\n    // Append new summaries if provided\n    summaries: research.summaries\n      ? [...(current.summaries || []), ...research.summaries]\n      : current.summaries\n  };\n\n  \n\n  await redisEvictConnection.set(\"deep-research:\" + id, JSON.stringify(updatedResearch));\n  await redisEvictConnection.expire(\"deep-research:\" + id, DEEP_RESEARCH_TTL);\n}\n\nexport async function getDeepResearchExpiry(id: string): Promise<Date> {\n  const d = new Date();\n  const ttl = await redisEvictConnection.pttl(\"deep-research:\" + id);\n  d.setMilliseconds(d.getMilliseconds() + ttl);\n  d.setMilliseconds(0);\n  return d;\n} "]}