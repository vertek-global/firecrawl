{"version":3,"file":"merge-null-val-objs.test.js","sourceRoot":"","sources":["../../../../src/lib/__tests__/merge-null-val-objs.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { mergeNullValObjs } from \"../extract/helpers/merge-null-val-objs\";\n\ndescribe(\"mergeNullValObjs\", () => {\n  it(\"should merge the objects with null values\", async () => {\n    const objArray = {\n      lawyers: [\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      lawyers: [\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should handle empty object array\", async () => {\n    const objArray = {\n      lawyers: [],\n    };\n\n    const expected = {\n      lawyers: [],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should handle object array with no null values\", async () => {\n    const objArray = {\n      lawyers: [\n        {\n          name: \"John Doe\",\n          email: \"john.doe@example.com\",\n          title: \"Attorney\",\n          \"phone-number\": \"123.456.7890\",\n          \"practice-areas\": [\n            {\n              area: \"Corporate Law\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      lawyers: [\n        {\n          name: \"John Doe\",\n          email: \"john.doe@example.com\",\n          title: \"Attorney\",\n          \"phone-number\": \"123.456.7890\",\n          \"practice-areas\": [\n            {\n              area: \"Corporate Law\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should merge objects with different null values\", async () => {\n    const objArray = {\n      lawyers: [\n        {\n          name: \"Jane Smith\",\n          email: \"null\",\n          title: \"Attorney\",\n          description: null,\n          \"phone-number\": \"987.654.3210\",\n          \"practice-areas\": [\n            {\n              area: \"Family Law\",\n            },\n          ],\n        },\n        {\n          name: \"Jane Smith\",\n          email: \"jane.smith@example.com\",\n          title: null,\n          description: \"Jane Smith is an attorney specializing in Family Law.\",\n          \"phone-number\": \"987.654.3210\",\n          \"practice-areas\": [\n            {\n              area: \"Family Law\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      lawyers: [\n        {\n          name: \"Jane Smith\",\n          email: \"jane.smith@example.com\",\n          title: \"Attorney\",\n          description: \"Jane Smith is an attorney specializing in Family Law.\",\n          \"phone-number\": \"987.654.3210\",\n          \"practice-areas\": [\n            {\n              area: \"Family Law\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should merge objects with different null values\", async () => {\n    const objArray = {\n      lawyers: [\n        {\n          name: \"Frank Giunta\",\n          email: \"frank.giunta@example.com\",\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Dale R. Rose\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"972.562.0266\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      lawyers: [\n        {\n          name: \"Frank Giunta\",\n          email: \"frank.giunta@example.com\",\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Dale R. Rose\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"972.562.0266\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should correctly merge and deduplicate objects\", async () => {\n    const objArray = {\n      lawyers: [\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Dale R. Rose\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"972.562.0266\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      lawyers: [\n        {\n          name: \"Frank Giunta\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"214.370.5200\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n        {\n          name: \"Dale R. Rose\",\n          email: null,\n          title: \"Personal Injury Attorney\",\n          \"phone-number\": \"972.562.0266\",\n          \"practice-areas\": [\n            {\n              area: \"Personal Injury\",\n            },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should merge arrays of similar objects\", async () => {\n    const objArray = {\n      lawyers: [\n        {\n          name: \"Allen Cox\",\n          email: null,\n          title: \"Personal Injury Lawyer\",\n          \"phone-number\": \"972.606.9000\",\n          \"practice-areas\": [{ area: \"Personal Injury\" }],\n        },\n        {\n          name: \"Allen Cox\",\n          email: \"allen.cox@example.com\",\n          title: \"Personal Injury Lawyer\",\n          \"phone-number\": null,\n          \"practice-areas\": [\n            { area: \"Automobile accidents\" },\n            { area: \"Truck accidents\" },\n            { area: \"Amusement park injury\" },\n            { area: \"Bus accident\" },\n            { area: \"Industrial accidents\" },\n            { area: \"Product defects\" },\n            { area: \"Food poisoning\" },\n            { area: \"Workplace accidents\" },\n            { area: \"Wrongful death\" },\n            { area: \"Swimming pool accidents\" },\n            { area: \"Premises accidents\" },\n            { area: \"Aircraft accidents\" },\n            { area: \"Animal and dog bites\" },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      lawyers: [\n        {\n          name: \"Allen Cox\",\n          email: \"allen.cox@example.com\",\n          title: \"Personal Injury Lawyer\",\n          \"phone-number\": \"972.606.9000\",\n          \"practice-areas\": [\n            { area: \"Personal Injury\" },\n            { area: \"Automobile accidents\" },\n            { area: \"Truck accidents\" },\n            { area: \"Amusement park injury\" },\n            { area: \"Bus accident\" },\n            { area: \"Industrial accidents\" },\n            { area: \"Product defects\" },\n            { area: \"Food poisoning\" },\n            { area: \"Workplace accidents\" },\n            { area: \"Wrongful death\" },\n            { area: \"Swimming pool accidents\" },\n            { area: \"Premises accidents\" },\n            { area: \"Aircraft accidents\" },\n            { area: \"Animal and dog bites\" },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should merge arrays of similar objects with different key names\", async () => {\n    const objArray = {\n      attorneys: [\n        {\n          fullName: \"Allen Cox\",\n          contactEmail: null,\n          position: \"Personal Injury Lawyer\",\n          contactNumber: \"972.606.9000\",\n          specializations: [{ field: \"Personal Injury\" }],\n        },\n        {\n          fullName: \"Allen Cox\",\n          contactEmail: \"allen.cox@example.com\",\n          position: \"Personal Injury Lawyer\",\n          contactNumber: null,\n          specializations: [\n            { field: \"Automobile accidents\" },\n            { field: \"Truck accidents\" },\n            { field: \"Amusement park injury\" },\n            { field: \"Bus accident\" },\n            { field: \"Industrial accidents\" },\n            { field: \"Product defects\" },\n            { field: \"Food poisoning\" },\n            { field: \"Workplace accidents\" },\n            { field: \"Wrongful death\" },\n            { field: \"Swimming pool accidents\" },\n            { field: \"Premises accidents\" },\n            { field: \"Aircraft accidents\" },\n            { field: \"Animal and dog bites\" },\n          ],\n        },\n      ],\n    };\n\n    const expected = {\n      attorneys: [\n        {\n          fullName: \"Allen Cox\",\n          contactEmail: \"allen.cox@example.com\",\n          position: \"Personal Injury Lawyer\",\n          contactNumber: \"972.606.9000\",\n          specializations: [\n            { field: \"Personal Injury\" },\n            { field: \"Automobile accidents\" },\n            { field: \"Truck accidents\" },\n            { field: \"Amusement park injury\" },\n            { field: \"Bus accident\" },\n            { field: \"Industrial accidents\" },\n            { field: \"Product defects\" },\n            { field: \"Food poisoning\" },\n            { field: \"Workplace accidents\" },\n            { field: \"Wrongful death\" },\n            { field: \"Swimming pool accidents\" },\n            { field: \"Premises accidents\" },\n            { field: \"Aircraft accidents\" },\n            { field: \"Animal and dog bites\" },\n          ],\n        },\n      ],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should deal with not array values\", async () => {\n    const objArray = {\n      lawyers: {\n        name: \"not an array\",\n      },\n      attorneys: {\n        name: \"not an array\",\n      },\n    };\n\n    const expected = {\n      lawyers: {\n        name: \"not an array\",\n      },\n      attorneys: {\n        name: \"not an array\",\n      },\n    };\n\n    // @ts-expect-error\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n\n  it(\"should deal with arrays of strings\", async () => {\n    const objArray = {\n      lawyers: [\"res1\", \"res2\", \"res3\"],\n    };\n\n    const expected = {\n      lawyers: [\"res1\", \"res2\", \"res3\"],\n    };\n\n    const result = mergeNullValObjs(objArray);\n\n    expect(result).toEqual(expected);\n  });\n});\n"]}