{"version":3,"file":"job-priority.js","sourceRoot":"","sources":["../../../src/lib/job-priority.ts"],"names":[],"mappings":";;AAMA,wCAYC;AAED,8CASC;AAED,wCAwCC;AAvED,oCAA2C;AAC3C,8CAA2D;AAC3D,6CAAyD;AACzD,qCAAkC;AAElC,MAAM,cAAc,GAAG,gBAAgB,CAAC;AACjC,KAAK,UAAU,cAAc,CAAC,OAAO,EAAE,MAAM;IAClD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,cAAc,GAAG,OAAO,CAAC;QAExC,+BAA+B;QAC/B,MAAM,4BAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAEhD,uGAAuG;QACvG,MAAM,4BAAoB,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,eAAM,CAAC,KAAK,CAAC,mCAAmC,OAAO,KAAK,MAAM,EAAE,CAAC,CAAC;IACxE,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,iBAAiB,CAAC,OAAO,EAAE,MAAM;IACrD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,cAAc,GAAG,OAAO,CAAC;QAExC,6BAA6B;QAC7B,MAAM,4BAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,eAAM,CAAC,KAAK,CAAC,sCAAsC,OAAO,KAAK,MAAM,EAAE,CAAC,CAAC;IAC3E,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,cAAc,CAAC,EACnC,OAAO,EACP,YAAY,GAAG,EAAE,EACjB,YAAY,GAAG,KAAK,GAKrB;IACC,IAAI,OAAO,KAAK,sCAAsC,EAAE,CAAC;QACvD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,IAAA,kBAAW,EAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,uBAAe,CAAC,OAAO,CAAC,CAAC,CAAC,uBAAe,CAAC,KAAK,CAAC,CAAC;QAErH,MAAM,MAAM,GAAG,cAAc,GAAG,OAAO,CAAC;QAExC,4BAA4B;QAC5B,MAAM,SAAS,GAAG,MAAM,4BAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAE3D,0DAA0D;QAC1D,IAAI,YAAY,GAAG,IAAI,EAAE,aAAa,CAAC,YAAY,IAAI,CAAC,CAAC;QACzD,IAAI,WAAW,GAAG,IAAI,EAAE,aAAa,CAAC,WAAW,IAAI,EAAE,CAAC;QAExD,+DAA+D;QAC/D,IAAI,SAAS,IAAI,WAAW,EAAE,CAAC;YAC7B,OAAO,YAAY,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,+CAA+C;YAC/C,OAAO,IAAI,CAAC,IAAI,CACd,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,WAAW,CAAC,GAAG,YAAY,CAAC,CACnE,CAAC;QACJ,CAAC;IACH,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,eAAM,CAAC,KAAK,CACV,4BAA4B,OAAO,KAAK,YAAY,EAAE,CACvD,CAAC;QACF,OAAO,YAAY,CAAC;IACtB,CAAC;AACH,CAAC","sourcesContent":["import { RateLimiterMode } from \"../types\";\nimport { getACUC, getACUCTeam } from \"../controllers/auth\";\nimport { redisEvictConnection } from \"../services/redis\";\nimport { logger } from \"./logger\";\n\nconst SET_KEY_PREFIX = \"limit_team_id:\";\nexport async function addJobPriority(team_id, job_id) {\n  try {\n    const setKey = SET_KEY_PREFIX + team_id;\n\n    // Add scrape job id to the set\n    await redisEvictConnection.sadd(setKey, job_id);\n\n    // This approach will reset the expiration time to 60 seconds every time a new job is added to the set.\n    await redisEvictConnection.expire(setKey, 60);\n  } catch (e) {\n    logger.error(`Add job priority (sadd) failed: ${team_id}, ${job_id}`);\n  }\n}\n\nexport async function deleteJobPriority(team_id, job_id) {\n  try {\n    const setKey = SET_KEY_PREFIX + team_id;\n\n    // remove job_id from the set\n    await redisEvictConnection.srem(setKey, job_id);\n  } catch (e) {\n    logger.error(`Delete job priority (srem) failed: ${team_id}, ${job_id}`);\n  }\n}\n\nexport async function getJobPriority({\n  team_id,\n  basePriority = 10,\n  from_extract = false,\n}: {\n  team_id: string;\n  basePriority?: number;\n  from_extract?: boolean;\n}): Promise<number> {\n  if (team_id === \"d97c4ceb-290b-4957-8432-2b2a02727d95\") {\n    return 50;\n  }\n\n  try {\n    const acuc = await getACUCTeam(team_id, false, true, from_extract ? RateLimiterMode.Extract : RateLimiterMode.Crawl);\n\n    const setKey = SET_KEY_PREFIX + team_id;\n\n    // Get the length of the set\n    const setLength = await redisEvictConnection.scard(setKey);\n\n    // Determine the priority based on the plan and set length\n    let planModifier = acuc?.plan_priority.planModifier ?? 1;\n    let bucketLimit = acuc?.plan_priority.bucketLimit ?? 25;\n\n    // if length set is smaller than set, just return base priority\n    if (setLength <= bucketLimit) {\n      return basePriority;\n    } else {\n      // If not, we keep base priority + planModifier\n      return Math.ceil(\n        basePriority + Math.ceil((setLength - bucketLimit) * planModifier),\n      );\n    }\n  } catch (e) {\n    logger.error(\n      `Get job priority failed: ${team_id}, ${basePriority}`,\n    );\n    return basePriority;\n  }\n}\n"]}