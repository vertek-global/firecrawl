{"version":3,"file":"crawl-redis.js","sourceRoot":"","sources":["../../../src/lib/crawl-redis.ts"],"names":[],"mappings":";;AAqBA,8BAcC;AAED,8CAEC;AAED,4BASC;AAED,wCAMC;AAED,kCASC;AAED,oCAWC;AAED,0CAiCC;AAED,4DAGC;AAED,gDAWC;AAED,0CAOC;AAED,wDAKC;AAED,sDAEC;AAED,gDAOC;AAED,wCAWC;AAED,4CAOC;AAED,kCAcC;AAED,oCAEC;AAED,4CAEC;AAED,oCAOC;AAED,0DAyDC;AAED,0BAqCC;AAGD,4BA4CC;AAED,oDAcC;AAED,wCAsCC;AAlaD,2DAA2D;AAC3D,6CAAyD;AACzD,qCAA6C;AAC7C,6EAAgF;AAgBzE,KAAK,UAAU,SAAS,CAAC,EAAU,EAAE,KAAkB;IAC5D,eAAO,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,GAAG,cAAc,EAAE;QACnD,KAAK;QACL,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,WAAW;QACnB,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,KAAK,CAAC,OAAO;QACrB,iBAAiB,EAAE,KAAK,CAAC,iBAAiB;KAC3C,CAAC,CAAC;IACH,MAAM,4BAAoB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACrE,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAE/D,MAAM,4BAAoB,CAAC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM,4BAAoB,CAAC,MAAM,CAAC,oBAAoB,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxF,CAAC;AAEM,KAAK,UAAU,iBAAiB,CAAC,OAAe;IACrD,OAAO,MAAM,4BAAoB,CAAC,QAAQ,CAAC,oBAAoB,GAAG,OAAO,CAAC,CAAC;AAC7E,CAAC;AAEM,KAAK,UAAU,QAAQ,CAAC,EAAU;IACvC,MAAM,CAAC,GAAG,MAAM,4BAAoB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IAExD,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC/D,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC;AAEM,KAAK,UAAU,cAAc,CAAC,EAAU;IAC7C,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;IACrB,MAAM,GAAG,GAAG,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,EAAE,GAAG,GAAG,CAAC,CAAC;IAC7C,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB,OAAO,CAAC,CAAC;AACX,CAAC;AAEM,KAAK,UAAU,WAAW,CAAC,EAAU,EAAE,MAAc,EAAE,WAAmB,eAAO;IACtF,QAAQ,CAAC,KAAK,CAAC,mBAAmB,GAAG,MAAM,GAAG,cAAc,EAAE;QAC5D,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,aAAa;QACrB,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IACH,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,EAAE,MAAM,CAAC,CAAC;IACjE,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAC3E,CAAC;AAEM,KAAK,UAAU,YAAY,CAAC,EAAU,EAAE,OAAiB,EAAE,WAAmB,eAAO;IAC1F,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IAEtC,QAAQ,CAAC,KAAK,CAAC,+BAA+B,EAAE;QAC9C,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IACH,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,EAAE,GAAG,OAAO,CAAC,CAAC;IACrE,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAC3E,CAAC;AAEM,KAAK,UAAU,eAAe,CACnC,EAAU,EACV,MAAc,EACd,OAAgB,EAChB,WAAmB,eAAO;IAE1B,QAAQ,CAAC,KAAK,CAAC,mCAAmC,EAAE;QAClD,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,iBAAiB;QACzB,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IACH,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,YAAY,EAAE,MAAM,CAAC,CAAC;IACtE,MAAM,4BAAoB,CAAC,MAAM,CAC/B,QAAQ,GAAG,EAAE,GAAG,YAAY,EAC5B,EAAE,GAAG,EAAE,GAAG,EAAE,CACb,CAAC;IAEF,IAAI,OAAO,EAAE,CAAC;QACZ,MAAM,4BAAoB,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,oBAAoB,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC;SAAM,CAAC;QACN,2DAA2D;QAC3D,MAAM,4BAAoB,CAAC,IAAI,CAC7B,QAAQ,GAAG,EAAE,GAAG,oBAAoB,EACpC,CAAC,CAAC,EACF,MAAM,CACP,CAAC;IACJ,CAAC;IAED,MAAM,4BAAoB,CAAC,MAAM,CAC/B,QAAQ,GAAG,EAAE,GAAG,oBAAoB,EACpC,EAAE,GAAG,EAAE,GAAG,EAAE,CACb,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,wBAAwB,CAAC,EAAU;IACvD,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,oBAAoB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtF,OAAO,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,oBAAoB,CAAC,CAAC;AAC/E,CAAC;AAEM,KAAK,UAAU,kBAAkB,CACtC,EAAU,EACV,KAAK,GAAG,CAAC,EACT,GAAG,GAAG,CAAC,CAAC;IAER,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,oBAAoB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtF,OAAO,MAAM,4BAAoB,CAAC,MAAM,CACtC,QAAQ,GAAG,EAAE,GAAG,oBAAoB,EACpC,KAAK,EACL,GAAG,CACJ,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,EAAU;IAC9C,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACnF,OAAO,CACL,CAAC,MAAM,4BAAoB,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,YAAY,CAAC,CAAC;QAC9D,CAAC,MAAM,4BAAoB,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;QAC7D,CAAC,MAAM,4BAAoB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,CAAC,CAAC,KAAK,IAAI,CAC7E,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,sBAAsB,CAAC,EAAU;IACrD,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACnF,OAAO,CACL,CAAC,MAAM,4BAAoB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,CAAC,CAAC,KAAK,IAAI,CAC7E,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,qBAAqB,CAAC,EAAU;IACpD,OAAO,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;AACtE,CAAC;AAEM,KAAK,UAAU,kBAAkB,CAAC,EAAU;IACjD,MAAM,4BAAoB,CAAC,GAAG,CAC5B,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EACjC,KAAK,EACL,IAAI,EACJ,EAAE,GAAG,EAAE,GAAG,EAAE,CACb,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,cAAc,CAAC,EAAU,EAAE,WAAmB,eAAO;IACzE,IAAI,MAAM,eAAe,CAAC,EAAE,CAAC,EAAE,CAAC;QAC9B,QAAQ,CAAC,KAAK,CAAC,gCAAgC,EAAE;YAC/C,MAAM,EAAE,aAAa;YACrB,MAAM,EAAE,gBAAgB;YACxB,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;QACH,MAAM,GAAG,GAAG,MAAM,4BAAoB,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,eAAe,EAAE,KAAK,CAAC,CAAC;QACrF,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,eAAe,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACjF,OAAO,GAAG,KAAK,CAAC,CAAC;IACnB,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,gBAAgB,CAAC,EAAU;IAC/C,eAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE;QACvC,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,kBAAkB;QAC1B,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IACH,MAAM,4BAAoB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,eAAe,CAAC,CAAC;AAClE,CAAC;AAEM,KAAK,UAAU,WAAW,CAAC,EAAU,EAAE,WAAmB,eAAO;IACtE,QAAQ,CAAC,KAAK,CAAC,4BAA4B,EAAE;QAC3C,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,aAAa;QACrB,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IACH,MAAM,4BAAoB,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC;IACjE,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAE3E,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;QAC3B,MAAM,4BAAoB,CAAC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAC1E,MAAM,4BAAoB,CAAC,MAAM,CAAC,oBAAoB,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACxF,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,YAAY,CAAC,EAAU;IAC3C,OAAO,MAAM,4BAAoB,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AACtE,CAAC;AAEM,KAAK,UAAU,gBAAgB,CAAC,EAAU;IAC/C,OAAO,MAAM,4BAAoB,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AACnE,CAAC;AAED,SAAgB,YAAY,CAAC,GAAW,EAAE,EAAe;IACvD,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,IAAI,CAAC,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;QAClE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IACD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACf,OAAO,IAAI,CAAC,IAAI,CAAC;AACnB,CAAC;AAED,SAAgB,uBAAuB,CAAC,GAAiB;IACvD,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IAE1B,qDAAqD;IACrD,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;IACjC,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;IACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;QACrC,aAAa,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;SAAM,CAAC;QACN,UAAU,CAAC,QAAQ,GAAG,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC;IACxD,CAAC;IAED,IAAI,YAAY,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAE/C,yCAAyC;IACzC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC3C,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjD,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QACnC,WAAW,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC/B,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEjC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,mDAAmD;IACnD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC3C,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QACjC,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAChC,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACpH,WAAW,CAAC,QAAQ,IAAI,YAAY,CAAC;YACrC,UAAU,CAAC,QAAQ,IAAI,WAAW,CAAC;QACrC,CAAC;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;YACjD,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC;YACvF,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC7E,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9E,CAAC;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YAChD,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC;YACzF,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC5E,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC7E,CAAC;aAAM,CAAC;YACN,YAAY,CAAC,QAAQ,IAAI,GAAG,CAAC;YAC7B,WAAW,CAAC,QAAQ,IAAI,aAAa,CAAC;YACtC,UAAU,CAAC,QAAQ,IAAI,YAAY,CAAC;QACtC,CAAC;QAED,OAAO,CAAC,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AAEM,KAAK,UAAU,OAAO,CAC3B,EAAU,EACV,EAAe,EACf,GAAW;IAEX,IAAI,OAAO,EAAE,CAAC,cAAc,EAAE,KAAK,KAAK,QAAQ,EAAE,CAAC;QACjD,IACE,CAAC,MAAM,4BAAoB,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,CAAC,CAAC;YACrE,EAAE,CAAC,cAAc,CAAC,KAAK,EACvB,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,IAAI,GAAY,CAAC;IACjB,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE,sBAAsB,EAAE,CAAC;QAC/C,GAAG,GAAG,CAAC,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,UAAU,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;IACjF,CAAC;SAAM,CAAC;QACN,MAAM,YAAY,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACrE,MAAM,CAAC,GAAG,MAAM,4BAAoB,CAAC,IAAI,CACvC,QAAQ,GAAG,EAAE,GAAG,UAAU,EAC1B,GAAG,YAAY,CAChB,CAAC;QACF,GAAG,GAAG,CAAC,KAAK,YAAY,CAAC,MAAM,CAAC;IAClC,CAAC;IAED,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAE5E,IAAI,GAAG,EAAE,CAAC;QACR,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EAAE,GAAG,CAAC,CAAC;QACxE,MAAM,4BAAoB,CAAC,MAAM,CAC/B,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EACjC,EAAE,GAAG,EAAE,GAAG,EAAE,CACb,CAAC;IACJ,CAAC;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAED,yFAAyF;AAClF,KAAK,UAAU,QAAQ,CAC5B,EAAU,EACV,EAAe,EACf,IAAc,EACd,WAAmB,eAAO;IAE1B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IAEnC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IAChD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,EAAE,CAAC,OAAO;KACnB,CAAC,CAAC;IAEH,4BAA4B;IAC5B,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;IACpD,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EAAE,GAAG,IAAI,CAAC,CAAC;IAC5E,MAAM,4BAAoB,CAAC,MAAM,CAC/B,QAAQ,GAAG,EAAE,GAAG,iBAAiB,EACjC,EAAE,GAAG,EAAE,GAAG,EAAE,CACb,CAAC;IAEF,IAAI,GAAY,CAAC;IACjB,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE,sBAAsB,EAAE,CAAC;QAC/C,MAAM,CAAC,GAAG,MAAM,4BAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC;QAC/E,GAAG,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC;IAC1B,CAAC;SAAM,CAAC;QACN,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAC3C,uBAAuB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAChD,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC,MAAM,GAAG,sBAAsB,CAAC,CAAC;QAC1E,MAAM,CAAC,GAAG,MAAM,4BAAoB,CAAC,IAAI,CACvC,QAAQ,GAAG,EAAE,GAAG,UAAU,EAC1B,GAAG,eAAe,CACnB,CAAC;QACF,GAAG,GAAG,CAAC,KAAK,eAAe,CAAC,MAAM,CAAC;IACrC,CAAC;IAED,MAAM,4BAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAE5E,MAAM,CAAC,KAAK,CAAC,yBAAyB,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IACvD,OAAO,GAAG,CAAC;AACb,CAAC;AAEM,KAAK,UAAU,oBAAoB,CACxC,EAAU,EACV,EAAe,EACf,IAAmC;IAEnC,MAAM,GAAG,GAAgB,EAAE,CAAC;IAE5B,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,MAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACnC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChB,CAAC;IACH,CAAC;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAgB,cAAc,CAC5B,EAAU,EACV,EAAe,EACf,SAAoB,EACpB,OAAgB,EAChB,cAAoB;IAEpB,MAAM,OAAO,GAAG,IAAI,oBAAU,CAAC;QAC7B,KAAK,EAAE,EAAE;QACT,UAAU,EAAE,EAAE,CAAC,SAAU;QACzB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QACtD,QAAQ,EAAE,CAAC,EAAE,CAAC,cAAc,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9E,QAAQ,EAAE,CAAC,EAAE,CAAC,cAAc,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9E,eAAe,EAAE,EAAE,CAAC,cAAc,EAAE,eAAe,IAAI,IAAI;QAC3D,eAAe,EAAE,IAAA,mCAAmB,EAClC,EAAE,CAAC,SAAU,EACb,EAAE,CAAC,cAAc,EAAE,QAAQ,IAAI,EAAE,CAClC;QACD,KAAK,EAAE,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,KAAK;QACxC,kBAAkB,EAAE,EAAE,CAAC,cAAc,EAAE,kBAAkB,IAAI,KAAK;QAClE,qBAAqB,EAAE,EAAE,CAAC,cAAc,EAAE,qBAAqB,IAAI,KAAK;QACxE,yBAAyB,EACvB,EAAE,CAAC,cAAc,EAAE,yBAAyB,IAAI,KAAK;QACvD,eAAe,EAAE,EAAE,CAAC,cAAc,EAAE,eAAe,IAAI,KAAK;QAC5D,eAAe,EAAE,SAAS,EAAE,YAAY,IAAI,EAAE,CAAC,cAAc,EAAE,eAAe,IAAI,KAAK;QACvF,cAAc,EAAE,EAAE,CAAC,cAAc,EAAE,cAAc,IAAI,KAAK;QAC1D,iBAAiB,EAAE,EAAE,CAAC,cAAc,EAAE,iBAAiB;QACvD,qBAAqB,EAAE,cAAc,EAAE,qBAAqB,IAAI,CAAC;QACjE,iBAAiB,EAAE,CAAC,SAAS,EAAE,QAAQ,IAAI,EAAE,CAAC,iBAAiB,CAAC,IAAI,KAAK;KAC1E,CAAC,CAAC;IAEH,IAAI,EAAE,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;QAC5B,IAAI,CAAC;YACH,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC,CAAA,CAAC;IAChB,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import { InternalOptions } from \"../scraper/scrapeURL\";\nimport { ScrapeOptions, TeamFlags } from \"../controllers/v1/types\";\nimport { WebCrawler } from \"../scraper/WebScraper/crawler\";\nimport { redisEvictConnection } from \"../services/redis\";\nimport { logger as _logger } from \"./logger\";\nimport { getAdjustedMaxDepth } from \"../scraper/WebScraper/utils/maxDepthUtils\";\nimport type { Logger } from \"winston\";\n\nexport type StoredCrawl = {\n  originUrl?: string;\n  crawlerOptions: any;\n  scrapeOptions: Omit<ScrapeOptions, \"timeout\">;\n  internalOptions: InternalOptions;\n  team_id: string;\n  robots?: string;\n  cancelled?: boolean;\n  createdAt: number;\n  maxConcurrency?: number;\n  zeroDataRetention?: boolean;\n};\n\nexport async function saveCrawl(id: string, crawl: StoredCrawl) {\n  _logger.debug(\"Saving crawl \" + id + \" to Redis...\", {\n    crawl,\n    module: \"crawl-redis\",\n    method: \"saveCrawl\",\n    crawlId: id,\n    teamId: crawl.team_id,\n    zeroDataRetention: crawl.zeroDataRetention,\n  });\n  await redisEvictConnection.set(\"crawl:\" + id, JSON.stringify(crawl));\n  await redisEvictConnection.expire(\"crawl:\" + id, 24 * 60 * 60);\n\n  await redisEvictConnection.sadd(\"crawls_by_team_id:\" + crawl.team_id, id);\n  await redisEvictConnection.expire(\"crawls_by_team_id:\" + crawl.team_id, 24 * 60 * 60);\n}\n\nexport async function getCrawlsByTeamId(team_id: string): Promise<string[]> {\n  return await redisEvictConnection.smembers(\"crawls_by_team_id:\" + team_id);\n}\n\nexport async function getCrawl(id: string): Promise<StoredCrawl | null> {\n  const x = await redisEvictConnection.get(\"crawl:\" + id);\n\n  if (x === null) {\n    return null;\n  }\n\n  await redisEvictConnection.expire(\"crawl:\" + id, 24 * 60 * 60);\n  return JSON.parse(x);\n}\n\nexport async function getCrawlExpiry(id: string): Promise<Date> {\n  const d = new Date();\n  const ttl = await redisEvictConnection.pttl(\"crawl:\" + id);\n  d.setMilliseconds(d.getMilliseconds() + ttl);\n  d.setMilliseconds(0);\n  return d;\n}\n\nexport async function addCrawlJob(id: string, job_id: string, __logger: Logger = _logger) {\n  __logger.debug(\"Adding crawl job \" + job_id + \" to Redis...\", {\n    jobId: job_id,\n    module: \"crawl-redis\",\n    method: \"addCrawlJob\",\n    crawlId: id,\n  });\n  await redisEvictConnection.sadd(\"crawl:\" + id + \":jobs\", job_id);\n  await redisEvictConnection.expire(\"crawl:\" + id + \":jobs\", 24 * 60 * 60);\n}\n\nexport async function addCrawlJobs(id: string, job_ids: string[], __logger: Logger = _logger) {\n  if (job_ids.length === 0) return true;\n\n  __logger.debug(\"Adding crawl jobs to Redis...\", {\n    jobIds: job_ids,\n    module: \"crawl-redis\",\n    method: \"addCrawlJobs\",\n    crawlId: id,\n  });\n  await redisEvictConnection.sadd(\"crawl:\" + id + \":jobs\", ...job_ids);\n  await redisEvictConnection.expire(\"crawl:\" + id + \":jobs\", 24 * 60 * 60);\n}\n\nexport async function addCrawlJobDone(\n  id: string,\n  job_id: string,\n  success: boolean,\n  __logger: Logger = _logger,\n) {\n  __logger.debug(\"Adding done crawl job to Redis...\", {\n    jobId: job_id,\n    module: \"crawl-redis\",\n    method: \"addCrawlJobDone\",\n    crawlId: id,\n  });\n  await redisEvictConnection.sadd(\"crawl:\" + id + \":jobs_done\", job_id);\n  await redisEvictConnection.expire(\n    \"crawl:\" + id + \":jobs_done\",\n    24 * 60 * 60,\n  );\n\n  if (success) {\n    await redisEvictConnection.rpush(\"crawl:\" + id + \":jobs_done_ordered\", job_id);\n  } else {\n    // in case it's already been pushed, make sure it's removed\n    await redisEvictConnection.lrem(\n      \"crawl:\" + id + \":jobs_done_ordered\",\n      -1,\n      job_id,\n    );\n  }\n\n  await redisEvictConnection.expire(\n    \"crawl:\" + id + \":jobs_done_ordered\",\n    24 * 60 * 60,\n  );\n}\n\nexport async function getDoneJobsOrderedLength(id: string): Promise<number> {\n  await redisEvictConnection.expire(\"crawl:\" + id + \":jobs_done_ordered\", 24 * 60 * 60);\n  return await redisEvictConnection.llen(\"crawl:\" + id + \":jobs_done_ordered\");\n}\n\nexport async function getDoneJobsOrdered(\n  id: string,\n  start = 0,\n  end = -1,\n): Promise<string[]> {\n  await redisEvictConnection.expire(\"crawl:\" + id + \":jobs_done_ordered\", 24 * 60 * 60);\n  return await redisEvictConnection.lrange(\n    \"crawl:\" + id + \":jobs_done_ordered\",\n    start,\n    end,\n  );\n}\n\nexport async function isCrawlFinished(id: string) {\n  await redisEvictConnection.expire(\"crawl:\" + id + \":kickoff:finish\", 24 * 60 * 60);\n  return (\n    (await redisEvictConnection.scard(\"crawl:\" + id + \":jobs_done\")) ===\n      (await redisEvictConnection.scard(\"crawl:\" + id + \":jobs\")) &&\n    (await redisEvictConnection.get(\"crawl:\" + id + \":kickoff:finish\")) !== null\n  );\n}\n\nexport async function isCrawlKickoffFinished(id: string) {\n  await redisEvictConnection.expire(\"crawl:\" + id + \":kickoff:finish\", 24 * 60 * 60);\n  return (\n    (await redisEvictConnection.get(\"crawl:\" + id + \":kickoff:finish\")) !== null\n  );\n}\n\nexport async function isCrawlFinishedLocked(id: string) {\n  return await redisEvictConnection.exists(\"crawl:\" + id + \":finish\");\n}\n\nexport async function finishCrawlKickoff(id: string) {\n  await redisEvictConnection.set(\n    \"crawl:\" + id + \":kickoff:finish\",\n    \"yes\",\n    \"EX\",\n    24 * 60 * 60,\n  );\n}\n\nexport async function finishCrawlPre(id: string, __logger: Logger = _logger) {\n  if (await isCrawlFinished(id)) {\n    __logger.debug(\"Marking crawl as pre-finished.\", {\n      module: \"crawl-redis\",\n      method: \"finishCrawlPre\",\n      crawlId: id,\n    });\n    const set = await redisEvictConnection.setnx(\"crawl:\" + id + \":finished_pre\", \"yes\");\n    await redisEvictConnection.expire(\"crawl:\" + id + \":finished_pre\", 24 * 60 * 60);\n    return set === 1;\n  }\n}\n\nexport async function unPreFinishCrawl(id: string) {\n  _logger.debug(\"Un-pre-finishing crawl.\", {\n    module: \"crawl-redis\",\n    method: \"unPreFinishCrawl\",\n    crawlId: id,\n  });\n  await redisEvictConnection.del(\"crawl:\" + id + \":finished_pre\");\n}\n\nexport async function finishCrawl(id: string, __logger: Logger = _logger) {\n  __logger.debug(\"Marking crawl as finished.\", {\n    module: \"crawl-redis\",\n    method: \"finishCrawl\",\n    crawlId: id,\n  });\n  await redisEvictConnection.set(\"crawl:\" + id + \":finish\", \"yes\");\n  await redisEvictConnection.expire(\"crawl:\" + id + \":finish\", 24 * 60 * 60);\n  \n  const crawl = await getCrawl(id);\n  if (crawl && crawl.team_id) {\n    await redisEvictConnection.srem(\"crawls_by_team_id:\" + crawl.team_id, id);\n    await redisEvictConnection.expire(\"crawls_by_team_id:\" + crawl.team_id, 24 * 60 * 60);\n  }\n}\n\nexport async function getCrawlJobs(id: string): Promise<string[]> {\n  return await redisEvictConnection.smembers(\"crawl:\" + id + \":jobs\");\n}\n\nexport async function getCrawlJobCount(id: string): Promise<number> {\n  return await redisEvictConnection.scard(\"crawl:\" + id + \":jobs\");\n}\n\nexport function normalizeURL(url: string, sc: StoredCrawl): string {\n  const urlO = new URL(url);\n  if (!sc.crawlerOptions || sc.crawlerOptions.ignoreQueryParameters) {\n    urlO.search = \"\";\n  }\n  urlO.hash = \"\";\n  return urlO.href;\n}\n\nexport function generateURLPermutations(url: string | URL): URL[] {\n  const urlO = new URL(url);\n\n  // Construct two versions, one with www., one without\n  const urlWithWWW = new URL(urlO);\n  const urlWithoutWWW = new URL(urlO);\n  if (urlO.hostname.startsWith(\"www.\")) {\n    urlWithoutWWW.hostname = urlWithWWW.hostname.slice(4);\n  } else {\n    urlWithWWW.hostname = \"www.\" + urlWithoutWWW.hostname;\n  }\n\n  let permutations = [urlWithWWW, urlWithoutWWW];\n\n  // Construct more versions for http/https\n  permutations = permutations.flatMap((urlO) => {\n    if (![\"http:\", \"https:\"].includes(urlO.protocol)) {\n      return [urlO];\n    }\n\n    const urlWithHTTP = new URL(urlO);\n    const urlWithHTTPS = new URL(urlO);\n    urlWithHTTP.protocol = \"http:\";\n    urlWithHTTPS.protocol = \"https:\";\n\n    return [urlWithHTTP, urlWithHTTPS];\n  });\n\n  // Construct more versions for index.html/index.php\n  permutations = permutations.flatMap((urlO) => {\n    const urlWithHTML = new URL(urlO);\n    const urlWithPHP = new URL(urlO);\n    const urlWithBare = new URL(urlO);\n    const urlWithSlash = new URL(urlO);\n\n    if (urlO.pathname.endsWith(\"/\")) {\n      urlWithBare.pathname = urlWithBare.pathname.length === 1 ? urlWithBare.pathname : urlWithBare.pathname.slice(0, -1);\n      urlWithHTML.pathname += \"index.html\";\n      urlWithPHP.pathname += \"index.php\";\n    } else if (urlO.pathname.endsWith(\"/index.html\")) {\n      urlWithPHP.pathname = urlWithPHP.pathname.slice(0, -\"index.html\".length) + \"index.php\";\n      urlWithSlash.pathname = urlWithSlash.pathname.slice(0, -\"index.html\".length);\n      urlWithBare.pathname = urlWithBare.pathname.slice(0, -\"/index.html\".length);\n    } else if (urlO.pathname.endsWith(\"/index.php\")) {\n      urlWithHTML.pathname = urlWithHTML.pathname.slice(0, -\"index.php\".length) + \"index.html\";\n      urlWithSlash.pathname = urlWithSlash.pathname.slice(0, -\"index.php\".length);\n      urlWithBare.pathname = urlWithBare.pathname.slice(0, -\"/index.php\".length);\n    } else {\n      urlWithSlash.pathname += \"/\";\n      urlWithHTML.pathname += \"/index.html\";\n      urlWithPHP.pathname += \"/index.php\";\n    }\n\n    return [urlWithHTML, urlWithPHP, urlWithSlash, urlWithBare];\n  });\n\n  return [...new Set(permutations.map(x => x.href))].map(x => new URL(x));\n}\n\nexport async function lockURL(\n  id: string,\n  sc: StoredCrawl,\n  url: string,\n): Promise<boolean> {\n  if (typeof sc.crawlerOptions?.limit === \"number\") {\n    if (\n      (await redisEvictConnection.scard(\"crawl:\" + id + \":visited_unique\")) >=\n      sc.crawlerOptions.limit\n    ) {\n      return false;\n    }\n  }\n\n  let res: boolean;\n  if (!sc.crawlerOptions?.deduplicateSimilarURLs) {\n    res = (await redisEvictConnection.sadd(\"crawl:\" + id + \":visited\", url)) !== 0;\n  } else {\n    const permutations = generateURLPermutations(url).map((x) => x.href);\n    const x = await redisEvictConnection.sadd(\n      \"crawl:\" + id + \":visited\",\n      ...permutations,\n    );\n    res = x === permutations.length;\n  }\n\n  await redisEvictConnection.expire(\"crawl:\" + id + \":visited\", 24 * 60 * 60);\n\n  if (res) {\n    await redisEvictConnection.sadd(\"crawl:\" + id + \":visited_unique\", url);\n    await redisEvictConnection.expire(\n      \"crawl:\" + id + \":visited_unique\",\n      24 * 60 * 60,\n    );\n  }\n\n  return res;\n}\n\n/// NOTE: does not check limit. only use if limit is checked beforehand e.g. with sitemap\nexport async function lockURLs(\n  id: string,\n  sc: StoredCrawl,\n  urls: string[],\n  __logger: Logger = _logger,\n): Promise<boolean> {\n  if (urls.length === 0) return true;\n\n  urls = urls.map((url) => normalizeURL(url, sc));\n  const logger = __logger.child({\n    crawlId: id,\n    module: \"crawl-redis\",\n    method: \"lockURL\",\n    teamId: sc.team_id,\n  });\n\n  // Add to visited_unique set\n  logger.debug(\"Locking \" + urls.length + \" URLs...\");\n  await redisEvictConnection.sadd(\"crawl:\" + id + \":visited_unique\", ...urls);\n  await redisEvictConnection.expire(\n    \"crawl:\" + id + \":visited_unique\",\n    24 * 60 * 60,\n  );\n\n  let res: boolean;\n  if (!sc.crawlerOptions?.deduplicateSimilarURLs) {\n    const x = await redisEvictConnection.sadd(\"crawl:\" + id + \":visited\", ...urls);\n    res = x === urls.length;\n  } else {\n    const allPermutations = urls.flatMap((url) =>\n      generateURLPermutations(url).map((x) => x.href),\n    );\n    logger.debug(\"Adding \" + allPermutations.length + \" URL permutations...\");\n    const x = await redisEvictConnection.sadd(\n      \"crawl:\" + id + \":visited\",\n      ...allPermutations,\n    );\n    res = x === allPermutations.length;\n  }\n\n  await redisEvictConnection.expire(\"crawl:\" + id + \":visited\", 24 * 60 * 60);\n\n  logger.debug(\"lockURLs final result: \" + res, { res });\n  return res;\n}\n\nexport async function lockURLsIndividually(\n  id: string,\n  sc: StoredCrawl,\n  jobs: { id: string; url: string }[],\n) {\n  const out: typeof jobs = [];\n\n  for (const job of jobs) {\n    if (await lockURL(id, sc, job.url)) {\n      out.push(job);\n    }\n  }\n\n  return out;\n}\n\nexport function crawlToCrawler(\n  id: string,\n  sc: StoredCrawl,\n  teamFlags: TeamFlags,\n  newBase?: string,\n  crawlerOptions?: any,\n): WebCrawler {\n  const crawler = new WebCrawler({\n    jobId: id,\n    initialUrl: sc.originUrl!,\n    baseUrl: newBase ? new URL(newBase).origin : undefined,\n    includes: (sc.crawlerOptions?.includes ?? []).filter(x => x.trim().length > 0),\n    excludes: (sc.crawlerOptions?.excludes ?? []).filter(x => x.trim().length > 0),\n    maxCrawledLinks: sc.crawlerOptions?.maxCrawledLinks ?? 1000,\n    maxCrawledDepth: getAdjustedMaxDepth(\n      sc.originUrl!,\n      sc.crawlerOptions?.maxDepth ?? 10,\n    ),\n    limit: sc.crawlerOptions?.limit ?? 10000,\n    generateImgAltText: sc.crawlerOptions?.generateImgAltText ?? false,\n    allowBackwardCrawling: sc.crawlerOptions?.allowBackwardCrawling ?? false,\n    allowExternalContentLinks:\n      sc.crawlerOptions?.allowExternalContentLinks ?? false,\n    allowSubdomains: sc.crawlerOptions?.allowSubdomains ?? false,\n    ignoreRobotsTxt: teamFlags?.ignoreRobots ?? sc.crawlerOptions?.ignoreRobotsTxt ?? false,\n    regexOnFullURL: sc.crawlerOptions?.regexOnFullURL ?? false,\n    maxDiscoveryDepth: sc.crawlerOptions?.maxDiscoveryDepth,\n    currentDiscoveryDepth: crawlerOptions?.currentDiscoveryDepth ?? 0,\n    zeroDataRetention: (teamFlags?.forceZDR || sc.zeroDataRetention) ?? false,\n  });\n\n  if (sc.robots !== undefined) {\n    try {\n      crawler.importRobotsTxt(sc.robots);\n    } catch (_) {}\n  }\n\n  return crawler;\n}\n"]}