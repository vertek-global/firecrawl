{"version":3,"file":"withAuth.js","sourceRoot":"","sources":["../../../src/lib/withAuth.ts"],"names":[],"mappings":";;AAQA,4BAgBC;AAvBD,qCAAkC;AAElC,mCAAsC;AACtC,IAAA,qBAAY,GAAE,CAAC;AAEf,IAAI,YAAY,GAAG,CAAC,CAAC;AAErB,SAAgB,QAAQ,CACtB,gBAA4C,EAC5C,WAAc;IAEd,OAAO,KAAK,WAAW,GAAG,IAAO;QAC/B,MAAM,mBAAmB,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,MAAM,CAAC;QACzE,IAAI,CAAC,mBAAmB,EAAE,CAAC;YACzB,IAAI,YAAY,GAAG,CAAC,EAAE,CAAC;gBACrB,eAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,YAAY,EAAE,CAAC;YACjB,CAAC;YACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,WAAW,IAAI,EAAE,CAAC,EAAO,CAAC;QACxD,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;QACzC,CAAC;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { AuthResponse } from \"../../src/types\";\nimport { logger } from \"./logger\";\nimport * as Sentry from \"@sentry/node\";\nimport { configDotenv } from \"dotenv\";\nconfigDotenv();\n\nlet warningCount = 0;\n\nexport function withAuth<T, U extends any[]>(\n  originalFunction: (...args: U) => Promise<T>,\n  mockSuccess: T,\n) {\n  return async function (...args: U): Promise<T> {\n    const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n    if (!useDbAuthentication) {\n      if (warningCount < 5) {\n        logger.warn(\"You're bypassing authentication\");\n        warningCount++;\n      }\n      return { success: true, ...(mockSuccess || {}) } as T;\n    } else {\n      return await originalFunction(...args);\n    }\n  };\n}\n"]}