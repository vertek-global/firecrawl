{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../../src/lib/logger.ts"],"names":[],"mappings":"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","sourcesContent":["import * as winston from \"winston\";\n\nimport { configDotenv } from \"dotenv\";\nconfigDotenv();\n\nconst logFormat = winston.format.printf(\n  (info) =>\n    `${info.timestamp} ${info.level} [${info.metadata.module ?? \"\"}:${info.metadata.method ?? \"\"}]: ${info.message} ${\n      info.level.includes(\"error\") || info.level.includes(\"warn\")\n        ? JSON.stringify(info.metadata, (_, value) => {\n            if (value instanceof Error) {\n              return {\n                ...value,\n                name: value.name,\n                message: value.message,\n                stack: value.stack,\n                cause: value.cause,\n              };\n            } else {\n              return value;\n            }\n          })\n        : \"\"\n    }`,\n);\n\n// Filter function to prevent logging when zeroDataRetention is true\nconst zeroDataRetentionFilter = winston.format((info) => {\n  if (info.metadata?.zeroDataRetention === true || info.zeroDataRetention === true) {\n    return false; // Don't log this message\n  }\n  return info;\n})();\n\nexport const logger = winston.createLogger({\n  level: process.env.LOGGING_LEVEL?.toLowerCase() ?? \"debug\",\n  format: winston.format.json({\n    replacer(key, value) {\n      if (value instanceof Error) {\n        return {\n          ...value,\n          name: value.name,\n          message: value.message,\n          stack: value.stack,\n          cause: value.cause,\n        };\n      } else {\n        return value;\n      }\n    },\n  }),\n  transports: [\n    ...(process.env.FIRECRAWL_LOG_TO_FILE\n      ? [\n          new winston.transports.File({\n            filename:\n              \"firecrawl-\" +\n              (process.argv[1].includes(\"worker\") ? \"worker\" : \"app\") +\n              \"-\" +\n              crypto.randomUUID() +\n              \".log\",\n            format: winston.format.combine(\n              zeroDataRetentionFilter,\n              winston.format.json()\n            ),\n          }),\n        ]\n      : []),\n    new winston.transports.Console({\n      format: winston.format.combine(\n        zeroDataRetentionFilter,\n        winston.format.timestamp({ format: \"YYYY-MM-DD HH:mm:ss\" }),\n        winston.format.metadata({\n          fillExcept: [\"message\", \"level\", \"timestamp\"],\n        }),\n        ...((process.env.ENV === \"production\" &&\n          process.env.SENTRY_ENVIRONMENT === \"dev\") ||\n        process.env.ENV !== \"production\"\n          ? [winston.format.colorize(), logFormat]\n          : []),\n      ),\n    }),\n  ],\n});\n"]}