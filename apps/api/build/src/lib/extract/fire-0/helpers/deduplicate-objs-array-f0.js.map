{"version":3,"file":"deduplicate-objs-array-f0.js","sourceRoot":"","sources":["../../../../../../src/lib/extract/fire-0/helpers/deduplicate-objs-array-f0.ts"],"names":[],"mappings":";;AAAA,gEA4BC;AA5BD,SAAgB,0BAA0B,CAAC,QAAkC;IAG3E,MAAM,oBAAoB,GAA6B,EAAE,CAAC;IAE1D,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YACvB,oBAAoB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxD,mEAAmE;gBACnE,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAExC,gDAAgD;gBAChD,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,KAAK,CAAC,CAAC,iCAAiC;gBACjD,CAAC;gBAED,kDAAkD;gBAClD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACrB,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,mDAAmD;YACnD,oBAAoB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,OAAO,oBAAoB,CAAC;AAC9B,CAAC","sourcesContent":["export function deduplicateObjectsArray_F0(objArray: { [key: string]: any[] }): {\n  [key: string]: any[];\n} {\n  const deduplicatedObjArray: { [key: string]: any[] } = {};\n\n  for (const key in objArray) {\n    if (Array.isArray(objArray[key])) {\n      const seen = new Set();\n      deduplicatedObjArray[key] = objArray[key].filter((item) => {\n        // Create a unique identifier for each item based on its properties\n        const identifier = JSON.stringify(item);\n\n        // Check if this identifier has been seen before\n        if (seen.has(identifier)) {\n          return false; // Duplicate found, filter it out\n        }\n\n        // Add the identifier to the set and keep the item\n        seen.add(identifier);\n        return true;\n      });\n    } else {\n      // If the value is not an array, just copy it as is\n      deduplicatedObjArray[key] = objArray[key];\n    }\n  }\n\n  return deduplicatedObjArray;\n}\n"]}