{"version":3,"file":"merge-null-val-objs-f0.js","sourceRoot":"","sources":["../../../../../../src/lib/extract/fire-0/helpers/merge-null-val-objs-f0.ts"],"names":[],"mappings":"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","sourcesContent":["import { deduplicateObjectsArray_F0 } from \"./deduplicate-objs-array-f0\";\n\n/**\n * Convert \"null\" strings to actual null values for easier comparison.\n */\nfunction unifyValue(val: any): any {\n  return val === \"null\" ? null : val;\n}\n\n/**\n * Convert all \"null\" strings in an object to actual null values.\n */\nfunction unifyItemValues<T extends object>(item: T): T {\n  const unifiedItem: any = {};\n  for (const key of Object.keys(item)) {\n    unifiedItem[key] = unifyValue(item[key]);\n  }\n  return unifiedItem;\n}\n\n/**\n * Check if two objects are mergeable by comparing their non-null values\n */\nexport function areMergeable_F0(obj1: any, obj2: any): boolean {\n  const allKeys = new Set([...Object.keys(obj1), ...Object.keys(obj2)]);\n  let matchingNonNullValues = 0;\n  let nonNullComparisons = 0;\n\n  for (const key of allKeys) {\n    const val1 = obj1[key];\n    const val2 = obj2[key];\n\n    // Skip array comparisons - they'll be merged separately\n    if (Array.isArray(val1) || Array.isArray(val2)) {\n      continue;\n    }\n\n    // If both values exist and are not null\n    if (val1 !== null && val2 !== null) {\n      nonNullComparisons++;\n      if (val1 === val2) {\n        matchingNonNullValues++;\n      }\n    }\n  }\n\n  // Objects are mergeable if they have at least one matching non-null value\n  // and all their non-null values match when both objects have them\n  return nonNullComparisons > 0 && matchingNonNullValues === nonNullComparisons;\n}\n\n/**\n * Merge arrays and remove duplicates\n */\nfunction mergeArrays(arr1: any[], arr2: any[]): any[] {\n  const combined = [...arr1, ...arr2];\n  return combined.filter((item, index) => {\n    const stringified = JSON.stringify(item);\n    return (\n      combined.findIndex((other) => JSON.stringify(other) === stringified) ===\n      index\n    );\n  });\n}\n\n/**\n * Merge two objects, taking non-null values over null values\n */\nfunction mergeObjects(obj1: any, obj2: any): any {\n  const result = { ...obj1 };\n\n  for (const key in obj2) {\n    if (obj2.hasOwnProperty(key)) {\n      // If obj2's value is non-null, it should override obj1's value\n      if (obj2[key] !== null) {\n        if (Array.isArray(obj2[key])) {\n          // If both are arrays, merge them\n          if (Array.isArray(result[key])) {\n            result[key] = mergeArrays(result[key], obj2[key]);\n          } else {\n            // If only obj2's value is an array, use it\n            result[key] = [...obj2[key]];\n          }\n        } else if (typeof obj2[key] === \"object\") {\n          // If both are objects (but not arrays), merge them\n          if (typeof result[key] === \"object\" && !Array.isArray(result[key])) {\n            result[key] = mergeObjects(result[key], obj2[key]);\n          } else {\n            result[key] = { ...obj2[key] };\n          }\n        } else {\n          // For primitive values, obj2's non-null value always wins\n          result[key] = obj2[key];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Merges arrays of objects by combining those that are identical except for\n * null-equivalent fields, filling in null fields with the corresponding\n * non-null fields from the other object.\n */\nexport function mergeNullValObjs_F0(objArray: { [key: string]: any[] }): {\n  [key: string]: any[];\n} {\n  const result: { [key: string]: any[] } = {};\n\n  for (const key in objArray) {\n    if (Array.isArray(objArray[key])) {\n      // If array contains only primitive values, return as is\n      if (\n        objArray[key].every((item) => typeof item !== \"object\" || item === null)\n      ) {\n        result[key] = [...objArray[key]];\n        continue;\n      }\n\n      const items = objArray[key].map(unifyItemValues);\n      const mergedItems: any[] = [];\n\n      for (const item of items) {\n        let merged = false;\n\n        for (let i = 0; i < mergedItems.length; i++) {\n          if (areMergeable_F0(mergedItems[i], item)) {\n            mergedItems[i] = mergeObjects(mergedItems[i], item);\n            merged = true;\n            break;\n          }\n        }\n\n        if (!merged) {\n          mergedItems.push({ ...item });\n        }\n      }\n\n      // Final deduplication pass\n      result[key] = deduplicateObjectsArray_F0({ [key]: mergedItems })[key];\n    } else {\n      console.warn(\n        `Expected an array at objArray[${key}], but found:`,\n        objArray[key],\n      );\n      return objArray;\n    }\n  }\n\n  return result;\n}\n"]}