{"version":3,"file":"team-id-sync.js","sourceRoot":"","sources":["../../../../src/lib/extract/team-id-sync.ts"],"names":[],"mappings":";;;AAAA,sDAAgF;AAChF,sCAAmC;AAEnC,0CAAuC;AAEvC,KAAK,UAAU,sBAAsB,CAAC,MAAc;IAClD,IAAI,CAAC;QACH,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,8BAAmB;aAC9C,IAAI,CAAC,SAAS,CAAC;aACf,MAAM,CAAC,SAAS,CAAC;aACjB,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;aACrB,KAAK,CAAC,CAAC,CAAC,CAAC;QACZ,IAAI,KAAK,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IACzB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAEY,QAAA,cAAc,GAAG,IAAA,mBAAQ,EAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC","sourcesContent":["import { supabase_rr_service, supabase_service } from \"../../services/supabase\";\nimport { logger } from \"../logger\";\n\nimport { withAuth } from \"../withAuth\";\n\nasync function getTeamIdSyncBOriginal(teamId: string) {\n  try {\n    const { data, error } = await supabase_rr_service\n      .from(\"eb-sync\")\n      .select(\"team_id\")\n      .eq(\"team_id\", teamId)\n      .limit(1);\n    if (error) {\n      throw new Error(\"Error getting team id (sync b)\");\n    }\n    return data[0] ?? null;\n  } catch (error) {\n    logger.error(\"Error getting team id (sync b)\", error);\n    return null;\n  }\n}\n\nexport const getTeamIdSyncB = withAuth(getTeamIdSyncBOriginal, null);\n"]}