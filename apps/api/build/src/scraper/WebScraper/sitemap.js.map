{"version":3,"file":"sitemap.js","sourceRoot":"","sources":["../../../../src/scraper/WebScraper/sitemap.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseStringPromise } from \"xml2js\";\nimport { WebCrawler } from \"./crawler\";\nimport { scrapeURL } from \"../scrapeURL\";\nimport { scrapeOptions, TimeoutSignal } from \"../../controllers/v1/types\";\nimport type { Logger } from \"winston\";\nimport { CostTracking } from \"../../lib/extract/extraction-service\";\nconst useFireEngine =\n  process.env.FIRE_ENGINE_BETA_URL !== \"\" &&\n  process.env.FIRE_ENGINE_BETA_URL !== undefined;\nexport async function getLinksFromSitemap(\n  {\n    sitemapUrl,\n    urlsHandler,\n    mode = \"axios\",\n    maxAge = 0,\n    zeroDataRetention,\n  }: {\n    sitemapUrl: string;\n    urlsHandler(urls: string[]): unknown;\n    mode?: \"axios\" | \"fire-engine\";\n    maxAge?: number;\n    zeroDataRetention: boolean;\n  },\n  logger: Logger,\n  crawlId: string,\n  sitemapsHit: Set<string>,\n  abort?: AbortSignal,\n  mock?: string,\n): Promise<number> {\n  if (sitemapsHit.size >= 20) {\n    return 0;\n  }\n\n  if (sitemapsHit.has(sitemapUrl)) {\n    logger.warn(\"This sitemap has already been hit.\", { sitemapUrl });\n    return 0;\n  }\n\n  sitemapsHit.add(sitemapUrl);\n\n  try {\n    let content: string = \"\";\n    try {\n      const response = await scrapeURL(\n        \"sitemap;\" + crawlId,\n        sitemapUrl,\n        scrapeOptions.parse({ formats: [\"rawHtml\"], useMock: mock, maxAge }),\n        {\n          forceEngine: [\n            ...(maxAge > 0 ? [\"index\" as const] : []),\n            \"fetch\",\n            ...((mode === \"fire-engine\" && useFireEngine) ? [\"fire-engine;tlsclient\" as const] : []),\n          ],\n          v0DisableJsDom: true,\n          abort,\n          teamId: \"sitemap\",\n          zeroDataRetention,\n        },\n        new CostTracking(),\n      );\n\n      if (\n        response.success &&\n        response.document.metadata.statusCode >= 200 &&\n        response.document.metadata.statusCode < 300\n      ) {\n        content = response.document.rawHtml!;\n      } else {\n        logger.error(\n          `Request failed for sitemap fetch`,\n          {\n            method: \"getLinksFromSitemap\",\n            mode,\n            sitemapUrl,\n            error: response.success\n              ? response.document\n              : response.error,\n          },\n        );\n        return 0;\n      }\n    } catch (error) {\n      if (error instanceof TimeoutSignal) {\n        throw error;\n      } else {\n        logger.error(`Request failed for sitemap fetch`, {\n          method: \"getLinksFromSitemap\",\n          mode,\n          sitemapUrl,\n          error,\n        });\n  \n        return 0;\n      }\n    }\n\n    const parsed = await parseStringPromise(content);\n    const root = parsed.urlset || parsed.sitemapindex;\n    let count = 0;\n\n    if (root && root.sitemap) {\n      // Handle sitemap index files\n      const sitemapUrls = root.sitemap\n        .filter((sitemap) => sitemap.loc && sitemap.loc.length > 0)\n        .map((sitemap) => sitemap.loc[0].trim());\n\n      const sitemapPromises: Promise<number>[] = sitemapUrls.map((sitemapUrl) =>\n        getLinksFromSitemap({ sitemapUrl, urlsHandler, mode, zeroDataRetention }, logger, crawlId, sitemapsHit, abort, mock),\n      );\n\n      const results = await Promise.all(sitemapPromises);\n      count = results.reduce((a, x) => a + x);\n    } else if (root && root.url) {\n      // Check if any URLs point to additional sitemaps\n      const xmlSitemaps: string[] = root.url\n        .filter(\n          (url) =>\n            url.loc &&\n            url.loc.length > 0 &&\n            url.loc[0].trim().toLowerCase().endsWith(\".xml\"),\n        )\n        .map((url) => url.loc[0].trim());\n\n      if (xmlSitemaps.length > 0) {\n        // Recursively fetch links from additional sitemaps\n        const sitemapPromises = xmlSitemaps.map((sitemapUrl) =>\n          getLinksFromSitemap(\n            { sitemapUrl: sitemapUrl, urlsHandler, mode, zeroDataRetention },\n            logger,\n            crawlId,\n            sitemapsHit,\n            abort,\n            mock,\n          ),\n        );\n        count += (await Promise.all(sitemapPromises)).reduce(\n          (a, x) => a + x,\n          0,\n        );\n      }\n\n      const validUrls = root.url\n        .filter(\n          (url) =>\n            url.loc &&\n            url.loc.length > 0 &&\n            !url.loc[0].trim().toLowerCase().endsWith(\".xml\") &&\n            !WebCrawler.prototype.isFile(url.loc[0].trim()),\n        )\n        .map((url) => url.loc[0].trim());\n      count += validUrls.length;\n\n      const h = urlsHandler(validUrls);\n      if (h instanceof Promise) {\n        await h;\n      }\n    }\n\n    return count;\n  } catch (error) {\n    logger.debug(`Error processing sitemapUrl: ${sitemapUrl}`, {\n      method: \"getLinksFromSitemap\",\n      mode,\n      sitemapUrl,\n      error,\n    });\n  }\n\n  return 0;\n}\n"]}