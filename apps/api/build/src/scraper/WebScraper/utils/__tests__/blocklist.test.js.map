{"version":3,"file":"blocklist.test.js","sourceRoot":"","sources":["../../../../../../src/scraper/WebScraper/utils/__tests__/blocklist.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { decryptAES, isUrlBlocked } from \"../blocklist\";\n\nconst hashKey = Buffer.from(process.env.HASH_KEY || \"\", \"utf-8\");\n\ndescribe(\"isUrlBlocked function\", () => {\n  beforeAll(() => {\n    // Mock the decryptedBlocklist function to return known values\n    jest\n      .spyOn(require(\"../blocklist\"), \"decryptedBlocklist\")\n      .mockReturnValue([\n        \"h8ngAFXUNLO3ZqQufJjGVA==\",\n        \"fEGiDm/TWDBkXUXejFVICg==\",\n        \"l6Mei7IGbEmTTFoSudUnqQ==\",\n        \"4OjallJzXRiZUAWDiC2Xww==\",\n        \"ReSvkSfx34TNEdecmmSDdQ==\",\n        \"X1E4WtdmXAv3SAX9xN925Q==\",\n        \"VTzBQfMtXZzM05mnNkWkjA==\",\n        \"m/q4Lb2Z8cxwU7/CoztOFg==\",\n        \"UbVnmRaeG+gKcyVDLAm0vg==\",\n        \"xNQhczYG22tTVc6lYE3qwg==\",\n        \"CQfGDydbg4l1swRCru6O6Q==\",\n        \"l86LQxm2NonTWMauXwEsPw==\",\n        \"6v4QDUcwjnID80G+uU+tgw==\",\n        \"pCF/6nrKZAxaYntzEGluZQ==\",\n        \"r0CRhAmQqSe7V2s3073T00sAh4WcS5779jwuGJ26ows==\",\n        \"aBOVqRFBM4UVg33usY10NdiF0HCnFH/ImtD0n+zIpc8==\",\n        \"QV436UZuQ6D0Dqrx9MwaGw==\",\n        \"OYVvrwILYbzA2mSSqOPPpw==\",\n        \"xW2i4C0Dzcnp+qu12u0SAw==\",\n        \"OLHba209l0dfl0MI4EnQonBITK9z8Qwgd/NsuaTkXmA=\",\n        \"X0VynmNjpL3PrYxpUIG7sFMBt8OlrmQWtxj8oXVu2QM=\",\n        \"ObdlM5NEkvBJ/sojRW5K/Q==\",\n        \"C8Th38X0SjsE1vL/OsD8bA==\",\n        \"PTbGg8PK/h0Seyw4HEpK4Q==\",\n        \"lZdQMknjHb7+4+sjF3qNTw==\",\n        \"LsgSq54q5oDysbva29JxnQ==\",\n        \"KZfBtpwjOpdSoqacRbz7og==\",\n        \"Indtl4yxJMHCKBGF4KABCQ==\",\n        \"e3HFXLVgxhaVoadYpwb2BA==\",\n        \"b+asgLayXQ5Jq+se+q56jA==\",\n        \"86ZDUI7vmp4MvNq3fvZrGQ==\",\n        \"sEGFoYZ6GEg4Zocd+TiyfQ==\",\n        \"6OOL72eXthgnJ1Hj4PfOQQ==\",\n        \"g/ME+Sh1CAFboKrwkVb+5Q==\",\n        \"Pw+xawUoX8xBYbX2yqqGWQ==\",\n        \"k6vBalxYFhAvkPsF19t9gQ==\",\n        \"b+asgLayXQ5Jq+se+q56jA==\",\n        \"KKttwRz4w+AMJrZcB828WQ==\",\n        \"vMdzZ33BXoyWVZnAPOBcrg==\",\n        \"l8GDVI8w/ueHnNzdN1ODuQ==\",\n        \"+yz9bnYYMnC0trJZGJwf6Q==\",\n      ]);\n  });\n\n  test(\"Blocks exact domain with and without protocol\", () => {\n    expect(isUrlBlocked(decryptAES(\"KZfBtpwjOpdSoqacRbz7og==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(\n      isUrlBlocked(\n        decryptAES(\"TemsdmaA9kBK9cVJTaAmZksAh4WcS5779jwuGJ26ows=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n    expect(\n      isUrlBlocked(\n        decryptAES(\"0pCVMPgc7+IMrLjIA5lFV0ttO4rKIA14yZBb+2FDG7I=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n    expect(\n      isUrlBlocked(\n        decryptAES(\"m+PjIWE9E4GF3lA/B9cUMDj3smbHhZYOGxP74UTmd3M=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n  });\n\n  test(\"Blocks subdomains of a blocked domain\", () => {\n    expect(\n      isUrlBlocked(\n        decryptAES(\"m+PjIWE9E4GF3lA/B9cUMDj3smbHhZYOGxP74UTmd3M=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n    expect(\n      isUrlBlocked(\n        decryptAES(\"o/ClKrW6Qo0uidbD2X8cVjj3smbHhZYOGxP74UTmd3M=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n    expect(\n      isUrlBlocked(\n        decryptAES(\"Z53Ny7rvn7cBX/2bYpOZrRDosKfU7BiSM0OClb4bdWY=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n  });\n\n  test(\"Blocks different TLDs (BLOCKED-DOMAIN.pt, BLOCKED-DOMAIN.io)\", () => {\n    expect(isUrlBlocked(decryptAES(\"vUMeqQdqk7ajwczYBr6prA==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(isUrlBlocked(decryptAES(\"WOjW9VwGwrPu846jDo6VQg==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(isUrlBlocked(decryptAES(\"Ti3vVa6sRew3wyTZ7a/Yag==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(\n      isUrlBlocked(\n        decryptAES(\"0pCVMPgc7+IMrLjIA5lFV5cYWcOWC5LGWwvlbCW2GH4=\", hashKey),\n        null,\n      ),\n    ).toBe(true);\n  });\n\n  test(\"Allows unrelated domains like whateverfacebook.com\", () => {\n    expect(isUrlBlocked(\"whateverfacebook.com\", null)).toBe(false);\n    expect(isUrlBlocked(\"https://whateverfacebook.com\", null)).toBe(false);\n  });\n\n  test(\"Blocks other domains from the blocklist\", () => {\n    expect(isUrlBlocked(decryptAES(\"e3HFXLVgxhaVoadYpwb2BA==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(isUrlBlocked(decryptAES(\"XS61fAjZb5JfAWsyzzOoCQ==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(isUrlBlocked(decryptAES(\"Indtl4yxJMHCKBGF4KABCQ==\", hashKey), null)).toBe(\n      true,\n    );\n    expect(isUrlBlocked(decryptAES(\"86ZDUI7vmp4MvNq3fvZrGQ==\", hashKey), null)).toBe(\n      true,\n    );\n  });\n\n  test(\"Allows allowed keywords URLs [developers.*, library.*, ads.*]\", () => {\n    expect(\n      isUrlBlocked(\n        decryptAES(\n          \"4H7Uyz6sSCwE3mne1SsGU+6gs7VssjM3e5C6qsyUPUnhsthhQp2bAQwZ9xSCJsjB\",\n          hashKey,\n        ),\n        null,\n      ),\n    ).toBe(false);\n    expect(\n      isUrlBlocked(\n        decryptAES(\"rNA7JWR/voEnzAqpC4QJAYgZUratpaNBCBVujdFqDb0=\", hashKey),\n        null,\n      ),\n    ).toBe(false);\n    expect(\n      isUrlBlocked(\n        decryptAES(\"ipHiDz83ep6vbIMee94+4XtxxVy1YMYWlaGnWKcG9gQ=\", hashKey),\n        null,\n      ),\n    ).toBe(false);\n  });\n\n  test(\"Should return false if the URL is invalid\", () => {\n    expect(isUrlBlocked(\"randomstring\", null)).toBe(false);\n    expect(isUrlBlocked(\"htp://bad.url\", null)).toBe(false);\n      expect(isUrlBlocked(\"\", null)).toBe(false);\n  });\n\n  test(\"Should respect flags\", () => {\n    const decryptedDomain = decryptAES(\"e3HFXLVgxhaVoadYpwb2BA==\", hashKey);\n\n    expect(isUrlBlocked(decryptedDomain, {\n      unblockedDomains: [decryptedDomain],\n    })).toBe(false);\n  });\n});\n"]}