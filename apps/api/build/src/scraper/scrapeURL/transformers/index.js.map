{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/scraper/scrapeURL/transformers/index.ts"],"names":[],"mappings":";;;AAoBA,8DAeC;AAED,sDAgBC;AAED,wDAuBC;AAED,kDAaC;AAED,sDAwGC;AAiBD,kDAqBC;AA7OD,oEAA8D;AAG9D,0EAA8D;AAC9D,sDAAmD;AACnD,4DAAyD;AACzD,6CAAiD;AACjD,yDAAsD;AACtD,6DAA0D;AAC1D,mCAAuC;AAEvC,iCAAoC;AACpC,mDAAmD;AACnD,kDAA6D;AAOtD,KAAK,UAAU,yBAAyB,CAC7C,IAAU,EACV,QAAkB;IAElB,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;QACnC,MAAM,IAAI,KAAK,CACb,uEAAuE,CACxE,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,QAAQ,GAAG;QAClB,GAAG,CAAC,MAAM,IAAA,iCAAe,EAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;QAClD,GAAG,QAAQ,CAAC,QAAQ;KACrB,CAAC;IACF,OAAO,QAAQ,CAAC;AAClB,CAAC;AAEM,KAAK,UAAU,qBAAqB,CACzC,IAAU,EACV,QAAkB;IAElB,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;QACnC,MAAM,IAAI,KAAK,CACb,uEAAuE,CACxE,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,IAAI,GAAG,MAAM,IAAA,sCAAa,EACjC,QAAQ,CAAC,OAAO,EAChB,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,EACrF,IAAI,CAAC,OAAO,CACb,CAAC;IACF,OAAO,QAAQ,CAAC;AAClB,CAAC;AAEM,KAAK,UAAU,sBAAsB,CAC1C,KAAW,EACX,QAAkB;IAElB,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAChC,MAAM,IAAI,KAAK,CACb,oEAAoE,CACrE,CAAC;IACJ,CAAC;IAED,IAAI,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;QAChE,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;YACnC,MAAM,IAAI,KAAK,CACb,uEAAuE,CACxE,CAAC;QACJ,CAAC;QAED,QAAQ,CAAC,QAAQ,GAAG,WAAW,GAAG,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7D,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,QAAQ,GAAG,MAAM,IAAA,gCAAa,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAEM,KAAK,UAAU,mBAAmB,CAAC,IAAU,EAAE,QAAkB;IACtE,uCAAuC;IACvC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3C,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAChC,MAAM,IAAI,KAAK,CACb,oEAAoE,CACrE,CAAC;QACJ,CAAC;QAED,QAAQ,CAAC,KAAK,GAAG,MAAM,IAAA,2BAAY,EAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5I,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAgB,qBAAqB,CACnC,IAAU,EACV,QAAkB;IAElB,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAE9C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;QAChE,OAAO,QAAQ,CAAC,QAAQ,CAAC;IAC3B,CAAC;SAAM,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,8EAA8E,CAC/E,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;QAC9D,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;SAAM,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,4EAA4E,CAC7E,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QACxD,OAAO,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;SAAM,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,sEAAsE,CACvE,CAAC;IACJ,CAAC;IAED,IACE,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;QAC1B,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QACnC,QAAQ,CAAC,UAAU,KAAK,SAAS,EACjC,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,6GAA6G,CAC9G,CAAC;QACF,OAAO,QAAQ,CAAC,UAAU,CAAC;IAC7B,CAAC;SAAM,IACL,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACjE,QAAQ,CAAC,UAAU,KAAK,SAAS,EACjC,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,wGAAwG,CACzG,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,mGAAmG,CACpG,CAAC;QACF,OAAO,QAAQ,CAAC,KAAK,CAAC;IACxB,CAAC;SAAM,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,wEAAwE,CACzE,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,CAAC,EAAE,CAAC;QAC/F,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,+GAA+G,CAChH,CAAC;QACF,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;SAAM,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QACnG,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,2EAA2E,CAC5E,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,QAAQ,CAAC,cAAc,KAAK,SAAS,EAAE,CAAC;QAC5E,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,sHAAsH,CACvH,CAAC;QACF,OAAO,QAAQ,CAAC,cAAc,CAAC;IACjC,CAAC;SAAM,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,QAAQ,CAAC,cAAc,KAAK,SAAS,EAAE,CAAC;QAClF,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,yFAAyF,CAC1F,CAAC;IACJ,CAAC;IAED,IAAI,QAAQ,CAAC,cAAc;QACvB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClE,QAAQ,CAAC,cAAc,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,yGAAyG,CAC1G,CAAC;QACF,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC;IACtC,CAAC;IAED,IAAI,QAAQ,CAAC,cAAc;QACvB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9D,QAAQ,CAAC,cAAc,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,iHAAiH,CAClH,CAAC;QACF,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC;IACtC,CAAC;IAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC5E,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,+CAA+C;AAClC,QAAA,gBAAgB,GAAkB;IAC7C,qBAAqB;IACrB,sBAAsB;IACtB,mBAAmB;IACnB,yBAAyB;IACzB,mCAAgB;IAChB,GAAG,CAAC,gBAAQ,CAAC,CAAC,CAAC,CAAC,2BAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC1C,8BAAiB;IACjB,oBAAY;IACZ,iBAAU;IACV,qBAAqB;IACrB,uCAAkB;CACnB,CAAC;AAEK,KAAK,UAAU,mBAAmB,CACvC,IAAU,EACV,QAAkB;IAElB,MAAM,UAAU,GAAuB,EAAE,CAAC;IAE1C,KAAK,MAAM,WAAW,IAAI,wBAAgB,EAAE,CAAC;QAC3C,MAAM,KAAK,GAAG;YACZ,GAAG,IAAI;YACP,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBACxB,MAAM,EAAE,sBAAsB,GAAG,WAAW,CAAC,IAAI;aAClD,CAAC;SACH,CAAC;QACF,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACzB,QAAQ,GAAG,MAAM,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC9C,UAAU,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;IAE5D,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import { parseMarkdown } from \"../../../lib/html-to-markdown\";\nimport { Meta } from \"..\";\nimport { Document } from \"../../../controllers/v1/types\";\nimport { htmlTransform } from \"../lib/removeUnwantedElements\";\nimport { extractLinks } from \"../lib/extractLinks\";\nimport { extractMetadata } from \"../lib/extractMetadata\";\nimport { performLLMExtract } from \"./llmExtract\";\nimport { uploadScreenshot } from \"./uploadScreenshot\";\nimport { removeBase64Images } from \"./removeBase64Images\";\nimport { performAgent } from \"./agent\";\n\nimport { deriveDiff } from \"./diff\";\nimport { useIndex } from \"../../../services/index\";\nimport { sendDocumentToIndex } from \"../engines/index/index\";\n\nexport type Transformer = (\n  meta: Meta,\n  document: Document,\n) => Document | Promise<Document>;\n\nexport async function deriveMetadataFromRawHTML(\n  meta: Meta,\n  document: Document,\n): Promise<Document> {\n  if (document.rawHtml === undefined) {\n    throw new Error(\n      \"rawHtml is undefined -- this transformer is being called out of order\",\n    );\n  }\n\n  document.metadata = {\n    ...(await extractMetadata(meta, document.rawHtml)),\n    ...document.metadata,\n  };\n  return document;\n}\n\nexport async function deriveHTMLFromRawHTML(\n  meta: Meta,\n  document: Document,\n): Promise<Document> {\n  if (document.rawHtml === undefined) {\n    throw new Error(\n      \"rawHtml is undefined -- this transformer is being called out of order\",\n    );\n  }\n\n  document.html = await htmlTransform(\n    document.rawHtml,\n    document.metadata.url ?? document.metadata.sourceURL ?? meta.rewrittenUrl ?? meta.url,\n    meta.options,\n  );\n  return document;\n}\n\nexport async function deriveMarkdownFromHTML(\n  _meta: Meta,\n  document: Document,\n): Promise<Document> {\n  if (document.html === undefined) {\n    throw new Error(\n      \"html is undefined -- this transformer is being called out of order\",\n    );\n  }\n\n  if (document.metadata.contentType?.includes(\"application/json\")) {\n    if (document.rawHtml === undefined) {\n      throw new Error(\n        \"rawHtml is undefined -- this transformer is being called out of order\",\n      );\n    }\n\n    document.markdown = \"```json\\n\" + document.rawHtml + \"\\n```\";\n    return document;\n  }\n\n  document.markdown = await parseMarkdown(document.html);\n  return document;\n}\n\nexport async function deriveLinksFromHTML(meta: Meta, document: Document): Promise<Document> {\n  // Only derive if the formats has links\n  if (meta.options.formats.includes(\"links\")) {\n    if (document.html === undefined) {\n      throw new Error(\n        \"html is undefined -- this transformer is being called out of order\",\n      );\n    }\n\n    document.links = await extractLinks(document.html, document.metadata.url ?? document.metadata.sourceURL ?? meta.rewrittenUrl ?? meta.url);\n  }\n\n  return document;\n}\n\nexport function coerceFieldsToFormats(\n  meta: Meta,\n  document: Document,\n): Document {\n  const formats = new Set(meta.options.formats);\n\n  if (!formats.has(\"markdown\") && document.markdown !== undefined) {\n    delete document.markdown;\n  } else if (formats.has(\"markdown\") && document.markdown === undefined) {\n    meta.logger.warn(\n      \"Request had format: markdown, but there was no markdown field in the result.\",\n    );\n  }\n\n  if (!formats.has(\"rawHtml\") && document.rawHtml !== undefined) {\n    delete document.rawHtml;\n  } else if (formats.has(\"rawHtml\") && document.rawHtml === undefined) {\n    meta.logger.warn(\n      \"Request had format: rawHtml, but there was no rawHtml field in the result.\",\n    );\n  }\n\n  if (!formats.has(\"html\") && document.html !== undefined) {\n    delete document.html;\n  } else if (formats.has(\"html\") && document.html === undefined) {\n    meta.logger.warn(\n      \"Request had format: html, but there was no html field in the result.\",\n    );\n  }\n\n  if (\n    !formats.has(\"screenshot\") &&\n    !formats.has(\"screenshot@fullPage\") &&\n    document.screenshot !== undefined\n  ) {\n    meta.logger.warn(\n      \"Removed screenshot from Document because it wasn't in formats -- this is very wasteful and indicates a bug.\",\n    );\n    delete document.screenshot;\n  } else if (\n    (formats.has(\"screenshot\") || formats.has(\"screenshot@fullPage\")) &&\n    document.screenshot === undefined\n  ) {\n    meta.logger.warn(\n      \"Request had format: screenshot / screenshot@fullPage, but there was no screenshot field in the result.\",\n    );\n  }\n\n  if (!formats.has(\"links\") && document.links !== undefined) {\n    meta.logger.warn(\n      \"Removed links from Document because it wasn't in formats -- this is wasteful and indicates a bug.\",\n    );\n    delete document.links;\n  } else if (formats.has(\"links\") && document.links === undefined) {\n    meta.logger.warn(\n      \"Request had format: links, but there was no links field in the result.\",\n    );\n  }\n\n  if (!formats.has(\"extract\") && (document.extract !== undefined || document.json !== undefined)) {\n    meta.logger.warn(\n      \"Removed extract from Document because it wasn't in formats -- this is extremely wasteful and indicates a bug.\",\n    );\n    delete document.extract;\n  } else if (formats.has(\"extract\") && document.extract === undefined && document.json === undefined) {\n    meta.logger.warn(\n      \"Request had format extract, but there was no extract field in the result.\",\n    );\n  }\n\n  if (!formats.has(\"changeTracking\") && document.changeTracking !== undefined) {\n    meta.logger.warn(\n      \"Removed changeTracking from Document because it wasn't in formats -- this is extremely wasteful and indicates a bug.\",\n    );\n    delete document.changeTracking;\n  } else if (formats.has(\"changeTracking\") && document.changeTracking === undefined) {\n    meta.logger.warn(\n      \"Request had format changeTracking, but there was no changeTracking field in the result.\",\n    );\n  }\n\n  if (document.changeTracking && \n      (!meta.options.changeTrackingOptions?.modes?.includes(\"git-diff\")) && \n      document.changeTracking.diff !== undefined) {\n    meta.logger.warn(\n      \"Removed diff from changeTracking because git-diff mode wasn't specified in changeTrackingOptions.modes.\",\n    );\n    delete document.changeTracking.diff;\n  }\n  \n  if (document.changeTracking && \n      (!meta.options.changeTrackingOptions?.modes?.includes(\"json\")) && \n      document.changeTracking.json !== undefined) {\n    meta.logger.warn(\n      \"Removed structured from changeTracking because structured mode wasn't specified in changeTrackingOptions.modes.\",\n    );\n    delete document.changeTracking.json;\n  }\n\n  if (meta.options.actions === undefined || meta.options.actions.length === 0) {\n    delete document.actions;\n  }\n\n  return document;\n}\n\n// TODO: allow some of these to run in parallel\nexport const transformerStack: Transformer[] = [\n  deriveHTMLFromRawHTML,\n  deriveMarkdownFromHTML,\n  deriveLinksFromHTML,\n  deriveMetadataFromRawHTML,\n  uploadScreenshot,\n  ...(useIndex ? [sendDocumentToIndex] : []),\n  performLLMExtract,\n  performAgent,\n  deriveDiff,\n  coerceFieldsToFormats,\n  removeBase64Images,\n];\n\nexport async function executeTransformers(\n  meta: Meta,\n  document: Document,\n): Promise<Document> {\n  const executions: [string, number][] = [];\n\n  for (const transformer of transformerStack) {\n    const _meta = {\n      ...meta,\n      logger: meta.logger.child({\n        method: \"executeTransformers/\" + transformer.name,\n      }),\n    };\n    const start = Date.now();\n    document = await transformer(_meta, document);\n    executions.push([transformer.name, Date.now() - start]);\n  }\n\n  meta.logger.debug(\"Executed transformers.\", { executions });\n\n  return document;\n}\n"]}