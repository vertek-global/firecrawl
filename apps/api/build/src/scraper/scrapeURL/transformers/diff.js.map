{"version":3,"file":"diff.js","sourceRoot":"","sources":["../../../../../src/scraper/scrapeURL/transformers/diff.ts"],"names":[],"mappings":"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","sourcesContent":["import { supabase_service } from \"../../../services/supabase\";\nimport { Document } from \"../../../controllers/v1/types\";\nimport { Meta } from \"../index\";\nimport { getJob } from \"../../../controllers/v1/crawl-status\";\nimport gitDiff from 'git-diff';\nimport parseDiff from 'parse-diff';\nimport { generateCompletions } from \"./llmExtract\";\n\nasync function extractDataWithSchema(content: string, meta: Meta): Promise<{ extract: any } | null> {\n    try {\n        const { extract } = await generateCompletions({\n            logger: meta.logger.child({\n                method: \"extractDataWithSchema/generateCompletions\",\n            }),\n            options: {\n                mode: \"llm\",\n                schema: meta.options.changeTrackingOptions?.schema,\n                systemPrompt: \"Extract the requested information from the content based on the provided schema.\",\n                temperature: 0\n            },\n            markdown: content,\n            costTrackingOptions: {\n                costTracking: meta.costTracking,\n                metadata: {\n                    module: \"extract\",\n                    method: \"extractDataWithSchema\",\n                },\n            },\n        });\n        return { extract };\n    } catch (error) {\n        meta.logger.error(\"Error extracting data with schema\", { error });\n        return null;\n    }\n}\n\nfunction compareExtractedData(previousData: any, currentData: any): any {\n    const result: Record<string, { previous: any, current: any }> = {};\n    \n    const allKeys = new Set([\n        ...Object.keys(previousData || {}),\n        ...Object.keys(currentData || {})\n    ]);\n    \n    for (const key of allKeys) {\n        const oldValue = previousData?.[key];\n        const newValue = currentData?.[key];\n        \n        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n            result[key] = {\n                previous: oldValue,\n                current: newValue\n            };\n        }\n    }\n    \n    return result;\n}\n\nexport async function deriveDiff(meta: Meta, document: Document): Promise<Document> {\n  if (meta.options.formats.includes(\"changeTracking\")) {\n    if (meta.internalOptions.zeroDataRetention) {\n        document.warning = \"Change tracking is not supported with zero data retention.\" + (document.warning ? \" \" + document.warning : \"\")\n        return document;\n    }\n    \n    const start = Date.now();\n    const res = await supabase_service\n        .rpc(\"diff_get_last_scrape_4\", {\n            i_team_id: meta.internalOptions.teamId,\n            i_url: document.metadata.sourceURL ?? meta.rewrittenUrl ?? meta.url,\n            i_tag: meta.options.changeTrackingOptions?.tag ?? null,\n        });\n    const end = Date.now();\n    if (end - start > 100) {\n        meta.logger.debug(\"Diffing took a while\", { time: end - start, params: { i_team_id: meta.internalOptions.teamId, i_url: document.metadata.sourceURL ?? meta.rewrittenUrl ?? meta.url } });\n    }\n\n    const data: {\n        o_job_id: string,\n        o_date_added: string,\n    } | undefined | null = (res.data ?? [])[0] as any;\n\n    const job: {\n        returnvalue: Document,\n    } | null = data?.o_job_id ? await getJob(data.o_job_id) : null;\n\n    if (data && job && job?.returnvalue) {\n        const previousMarkdown = job.returnvalue.markdown!;\n        const currentMarkdown = document.markdown!;\n\n        const transformer = (x: string) => [...x.replace(/\\s+/g, \"\").replace(/\\[iframe\\]\\(.+?\\)/g, \"\")].sort().join(\"\");\n        const isChanged = transformer(previousMarkdown) !== transformer(currentMarkdown);\n        const changeStatus = document.metadata.statusCode === 404 ? \"removed\" : isChanged ? \"changed\" : \"same\";\n\n        document.changeTracking = {\n            previousScrapeAt: data.o_date_added,\n            changeStatus,\n            visibility: meta.internalOptions.urlInvisibleInCurrentCrawl ? \"hidden\" : \"visible\",\n        }\n        \n        if (meta.options.changeTrackingOptions?.modes?.includes(\"git-diff\") && changeStatus === \"changed\") {\n            const diffText = gitDiff(previousMarkdown, currentMarkdown, {\n                color: false,\n                wordDiff: false\n            });\n            meta.logger.debug(\"Diff text\", { diffText });\n            if (diffText) {\n                const diffStructured = parseDiff(diffText);\n                meta.logger.debug(\"Diff structured\", { diffStructured });\n                document.changeTracking.diff = {\n                    text: diffText,\n                    json: {\n                        files: diffStructured.map(file => ({\n                            from: file.from || null,\n                            to: file.to || null,\n                            chunks: file.chunks.map(chunk => ({\n                                content: chunk.content,\n                                changes: chunk.changes.map(change => {\n                                    const baseChange = {\n                                        type: change.type,\n                                        content: change.content\n                                    };\n                                    \n                                    if (change.type === 'normal' && 'ln1' in change && 'ln2' in change) {\n                                        return {\n                                            ...baseChange,\n                                            normal: true,\n                                            ln1: change.ln1,\n                                            ln2: change.ln2\n                                        };\n                                    } else if (change.type === 'add' && 'ln' in change) {\n                                        return {\n                                            ...baseChange,\n                                            add: true,\n                                            ln: change.ln\n                                        };\n                                    } else if (change.type === 'del' && 'ln' in change) {\n                                        return {\n                                            ...baseChange,\n                                            del: true,\n                                            ln: change.ln\n                                        };\n                                    }\n                                    \n                                    return baseChange;\n                                })\n                            }))\n                        }))\n                    }\n                };\n            }\n        }\n        \n        if (meta.options.changeTrackingOptions?.modes?.includes(\"json\") && \n            meta.options.changeTrackingOptions && changeStatus === \"changed\") {\n            try {\n                const previousData = meta.options.changeTrackingOptions.schema ? \n                    await extractDataWithSchema(previousMarkdown, meta) : null;\n                \n                const currentData = meta.options.changeTrackingOptions.schema ? \n                    await extractDataWithSchema(currentMarkdown, meta) : null;\n                \n                if (previousData && currentData) {\n                    document.changeTracking.json = compareExtractedData(previousData.extract, currentData.extract);\n                } else {\n                    const { extract } = await generateCompletions({\n                        logger: meta.logger.child({\n                            method: \"deriveDiff/generateCompletions\",\n                        }),\n                        options: {\n                            mode: \"llm\",\n                            systemPrompt: \"Analyze the differences between the previous and current content and provide a structured summary of the changes.\",\n                            schema: meta.options.changeTrackingOptions.schema,\n                            prompt: meta.options.changeTrackingOptions.prompt,\n                            temperature: 0\n                        },\n                        markdown: `Previous Content:\\n${previousMarkdown}\\n\\nCurrent Content:\\n${currentMarkdown}`,\n                        previousWarning: document.warning,\n                        costTrackingOptions: {\n                            costTracking: meta.costTracking,\n                            metadata: {\n                                module: \"diff\",\n                                method: \"deriveDiff\",\n                            },\n                        },\n                    });\n\n                    document.changeTracking.json = extract;\n                }\n            } catch (error) {\n                meta.logger.error(\"Error generating structured diff with LLM\", { error });\n                document.warning = \"Structured diff generation failed.\" + (document.warning ? ` ${document.warning}` : \"\");\n            }\n        }\n    } else if (!res.error) {\n        document.changeTracking = {\n            previousScrapeAt: null,\n            changeStatus: document.metadata.statusCode === 404 ? \"removed\" : \"new\",\n            visibility: meta.internalOptions.urlInvisibleInCurrentCrawl ? \"hidden\" : \"visible\",\n        }\n    } else {\n        meta.logger.error(\"Error fetching previous scrape\", { error: res.error });\n        document.warning = \"Comparing failed, please try again later.\" + (document.warning ? ` ${document.warning}` : \"\");\n    }\n  }\n  \n  return document;\n}\n"]}