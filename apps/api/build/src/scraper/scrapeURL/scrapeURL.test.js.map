{"version":3,"file":"scrapeURL.test.js","sourceRoot":"","sources":["../../../../src/scraper/scrapeURL/scrapeURL.test.ts"],"names":[],"mappings":"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","sourcesContent":["import \"dotenv/config\";\n\nprocess.env.ENV = \"test\";\n\nimport { scrapeURL } from \".\";\nimport { scrapeOptions } from \"../../controllers/v1/types\";\nimport { Engine } from \"./engines\";\nimport { CostTracking } from \"../../lib/extract/extraction-service\";\n\nconst testEngines: (Engine | undefined)[] = [\n  undefined,\n  \"fire-engine;chrome-cdp\",\n  \"fire-engine;playwright\",\n  \"fire-engine;tlsclient\",\n  \"fetch\",\n];\n\nconst testEnginesScreenshot: (Engine | undefined)[] = [\n  undefined,\n  \"fire-engine;chrome-cdp\",\n  \"fire-engine;playwright\",\n];\n\ndescribe(\"Standalone scrapeURL tests\", () => {\n  describe.each(testEngines)(\"Engine %s\", (forceEngine: Engine | undefined) => {\n    it(\"Basic scrape\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-basic\",\n        \"https://www.roastmywebsite.ai/\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).not.toHaveProperty(\"content\");\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document).not.toHaveProperty(\"html\");\n        expect(out.document.markdown).toContain(\"_Roast_\");\n        expect(out.document.metadata.error).toBeUndefined();\n        expect(out.document.metadata.title).toBe(\"Roast My Website\");\n        expect(out.document.metadata.description).toBe(\n          \"Welcome to Roast My Website, the ultimate tool for putting your website through the wringer! This repository harnesses the power of Firecrawl to scrape and capture screenshots of websites, and then unleashes the latest LLM vision models to mercilessly roast them. 🌶️\",\n        );\n        expect(out.document.metadata.keywords).toBe(\n          \"Roast My Website,Roast,Website,GitHub,Firecrawl\",\n        );\n        expect(out.document.metadata.robots).toBe(\"follow, index\");\n        expect(out.document.metadata.ogTitle).toBe(\"Roast My Website\");\n        expect(out.document.metadata.ogDescription).toBe(\n          \"Welcome to Roast My Website, the ultimate tool for putting your website through the wringer! This repository harnesses the power of Firecrawl to scrape and capture screenshots of websites, and then unleashes the latest LLM vision models to mercilessly roast them. 🌶️\",\n        );\n        expect(out.document.metadata.ogUrl).toBe(\n          \"https://www.roastmywebsite.ai\",\n        );\n        expect(out.document.metadata.ogImage).toBe(\n          \"https://www.roastmywebsite.ai/og.png\",\n        );\n        expect(out.document.metadata.ogLocaleAlternate).toStrictEqual([]);\n        expect(out.document.metadata.ogSiteName).toBe(\"Roast My Website\");\n        expect(out.document.metadata.sourceURL).toBe(\n          \"https://www.roastmywebsite.ai/\",\n        );\n        expect(out.document.metadata.statusCode).toBe(200);\n      }\n    }, 30000);\n\n    it(\"Scrape with formats markdown and html\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-formats-markdown-html\",\n        \"https://roastmywebsite.ai\",\n        scrapeOptions.parse({\n          formats: [\"markdown\", \"html\"],\n        }),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"html\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.markdown).toContain(\"_Roast_\");\n        expect(out.document.html).toContain(\"<h1\");\n        expect(out.document.metadata.statusCode).toBe(200);\n        expect(out.document.metadata.error).toBeUndefined();\n      }\n    }, 30000);\n\n    it(\"Scrape with onlyMainContent disabled\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-onlyMainContent-false\",\n        \"https://www.scrapethissite.com/\",\n        scrapeOptions.parse({\n          onlyMainContent: false,\n        }),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document).not.toHaveProperty(\"html\");\n        expect(out.document.markdown).toContain(\"[FAQ](/faq/)\"); // .nav\n        expect(out.document.markdown).toContain(\"Hartley Brody 2023\"); // #footer\n      }\n    }, 30000);\n\n    it(\"Scrape with excludeTags\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-excludeTags\",\n        \"https://www.scrapethissite.com/\",\n        scrapeOptions.parse({\n          onlyMainContent: false,\n          excludeTags: [\".nav\", \"#footer\", \"strong\"],\n        }),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document).not.toHaveProperty(\"html\");\n        expect(out.document.markdown).not.toContain(\"Hartley Brody 2023\");\n        expect(out.document.markdown).not.toContain(\"[FAQ](/faq/)\");\n      }\n    }, 30000);\n\n    it(\"Scrape of a page with 400 status code\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-400\",\n        \"https://httpstat.us/400\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.statusCode).toBe(400);\n      }\n    }, 30000);\n\n    it(\"Scrape of a page with 401 status code\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-401\",\n        \"https://httpstat.us/401\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.statusCode).toBe(401);\n      }\n    }, 30000);\n\n    it(\"Scrape of a page with 403 status code\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-403\",\n        \"https://httpstat.us/403\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.statusCode).toBe(403);\n      }\n    }, 30000);\n\n    it(\"Scrape of a page with 404 status code\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-404\",\n        \"https://httpstat.us/404\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.statusCode).toBe(404);\n      }\n    }, 30000);\n\n    it(\"Scrape of a page with 405 status code\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-405\",\n        \"https://httpstat.us/405\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.statusCode).toBe(405);\n      }\n    }, 30000);\n\n    it(\"Scrape of a page with 500 status code\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-500\",\n        \"https://httpstat.us/500\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.statusCode).toBe(500);\n      }\n    }, 30000);\n\n    it(\"Scrape a redirected page\", async () => {\n      const out = await scrapeURL(\n        \"test:scrape-redirect\",\n        \"https://scrapethissite.com/\",\n        scrapeOptions.parse({}),\n        { forceEngine, teamId: \"test\" },\n        new CostTracking(),\n      );\n\n      // expect(out.logs.length).toBeGreaterThan(0);\n      expect(out.success).toBe(true);\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document.markdown).toContain(\"Explore Sandbox\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.sourceURL).toBe(\n          \"https://scrapethissite.com/\",\n        );\n        expect(out.document.metadata.url).toBe(\n          \"https://www.scrapethissite.com/\",\n        );\n        expect(out.document.metadata.statusCode).toBe(200);\n        expect(out.document.metadata.error).toBeUndefined();\n      }\n    }, 30000);\n  });\n\n  describe.each(testEnginesScreenshot)(\n    \"Screenshot on engine %s\",\n    (forceEngine: Engine | undefined) => {\n      it(\"Scrape with screenshot\", async () => {\n        const out = await scrapeURL(\n          \"test:scrape-screenshot\",\n          \"https://www.scrapethissite.com/\",\n          scrapeOptions.parse({\n            formats: [\"screenshot\"],\n          }),\n          { forceEngine, teamId: \"test\" },\n          new CostTracking(),\n        );\n\n        // expect(out.logs.length).toBeGreaterThan(0);\n        expect(out.success).toBe(true);\n        if (out.success) {\n          expect(out.document.warning).toBeUndefined();\n          expect(out.document).toHaveProperty(\"screenshot\");\n          expect(typeof out.document.screenshot).toBe(\"string\");\n          expect(\n            out.document.screenshot!.startsWith(\n              \"https://service.firecrawl.dev/storage/v1/object/public/media/\",\n            ),\n          );\n          // TODO: attempt to fetch screenshot\n          expect(out.document).toHaveProperty(\"metadata\");\n          expect(out.document.metadata.statusCode).toBe(200);\n          expect(out.document.metadata.error).toBeUndefined();\n        }\n      }, 30000);\n\n      it(\"Scrape with full-page screenshot\", async () => {\n        const out = await scrapeURL(\n          \"test:scrape-screenshot-fullPage\",\n          \"https://www.scrapethissite.com/\",\n          scrapeOptions.parse({\n            formats: [\"screenshot@fullPage\"],\n          }),\n          { forceEngine, teamId: \"test\" },\n          new CostTracking(),\n        );\n\n        // expect(out.logs.length).toBeGreaterThan(0);\n        expect(out.success).toBe(true);\n        if (out.success) {\n          expect(out.document.warning).toBeUndefined();\n          expect(out.document).toHaveProperty(\"screenshot\");\n          expect(typeof out.document.screenshot).toBe(\"string\");\n          expect(\n            out.document.screenshot!.startsWith(\n              \"https://service.firecrawl.dev/storage/v1/object/public/media/\",\n            ),\n          );\n          // TODO: attempt to fetch screenshot\n          expect(out.document).toHaveProperty(\"metadata\");\n          expect(out.document.metadata.statusCode).toBe(200);\n          expect(out.document.metadata.error).toBeUndefined();\n        }\n      }, 30000);\n    },\n  );\n\n  it(\"Scrape of a PDF file\", async () => {\n    const out = await scrapeURL(\n      \"test:scrape-pdf\",\n      \"https://arxiv.org/pdf/astro-ph/9301001.pdf\",\n      scrapeOptions.parse({}),\n      { teamId: \"test\" },\n      new CostTracking(),\n    );\n\n    // expect(out.logs.length).toBeGreaterThan(0);\n    expect(out.success).toBe(true);\n    if (out.success) {\n      expect(out.document.warning).toBeUndefined();\n      expect(out.document).toHaveProperty(\"metadata\");\n      expect(out.document.markdown).toContain(\"Broad Line Radio Galaxy\");\n      expect(out.document.metadata.statusCode).toBe(200);\n      expect(out.document.metadata.error).toBeUndefined();\n    }\n  }, 60000);\n\n  it(\"Scrape a DOCX file\", async () => {\n    const out = await scrapeURL(\n      \"test:scrape-docx\",\n      \"https://nvca.org/wp-content/uploads/2019/06/NVCA-Model-Document-Stock-Purchase-Agreement.docx\",\n      scrapeOptions.parse({}),\n      { teamId: \"test\" },\n      new CostTracking(),\n    );\n\n    // expect(out.logs.length).toBeGreaterThan(0);\n    expect(out.success).toBe(true);\n    if (out.success) {\n      expect(out.document.warning).toBeUndefined();\n      expect(out.document).toHaveProperty(\"metadata\");\n      expect(out.document.markdown).toContain(\n        \"SERIES A PREFERRED STOCK PURCHASE AGREEMENT\",\n      );\n      expect(out.document.metadata.statusCode).toBe(200);\n      expect(out.document.metadata.error).toBeUndefined();\n    }\n  }, 60000);\n\n  it(\"LLM extract with prompt and schema\", async () => {\n    const out = await scrapeURL(\n      \"test:llm-extract-prompt-schema\",\n      \"https://firecrawl.dev\",\n      scrapeOptions.parse({\n        formats: [\"extract\"],\n        extract: {\n          prompt:\n            \"Based on the information on the page, find what the company's mission is and whether it supports SSO, and whether it is open source\",\n          schema: {\n            type: \"object\",\n            properties: {\n              company_mission: { type: \"string\" },\n              supports_sso: { type: \"boolean\" },\n              is_open_source: { type: \"boolean\" },\n            },\n            required: [\"company_mission\", \"supports_sso\", \"is_open_source\"],\n            additionalProperties: false,\n          },\n        },\n      }),\n      { teamId: \"test\" },\n      new CostTracking(),\n    );\n\n    // expect(out.logs.length).toBeGreaterThan(0);\n    expect(out.success).toBe(true);\n    if (out.success) {\n      expect(out.document.warning).toBeUndefined();\n      expect(out.document).toHaveProperty(\"extract\");\n      expect(out.document.extract).toHaveProperty(\"company_mission\");\n      expect(out.document.extract).toHaveProperty(\"supports_sso\");\n      expect(out.document.extract).toHaveProperty(\"is_open_source\");\n      expect(typeof out.document.extract.company_mission).toBe(\"string\");\n      expect(out.document.extract.supports_sso).toBe(false);\n      expect(out.document.extract.is_open_source).toBe(true);\n    }\n  }, 120000);\n\n  it(\"LLM extract with schema only\", async () => {\n    const out = await scrapeURL(\n      \"test:llm-extract-schema\",\n      \"https://firecrawl.dev\",\n      scrapeOptions.parse({\n        formats: [\"extract\"],\n        extract: {\n          schema: {\n            type: \"object\",\n            properties: {\n              company_mission: { type: \"string\" },\n              supports_sso: { type: \"boolean\" },\n              is_open_source: { type: \"boolean\" },\n            },\n            required: [\"company_mission\", \"supports_sso\", \"is_open_source\"],\n            additionalProperties: false,\n          },\n        },\n      }),\n      { teamId: \"test\" },\n      new CostTracking(),\n    );\n\n    // expect(out.logs.length).toBeGreaterThan(0);\n    expect(out.success).toBe(true);\n    if (out.success) {\n      expect(out.document.warning).toBeUndefined();\n      expect(out.document).toHaveProperty(\"extract\");\n      expect(out.document.extract).toHaveProperty(\"company_mission\");\n      expect(out.document.extract).toHaveProperty(\"supports_sso\");\n      expect(out.document.extract).toHaveProperty(\"is_open_source\");\n      expect(typeof out.document.extract.company_mission).toBe(\"string\");\n      expect(out.document.extract.supports_sso).toBe(false);\n      expect(out.document.extract.is_open_source).toBe(true);\n    }\n  }, 120000);\n\n  test.concurrent.each(new Array(100).fill(0).map((_, i) => i))(\n    \"Concurrent scrape #%i\",\n    async (i) => {\n      const url = \"https://www.scrapethissite.com/?i=\" + i;\n      const id = \"test:concurrent:\" + url;\n      const out = await scrapeURL(id, url, scrapeOptions.parse({}), { teamId: \"test\" }, new CostTracking());\n\n      const replacer = (key: string, value: any) => {\n        if (value instanceof Error) {\n          return {\n            ...value,\n            message: value.message,\n            name: value.name,\n            cause: value.cause,\n            stack: value.stack,\n          };\n        } else {\n          return value;\n        }\n      };\n\n      // verify that log collection works properly while concurrency is happening\n      // expect(out.logs.length).toBeGreaterThan(0);\n      const weirdLogs = out.logs.filter((x) => x.scrapeId !== id);\n      if (weirdLogs.length > 0) {\n        console.warn(JSON.stringify(weirdLogs, replacer));\n      }\n      expect(weirdLogs.length).toBe(0);\n\n      if (!out.success) console.error(JSON.stringify(out, replacer));\n      expect(out.success).toBe(true);\n\n      if (out.success) {\n        expect(out.document.warning).toBeUndefined();\n        expect(out.document).toHaveProperty(\"markdown\");\n        expect(out.document).toHaveProperty(\"metadata\");\n        expect(out.document.metadata.error).toBeUndefined();\n        expect(out.document.metadata.statusCode).toBe(200);\n      }\n    },\n    30000,\n  );\n});\n"]}