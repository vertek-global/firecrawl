{"version":3,"file":"removeUnwantedElements.js","sourceRoot":"","sources":["../../../../../src/scraper/scrapeURL/lib/removeUnwantedElements.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: refactor\n\nimport { AnyNode, Cheerio, load } from \"cheerio\"; // rustified\nimport { ScrapeOptions } from \"../../../controllers/v1/types\";\nimport { transformHtml } from \"../../../lib/html-transformer\";\nimport { logger } from \"../../../lib/logger\";\n\nconst excludeNonMainTags = [\n  \"header\",\n  \"footer\",\n  \"nav\",\n  \"aside\",\n  \".header\",\n  \".top\",\n  \".navbar\",\n  \"#header\",\n  \".footer\",\n  \".bottom\",\n  \"#footer\",\n  \".sidebar\",\n  \".side\",\n  \".aside\",\n  \"#sidebar\",\n  \".modal\",\n  \".popup\",\n  \"#modal\",\n  \".overlay\",\n  \".ad\",\n  \".ads\",\n  \".advert\",\n  \"#ad\",\n  \".lang-selector\",\n  \".language\",\n  \"#language-selector\",\n  \".social\",\n  \".social-media\",\n  \".social-links\",\n  \"#social\",\n  \".menu\",\n  \".navigation\",\n  \"#nav\",\n  \".breadcrumbs\",\n  \"#breadcrumbs\",\n  \".share\",\n  \"#share\",\n  \".widget\",\n  \"#widget\",\n  \".cookie\",\n  \"#cookie\",\n];\n\nconst forceIncludeMainTags = [\n  \"#main\",\n  \".swoogo-cols\",\n  \".swoogo-text\",\n  \".swoogo-table-div\",\n  \".swoogo-space\",\n  \".swoogo-alert\",\n  \".swoogo-sponsors\",\n  \".swoogo-title\",\n  \".swoogo-tabs\",\n  \".swoogo-logo\",\n  \".swoogo-image\",\n  \".swoogo-button\",\n  \".swoogo-agenda\"\n];\n\nexport const htmlTransform = async (\n  html: string,\n  url: string,\n  scrapeOptions: ScrapeOptions,\n) => {\n  try {\n    return await transformHtml({\n      html,\n      url,\n      include_tags: (scrapeOptions.includeTags ?? []).map(x => x.trim()).filter((x) => x.length !== 0),\n      exclude_tags: (scrapeOptions.excludeTags ?? []).map(x => x.trim()).filter((x) => x.length !== 0),\n      only_main_content: scrapeOptions.onlyMainContent,\n    })\n  } catch (error) {\n    logger.warn(\"Failed to call html-transformer! Falling back to cheerio...\", {\n        error,\n        module: \"scrapeURL\", method: \"extractLinks\"\n      });\n  }\n\n  let soup = load(html);\n\n  // remove unwanted elements\n  if (\n    scrapeOptions.includeTags &&\n    scrapeOptions.includeTags.filter((x) => x.trim().length !== 0).length > 0\n  ) {\n    // Create a new root element to hold the tags to keep\n    const newRoot = load(\"<div></div>\")(\"div\");\n    scrapeOptions.includeTags.forEach((tag) => {\n      soup(tag).each((_, element) => {\n        newRoot.append(soup(element).clone());\n      });\n    });\n\n    soup = load(newRoot.html() ?? \"\");\n  }\n\n  soup(\"script, style, noscript, meta, head\").remove();\n\n  if (\n    scrapeOptions.excludeTags &&\n    scrapeOptions.excludeTags.filter((x) => x.trim().length !== 0).length > 0\n  ) {\n    scrapeOptions.excludeTags.forEach((tag) => {\n      let elementsToRemove: Cheerio<AnyNode>;\n      if (tag.startsWith(\"*\") && tag.endsWith(\"*\")) {\n        let classMatch = false;\n\n        const regexPattern = new RegExp(tag.slice(1, -1), \"i\");\n        elementsToRemove = soup(\"*\").filter((i, element) => {\n          if (element.type === \"tag\") {\n            const attributes = element.attribs;\n            const tagNameMatches = regexPattern.test(element.name);\n            const attributesMatch = Object.keys(attributes).some((attr) =>\n              regexPattern.test(`${attr}=\"${attributes[attr]}\"`),\n            );\n            if (tag.startsWith(\"*.\")) {\n              classMatch = Object.keys(attributes).some((attr) =>\n                regexPattern.test(`class=\"${attributes[attr]}\"`),\n              );\n            }\n            return tagNameMatches || attributesMatch || classMatch;\n          }\n          return false;\n        });\n      } else {\n        elementsToRemove = soup(tag);\n      }\n      elementsToRemove.remove();\n    });\n  }\n\n  if (scrapeOptions.onlyMainContent) {\n    excludeNonMainTags.forEach((tag) => {\n      const elementsToRemove = soup(tag).filter(\n        forceIncludeMainTags.map((x) => \":not(:has(\" + x + \"))\").join(\"\"),\n      );\n\n      elementsToRemove.remove();\n    });\n  }\n\n  // always return biggest image\n  soup(\"img[srcset]\").each((_, el) => {\n    const sizes = el.attribs.srcset.split(\",\").map((x) => {\n      const tok = x.trim().split(\" \");\n      return {\n        url: tok[0],\n        size: parseInt((tok[1] ?? \"1x\").slice(0, -1), 10),\n        isX: (tok[1] ?? \"\").endsWith(\"x\"),\n      };\n    });\n\n    if (sizes.every((x) => x.isX) && el.attribs.src) {\n      sizes.push({\n        url: el.attribs.src,\n        size: 1,\n        isX: true,\n      });\n    }\n\n    sizes.sort((a, b) => b.size - a.size);\n\n    el.attribs.src = sizes[0]?.url;\n  });\n\n  // absolute links\n  soup(\"img[src]\").each((_, el) => {\n    try {\n      el.attribs.src = new URL(el.attribs.src, url).href;\n    } catch (_) {}\n  });\n  soup(\"a[href]\").each((_, el) => {\n    try {\n      el.attribs.href = new URL(el.attribs.href, url).href;\n    } catch (_) {}\n  });\n\n  const cleanedHtml = soup.html();\n  return cleanedHtml;\n};\n"]}