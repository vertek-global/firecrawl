{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/scraper/scrapeURL/engines/fire-engine/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger } from \"winston\";\nimport { Meta } from \"../..\";\nimport {\n  fireEngineScrape,\n  FireEngineScrapeRequestChromeCDP,\n  FireEngineScrapeRequestCommon,\n  FireEngineScrapeRequestPlaywright,\n  FireEngineScrapeRequestTLSClient,\n} from \"./scrape\";\nimport { EngineScrapeResult } from \"..\";\nimport {\n  fireEngineCheckStatus,\n  FireEngineCheckStatusSuccess,\n  StillProcessingError,\n} from \"./checkStatus\";\nimport {\n  ActionError,\n  EngineError,\n  DNSResolutionError,\n  SiteError,\n  SSLError,\n  TimeoutError,\n  UnsupportedFileError,\n  FEPageLoadFailed,\n} from \"../../error\";\nimport * as Sentry from \"@sentry/node\";\nimport { specialtyScrapeCheck } from \"../utils/specialtyHandler\";\nimport { fireEngineDelete } from \"./delete\";\nimport { MockState } from \"../../lib/mock\";\nimport { getInnerJSON } from \"../../../../lib/html-transformer\";\nimport { Action, TimeoutSignal } from \"../../../../controllers/v1/types\";\n\n// This function does not take `Meta` on purpose. It may not access any\n// meta values to construct the request -- that must be done by the\n// `scrapeURLWithFireEngine*` functions.\nasync function performFireEngineScrape<\n  Engine extends\n    | FireEngineScrapeRequestChromeCDP\n    | FireEngineScrapeRequestPlaywright\n    | FireEngineScrapeRequestTLSClient,\n>(\n  meta: Meta,\n  logger: Logger,\n  request: FireEngineScrapeRequestCommon & Engine,\n  timeout: number,\n  mock: MockState | null,\n  abort?: AbortSignal,\n): Promise<FireEngineCheckStatusSuccess> {\n  const scrape = await fireEngineScrape(\n    logger.child({ method: \"fireEngineScrape\" }),\n    request,\n    mock,\n    abort,\n  );\n\n  const startTime = Date.now();\n  const errorLimit = 3;\n  let errors: any[] = [];\n  let status: FireEngineCheckStatusSuccess | undefined = undefined;\n\n  while (status === undefined) {\n    abort?.throwIfAborted();\n    if (errors.length >= errorLimit) {\n      logger.error(\"Error limit hit.\", { errors });\n      fireEngineDelete(\n        logger.child({\n          method: \"performFireEngineScrape/fireEngineDelete\",\n          afterErrors: errors,\n        }),\n        scrape.jobId,\n        mock,\n      );\n      throw new Error(\"Error limit hit. See e.cause.errors for errors.\", {\n        cause: { errors },\n      });\n    }\n\n    if (Date.now() - startTime > timeout) {\n      logger.info(\n        \"Fire-engine was unable to scrape the page before timing out.\",\n        { errors, timeout },\n      );\n      throw new TimeoutError(\n        \"Fire-engine was unable to scrape the page before timing out\",\n        { cause: { errors, timeout } },\n      );\n    }\n\n    try {\n      status = await fireEngineCheckStatus(\n        meta,\n        logger.child({ method: \"fireEngineCheckStatus\" }),\n        scrape.jobId,\n        mock,\n        abort,\n      );\n    } catch (error) {\n      if (error instanceof StillProcessingError) {\n        // nop\n      } else if (\n        error instanceof EngineError ||\n        error instanceof SiteError ||\n        error instanceof SSLError ||\n        error instanceof DNSResolutionError ||\n        error instanceof ActionError ||\n        error instanceof UnsupportedFileError ||\n        error instanceof FEPageLoadFailed\n      ) {\n        fireEngineDelete(\n          logger.child({\n            method: \"performFireEngineScrape/fireEngineDelete\",\n            afterError: error,\n          }),\n          scrape.jobId,\n          mock,\n        );\n        logger.debug(\"Fire-engine scrape job failed.\", {\n          error,\n          jobId: scrape.jobId,\n        });\n        throw error;\n      } else if (error instanceof TimeoutSignal) {\n        fireEngineDelete(\n          logger.child({\n            method: \"performFireEngineScrape/fireEngineDelete\",\n            afterError: error,\n          }),\n          scrape.jobId,\n          mock,\n        );\n        throw error;\n      } else {\n        Sentry.captureException(error);\n        errors.push(error);\n        logger.debug(\n          `An unexpeceted error occurred while calling checkStatus. Error counter is now at ${errors.length}.`,\n          { error, jobId: scrape.jobId },\n        );\n      }\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, 250));\n  }\n\n  await specialtyScrapeCheck(\n    logger.child({\n      method: \"performFireEngineScrape/specialtyScrapeCheck\",\n    }),\n    status.responseHeaders,\n    status,\n  );\n\n  const contentType = (Object.entries(status.responseHeaders ?? {}).find(\n    (x) => x[0].toLowerCase() === \"content-type\",\n  ) ?? [])[1] ?? \"\";\n\n  if (contentType.includes(\"application/json\")) {\n    status.content = await getInnerJSON(status.content);\n  }\n\n  if (status.file) {\n    const content = status.file.content;\n    delete status.file;\n    status.content = Buffer.from(content, \"base64\").toString(\"utf8\"); // TODO: handle other encodings via Content-Type tag\n  }\n\n  fireEngineDelete(\n    logger.child({\n      method: \"performFireEngineScrape/fireEngineDelete\",\n    }),\n    scrape.jobId,\n    mock,\n  );\n\n  return status;\n}\n\nexport async function scrapeURLWithFireEngineChromeCDP(\n  meta: Meta,\n  timeToRun: number | undefined,\n): Promise<EngineScrapeResult> {\n  const actions: Action[] = [\n    // Transform waitFor option into an action (unsupported by chrome-cdp)\n    ...(meta.options.waitFor !== 0\n      ? [\n          { \n            type: \"wait\" as const,\n            milliseconds: meta.options.waitFor > 30000 ? 30000 : meta.options.waitFor,\n          },\n        ]\n      : []),\n\n    // Include specified actions\n    ...(meta.options.actions ?? []),\n\n    // Transform screenshot format into an action (unsupported by chrome-cdp)\n    ...(meta.options.formats.includes(\"screenshot\") ||\n    meta.options.formats.includes(\"screenshot@fullPage\")\n      ? [\n          {\n            type: \"screenshot\" as const,\n            fullPage: meta.options.formats.includes(\"screenshot@fullPage\"),\n          },\n        ]\n      : []),\n  ];\n\n  const totalWait = actions.reduce(\n    (a, x) => (x.type === \"wait\" ? (x.milliseconds ?? 1000) + a : a),\n    0,\n  );\n\n  const timeout = (timeToRun ?? 300000) + totalWait;\n\n  const request: FireEngineScrapeRequestCommon &\n    FireEngineScrapeRequestChromeCDP = {\n    url: meta.rewrittenUrl ?? meta.url,\n    engine: \"chrome-cdp\",\n    instantReturn: true,\n    skipTlsVerification: meta.options.skipTlsVerification,\n    headers: meta.options.headers,\n    ...(actions.length > 0\n      ? {\n          actions,\n        }\n      : {}),\n    priority: meta.internalOptions.priority,\n    geolocation: meta.options.geolocation ?? meta.options.location,\n    mobile: meta.options.mobile,\n    timeout, // TODO: better timeout logic\n    disableSmartWaitCache: meta.internalOptions.disableSmartWaitCache,\n    mobileProxy: meta.featureFlags.has(\"stealthProxy\"),\n    saveScrapeResultToGCS: !meta.internalOptions.zeroDataRetention && meta.internalOptions.saveScrapeResultToGCS,\n    zeroDataRetention: meta.internalOptions.zeroDataRetention,\n  };\n\n  let response = await performFireEngineScrape(\n    meta,\n    meta.logger.child({\n      method: \"scrapeURLWithFireEngineChromeCDP/callFireEngine\",\n      request,\n    }),\n    request,\n    timeout,\n    meta.mock,\n    meta.internalOptions.abort ?? AbortSignal.timeout(timeout),\n  );\n\n  if (\n    meta.options.formats.includes(\"screenshot\") ||\n    meta.options.formats.includes(\"screenshot@fullPage\")\n  ) {\n    // meta.logger.debug(\n    //   \"Transforming screenshots from actions into screenshot field\",\n    //   { screenshots: response.screenshots },\n    // );\n    if (response.screenshots) {\n      response.screenshot = response.screenshots.slice(-1)[0];\n      response.screenshots = response.screenshots.slice(0, -1);\n    }\n    // meta.logger.debug(\"Screenshot transformation done\", {\n    //   screenshots: response.screenshots,\n    //   screenshot: response.screenshot,\n    // });\n  }\n\n  if (!response.url) {\n    meta.logger.warn(\"Fire-engine did not return the response's URL\", {\n      response,\n      sourceURL: meta.url,\n    });\n  }\n\n  return {\n    url: response.url ?? meta.url,\n\n    html: response.content,\n    error: response.pageError,\n    statusCode: response.pageStatusCode,\n\n    contentType: (Object.entries(response.responseHeaders ?? {}).find(\n      (x) => x[0].toLowerCase() === \"content-type\",\n    ) ?? [])[1] ?? undefined,\n\n    screenshot: response.screenshot,\n    ...(actions.length > 0\n      ? {\n          actions: {\n            screenshots: response.screenshots ?? [],\n            scrapes: response.actionContent ?? [],\n            javascriptReturns: (response.actionResults ?? []).filter(x => x.type === \"executeJavascript\").map(x => JSON.parse((x.result as any as { return: string }).return)),\n            pdfs: (response.actionResults ?? []).filter(x => x.type === \"pdf\").map(x => x.result.link),\n          },\n        }\n      : {}),\n\n    proxyUsed: response.usedMobileProxy ? \"stealth\" : \"basic\",\n  };\n}\n\nexport async function scrapeURLWithFireEnginePlaywright(\n  meta: Meta,\n  timeToRun: number | undefined,\n): Promise<EngineScrapeResult> {\n  const totalWait = meta.options.waitFor;\n  const timeout = (timeToRun ?? 300000) + totalWait;\n\n  const request: FireEngineScrapeRequestCommon &\n    FireEngineScrapeRequestPlaywright = {\n    url: meta.rewrittenUrl ?? meta.url,\n    engine: \"playwright\",\n    instantReturn: true,\n\n    headers: meta.options.headers,\n    priority: meta.internalOptions.priority,\n    screenshot: meta.options.formats.includes(\"screenshot\"),\n    fullPageScreenshot: meta.options.formats.includes(\"screenshot@fullPage\"),\n    wait: meta.options.waitFor,\n    geolocation: meta.options.geolocation ?? meta.options.location,\n    blockAds: meta.options.blockAds,\n    mobileProxy: meta.featureFlags.has(\"stealthProxy\"),\n\n    timeout,\n    saveScrapeResultToGCS: !meta.internalOptions.zeroDataRetention && meta.internalOptions.saveScrapeResultToGCS,\n    zeroDataRetention: meta.internalOptions.zeroDataRetention,\n  };\n\n  let response = await performFireEngineScrape(\n    meta,\n    meta.logger.child({\n      method: \"scrapeURLWithFireEngineChromeCDP/callFireEngine\",\n      request,\n    }),\n    request,\n    timeout,\n    meta.mock,\n    meta.internalOptions.abort ?? AbortSignal.timeout(timeout),\n  );\n\n  if (!response.url) {\n    meta.logger.warn(\"Fire-engine did not return the response's URL\", {\n      response,\n      sourceURL: meta.url,\n    });\n  }\n\n  return {\n    url: response.url ?? meta.url,\n\n    html: response.content,\n    error: response.pageError,\n    statusCode: response.pageStatusCode,\n\n    contentType: (Object.entries(response.responseHeaders ?? {}).find(\n      (x) => x[0].toLowerCase() === \"content-type\",\n    ) ?? [])[1] ?? undefined,\n\n    ...(response.screenshots !== undefined && response.screenshots.length > 0\n      ? {\n          screenshot: response.screenshots[0],\n        }\n      : {}),\n\n    proxyUsed: response.usedMobileProxy ? \"stealth\" : \"basic\",\n  };\n}\n\nexport async function scrapeURLWithFireEngineTLSClient(\n  meta: Meta,\n  timeToRun: number | undefined,\n): Promise<EngineScrapeResult> {\n  const timeout = timeToRun ?? 30000;\n\n  const request: FireEngineScrapeRequestCommon &\n    FireEngineScrapeRequestTLSClient = {\n    url: meta.rewrittenUrl ?? meta.url,\n    engine: \"tlsclient\",\n    instantReturn: true,\n\n    headers: meta.options.headers,\n    priority: meta.internalOptions.priority,\n\n    atsv: meta.internalOptions.atsv,\n    geolocation: meta.options.geolocation ?? meta.options.location,\n    disableJsDom: meta.internalOptions.v0DisableJsDom,\n    mobileProxy: meta.featureFlags.has(\"stealthProxy\"),\n\n    timeout,\n    saveScrapeResultToGCS: !meta.internalOptions.zeroDataRetention && meta.internalOptions.saveScrapeResultToGCS,\n    zeroDataRetention: meta.internalOptions.zeroDataRetention,\n  };\n\n  let response = await performFireEngineScrape(\n    meta,\n    meta.logger.child({\n      method: \"scrapeURLWithFireEngineChromeCDP/callFireEngine\",\n      request,\n    }),\n    request,\n    timeout,\n    meta.mock,\n    meta.internalOptions.abort ?? AbortSignal.timeout(timeout),\n  );\n\n  if (!response.url) {\n    meta.logger.warn(\"Fire-engine did not return the response's URL\", {\n      response,\n      sourceURL: meta.url,\n    });\n  }\n\n  return {\n    url: response.url ?? meta.url,\n\n    html: response.content,\n    error: response.pageError,\n    statusCode: response.pageStatusCode,\n\n    contentType: (Object.entries(response.responseHeaders ?? {}).find(\n      (x) => x[0].toLowerCase() === \"content-type\",\n    ) ?? [])[1] ?? undefined,\n\n    proxyUsed: response.usedMobileProxy ? \"stealth\" : \"basic\",\n  };\n}\n"]}