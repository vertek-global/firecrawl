{"version":3,"file":"googlesearch.js","sourceRoot":"","sources":["../../../src/search/googlesearch.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { JSDOM } from 'jsdom';\nimport { SearchResult } from \"../../src/lib/entities\";\nimport { logger } from \"../../src/lib/logger\";\nimport https from 'https';\n\nconst getRandomInt = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport function get_useragent(): string {\n    const lynx_version = `Lynx/${getRandomInt(2, 3)}.${getRandomInt(8, 9)}.${getRandomInt(0, 2)}`;\n    const libwww_version = `libwww-FM/${getRandomInt(2, 3)}.${getRandomInt(13, 15)}`;\n    const ssl_mm_version = `SSL-MM/${getRandomInt(1, 2)}.${getRandomInt(3, 5)}`;\n    const openssl_version = `OpenSSL/${getRandomInt(1, 3)}.${getRandomInt(0, 4)}.${getRandomInt(0, 9)}`;\n    return `${lynx_version} ${libwww_version} ${ssl_mm_version} ${openssl_version}`;\n}\n\nasync function _req(\n  term: string,\n  results: number,\n  lang: string,\n  country: string,\n  start: number,\n  proxies: any,\n  timeout: number,\n  tbs: string | undefined = undefined,\n  filter: string | undefined = undefined,\n) {\n  const params = {\n    q: term,\n    num: results+2, // Number of results to return\n    hl: lang,\n    gl: country,\n    safe: \"active\",\n    start: start,\n  };\n  if (tbs) {\n    params[\"tbs\"] = tbs;\n  }\n  if (filter) {\n    params[\"filter\"] = filter;\n  }\n  var agent = get_useragent();\n  try {\n    const resp = await axios.get(\"https://www.google.com/search\", {\n      headers: {\n        \"User-Agent\": agent,\n          \"Accept\": \"*/*\"\n      },\n      params: params,\n      proxy: proxies,\n      timeout: timeout,\n      httpsAgent: new https.Agent({\n        rejectUnauthorized: true \n      }),\n      withCredentials: true\n    });\n    return resp;\n  } catch (error) {\n    if (error.response && error.response.status === 429) {\n      logger.warn(\"Google Search: Too many requests, try again later.\", {\n          status: error.response.status,\n          statusText: error.response.statusText\n      });\n      throw new Error(\"Google Search: Too many requests, try again later.\");\n    }\n    throw error;\n  }\n}\n\nexport async function googleSearch(\n  term: string,\n  advanced = false,\n  num_results = 5,\n  tbs = undefined as string | undefined,\n  filter = undefined as string | undefined,\n  lang = \"en\",\n  country = \"us\",\n  proxy = undefined as string | undefined,\n  sleep_interval = 0,\n  timeout = 5000,\n): Promise<SearchResult[]> {\n  let proxies: any = null;\n  if (proxy) {\n    if (proxy.startsWith(\"https\")) {\n      proxies = { https: proxy };\n    } else {\n      proxies = { http: proxy };\n    }\n  }\n\n  // TODO: knowledge graph, answer box, etc.\n\n  let start = 0;\n  let results: SearchResult[] = [];\n  let attempts = 0;\n  const maxAttempts = 20; // Define a maximum number of attempts to prevent infinite loop\n  while (start < num_results && attempts < maxAttempts) {\n    try {\n      const resp = await _req(\n        term,\n        num_results - start,\n        lang,\n        country,\n        start,\n        proxies,\n        timeout,\n        tbs,\n        filter,\n      );\n      const dom = new JSDOM(resp.data);\n      const document = dom.window.document;\n      const result_block = document.querySelectorAll(\"div.ezO2md\");\n      let new_results = 0;\n      let unique = true;\n      let fetched_results = 0;\n\n      const fetched_links = new Set<string>();\n      if (result_block.length === 0) {\n        start += 1;\n        attempts += 1;\n      } else {\n        attempts = 0;\n      }\n\n      for (const result of result_block) {\n          const link_tag = result.querySelector(\"a[href]\") as HTMLAnchorElement;\n          const title_tag = link_tag ? link_tag.querySelector(\"span.CVA68e\") : null;\n          const description_tag = result.querySelector(\"span.FrIlee\");\n\n          if (link_tag && title_tag && description_tag) {\n              const link = decodeURIComponent(link_tag.href.split(\"&\")[0].replace(\"/url?q=\", \"\"));\n              if (fetched_links.has(link) && unique) continue;\n              fetched_links.add(link);\n              const title = title_tag.textContent || \"\";\n              const description = description_tag.textContent || \"\";\n              fetched_results++;\n              new_results++;\n              if (link && title && description) {\n                start += 1\n                  results.push(new SearchResult(link, title, description));\n              }\n              if (fetched_results >= num_results) break;\n          }\n      }\n\n      await new Promise((resolve) =>\n        setTimeout(resolve, sleep_interval * 1000),\n      );\n    } catch (error) {\n      if (error.message === \"Too many requests\") {\n        logger.warn(\"Too many requests, breaking the loop\");\n        break;\n      }\n      throw error;\n    }\n\n    if (start === 0) {\n      return results;\n    }\n  }\n  if (attempts >= maxAttempts) {\n    logger.warn(\"Max attempts reached, breaking the loop\");\n  }\n  return results;\n}\n"]}