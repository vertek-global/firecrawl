{"version":3,"file":"scrape.test.js","sourceRoot":"","sources":["../../../../src/__tests__/snips/scrape.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { scrape, scrapeStatus, scrapeWithFailure, scrapeTimeout, indexCooldown, idmux, Identity } from \"./lib\";\nimport crypto from \"crypto\";\n\nlet identity: Identity;\n\nbeforeAll(async () => {\n  identity = await idmux({\n    name: \"scrape\",\n    concurrency: 100,\n    credits: 1000000,\n  });\n\n  if (!process.env.TEST_SUITE_SELF_HOSTED) {\n    // Needed for change tracking tests to work\n    await scrape({\n      url: \"https://example.com\",\n      formats: [\"markdown\", \"changeTracking\"],\n      timeout: scrapeTimeout,\n    }, identity);\n  }\n}, 10000 + scrapeTimeout);\n\ndescribe(\"Scrape tests\", () => {\n  it.concurrent(\"mocking works properly\", async () => {\n    // depends on falsified mock mocking-works-properly\n    // this test will fail if mock is bypassed with real data -- firecrawl.dev will never have\n    // that as its actual markdown output\n\n    const response = await scrape({\n      url: \"http://firecrawl.dev\",\n      useMock: \"mocking-works-properly\",\n      timeout: scrapeTimeout,\n    }, identity);\n\n    expect(response.markdown).toBe(\n      \"this is fake data coming from the mocking system!\",\n    );\n  }, scrapeTimeout);\n\n  it.concurrent(\"works\", async () => {\n    const response = await scrape({\n      url: \"http://firecrawl.dev\",\n      timeout: scrapeTimeout,\n    }, identity);\n\n    expect(response.markdown).toContain(\"Firecrawl\");\n  }, scrapeTimeout);\n\n  it.concurrent(\"works with Punycode domains\", async () => {\n    await scrape({\n      url: \"http://xn--1lqv92a901a.xn--ses554g/\",\n      timeout: scrapeTimeout,\n    }, identity);\n  }, scrapeTimeout);\n\n  it.concurrent(\"handles non-UTF-8 encodings\", async () => {\n    const response = await scrape({\n      url: \"https://www.rtpro.yamaha.co.jp/RT/docs/misc/kanji-sjis.html\",\n      timeout: scrapeTimeout,\n    }, identity);\n\n    expect(response.markdown).toContain(\"ぐ け げ こ ご さ ざ し じ す ず せ ぜ そ ぞ た\");\n  }, scrapeTimeout);\n\n  if (process.env.TEST_SUITE_SELF_HOSTED && process.env.PROXY_SERVER) {\n    it.concurrent(\"self-hosted proxy works\", async () => {\n      const response = await scrape({\n        url: \"https://icanhazip.com\",\n        timeout: scrapeTimeout,\n      }, identity);\n\n      expect(response.markdown?.trim()).toContain(process.env.PROXY_SERVER!.split(\"://\").slice(-1)[0].split(\":\")[0]);\n    }, scrapeTimeout);\n\n    it.concurrent(\"self-hosted proxy works on playwright\", async () => {\n      const response = await scrape({\n        url: \"https://icanhazip.com\",\n        waitFor: 100,\n        timeout: scrapeTimeout,\n      }, identity);\n\n      expect(response.markdown?.trim()).toContain(process.env.PROXY_SERVER!.split(\"://\").slice(-1)[0].split(\":\")[0]);\n    }, scrapeTimeout);\n  }\n\n  if (!process.env.TEST_SUITE_SELF_HOSTED || process.env.PLAYWRIGHT_MICROSERVICE_URL) {\n    it.concurrent(\"waitFor works\", async () => {\n      const response = await scrape({\n        url: \"http://firecrawl.dev\",\n        waitFor: 2000,\n        timeout: scrapeTimeout,\n      }, identity);\n  \n      expect(response.markdown).toContain(\"Firecrawl\");\n    }, scrapeTimeout);\n  }\n\n  describe(\"JSON scrape support\", () => {\n    it.concurrent(\"returns parseable JSON\", async () => {\n      const response = await scrape({\n        url: \"https://jsonplaceholder.typicode.com/todos/1\",\n        formats: [\"rawHtml\"],\n        timeout: scrapeTimeout,\n      }, identity);\n\n      const obj = JSON.parse(response.rawHtml!);\n      expect(obj.id).toBe(1);\n    }, scrapeTimeout);\n  });\n\n  if (!process.env.TEST_SUITE_SELF_HOSTED) {\n    it.concurrent(\"scrape status works\", async () => {\n      const response = await scrape({\n        url: \"http://firecrawl.dev\",\n        timeout: scrapeTimeout,\n      }, identity);\n  \n      expect(response.markdown).toContain(\"Firecrawl\");\n\n      // Give time to propagate to read replica\n      await new Promise(resolve => setTimeout(resolve, 1000));\n  \n      const status = await scrapeStatus(response.metadata.scrapeId!, identity);\n      expect(JSON.stringify(status)).toBe(JSON.stringify(response));\n    }, scrapeTimeout);\n    \n    describe(\"Ad blocking (f-e dependant)\", () => {\n      it.concurrent(\"blocking ads works\", async () => {\n        await scrape({\n          url: \"https://firecrawl.dev\",\n          blockAds: true,\n          timeout: scrapeTimeout,\n        }, identity);\n      }, scrapeTimeout);\n\n      it.concurrent(\"doesn't block ads if explicitly disabled\", async () => {\n        await scrape({\n          url: \"https://firecrawl.dev\",\n          blockAds: false,\n          timeout: scrapeTimeout,\n        }, identity);\n      }, scrapeTimeout);\n    });\n    \n    describe(\"Index\", () => {\n      it.concurrent(\"caches properly\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        const response1 = await scrape({\n          url,\n          maxAge: scrapeTimeout * 3,\n          storeInCache: false,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response1.metadata.cacheState).toBe(\"miss\");\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          maxAge: scrapeTimeout * 3,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"miss\");\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response3 = await scrape({\n          url,\n          maxAge: scrapeTimeout * 3,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response3.metadata.cacheState).toBe(\"hit\");\n        expect(response3.metadata.cachedAt).toBeDefined();\n        \n        const response4 = await scrape({\n          url,\n          maxAge: 1,\n          timeout: scrapeTimeout,\n        }, identity);\n        \n        expect(response4.metadata.cacheState).toBe(\"miss\");\n      }, scrapeTimeout * 4 + 2 * indexCooldown);\n\n      it.concurrent(\"caches PDFs properly\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://www.orimi.com/pdf-test.pdf?testId=\" + id;\n        \n        const response1 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n        \n        expect(response1.metadata.cacheState).toBe(\"miss\");\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"hit\");\n      }, scrapeTimeout * 2 + 2 * indexCooldown);\n\n      it.concurrent(\"respects screenshot\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        const response1 = await scrape({\n          url,\n          formats: [\"screenshot\"],\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response1.screenshot).toBeDefined();\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          formats: [\"screenshot\"],\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n\n        expect(response2.screenshot).toBe(response1.screenshot);\n\n        const response3 = await scrape({\n          url,\n          formats: [\"screenshot@fullPage\"],\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3,\n        }, identity);\n\n        expect(response3.screenshot).not.toBe(response1.screenshot);\n        expect(response3.metadata.cacheState).toBe(\"miss\");\n      }, scrapeTimeout * 3 + 2 * indexCooldown);\n\n      it.concurrent(\"respects screenshot@fullPage\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        const response1 = await scrape({\n          url,\n          formats: [\"screenshot@fullPage\"],\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response1.screenshot).toBeDefined();\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({ \n          url,\n          formats: [\"screenshot@fullPage\"],\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n\n        expect(response2.screenshot).toBe(response1.screenshot);\n\n        const response3 = await scrape({\n          url,\n          formats: [\"screenshot\"],\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3,\n        }, identity);\n\n        expect(response3.screenshot).not.toBe(response1.screenshot);\n        expect(response3.metadata.cacheState).toBe(\"miss\");\n      }, scrapeTimeout * 3 + 1 * indexCooldown);\n\n      it.concurrent(\"respects changeTracking\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        await scrape({\n          url,\n          formats: [\"markdown\", \"changeTracking\"],\n          timeout: scrapeTimeout,\n        }, identity);\n\n        const response1 = await scrape({\n          url,\n          formats: [\"markdown\", \"changeTracking\"],\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n\n        expect(response1.metadata.cacheState).not.toBeDefined();\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          formats: [\"markdown\"],\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3 + indexCooldown,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"hit\");\n      }, scrapeTimeout * 3 + 2 * indexCooldown);\n\n      it.concurrent(\"respects headers\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        await scrape({\n          url,\n          headers: {\n            \"X-Test\": \"test\",\n          },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2 + indexCooldown,\n        }, identity);\n\n        expect(response.metadata.cacheState).toBe(\"miss\");\n      }, scrapeTimeout * 2 + 1 * indexCooldown);\n\n      it.concurrent(\"respects mobile\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        await scrape({\n          url,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response1 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n          mobile: true,\n        }, identity);\n\n        expect(response1.metadata.cacheState).toBe(\"miss\");\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3,\n          mobile: true,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"hit\");\n      }, scrapeTimeout * 3 + 2 * indexCooldown);\n\n      it.concurrent(\"respects actions\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        const response1 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout,\n          actions: [{\n            \"type\": \"wait\",\n            \"milliseconds\": 1000,\n          }]\n        }, identity);\n\n        expect(response1.metadata.cacheState).not.toBeDefined();\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"miss\");\n      }, scrapeTimeout * 2 + 1 * indexCooldown);\n\n      it.concurrent(\"respects location\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        await scrape({\n          url,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response1 = await scrape({\n          url,\n          location: { country: \"DE\" },\n          maxAge: scrapeTimeout * 2,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response1.metadata.cacheState).toBe(\"miss\");\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          location: { country: \"DE\" },\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"hit\");\n      }, scrapeTimeout * 3 + 2 * indexCooldown);\n\n      it.concurrent(\"respects blockAds\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        await scrape({\n          url,\n          blockAds: true,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response0 = await scrape({\n          url,\n          blockAds: true,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2 + indexCooldown,\n        }, identity);\n\n        expect(response0.metadata.cacheState).toBe(\"hit\");\n\n        const response1 = await scrape({\n          url,\n          blockAds: false,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3 + indexCooldown,\n        }, identity);\n\n        expect(response1.metadata.cacheState).toBe(\"miss\");\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          blockAds: false,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 4 + 2 * indexCooldown,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"hit\");\n      }, scrapeTimeout * 4 + 2 * indexCooldown);\n\n      it.concurrent(\"respects proxy: stealth\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        const response1 = await scrape({\n          url,\n          proxy: \"stealth\",\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout,\n        }, identity);\n\n        expect(response1.metadata.proxyUsed).toBe(\"stealth\");\n        expect(response1.metadata.cacheState).not.toBeDefined();\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response2 = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2 + indexCooldown,\n        }, identity);\n\n        expect(response2.metadata.cacheState).toBe(\"hit\");\n\n        const response3 = await scrape({\n          url,\n          proxy: \"stealth\",\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 3 + indexCooldown,\n        }, identity);\n\n        expect(response3.metadata.cacheState).not.toBeDefined();\n      }, scrapeTimeout * 3 + indexCooldown);\n\n      it.concurrent(\"works properly on pages returning 200\", async () => {\n        const id = crypto.randomUUID();\n        const url = \"https://firecrawl.dev/?testId=\" + id;\n\n        await scrape({\n          url,\n          timeout: scrapeTimeout,\n        }, identity);\n\n        await new Promise(resolve => setTimeout(resolve, indexCooldown));\n\n        const response = await scrape({\n          url,\n          timeout: scrapeTimeout,\n          maxAge: scrapeTimeout * 2,\n        }, identity);\n\n        expect(response.metadata.cacheState).toBe(\"hit\");\n      }, scrapeTimeout * 2 + 1 * indexCooldown);\n    });\n\n    describe(\"Change Tracking format\", () => {\n      it.concurrent(\"works\", async () => {\n        const response = await scrape({\n          url: \"https://example.com\",\n          formats: [\"markdown\", \"changeTracking\"],\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response.changeTracking).toBeDefined();\n        expect(response.changeTracking?.previousScrapeAt).not.toBeNull();\n      }, scrapeTimeout);\n\n      it.concurrent(\"includes git diff when requested\", async () => {\n        const response = await scrape({\n          url: \"https://example.com\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: {\n            modes: [\"git-diff\"]\n          },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response.changeTracking).toBeDefined();\n        expect(response.changeTracking?.previousScrapeAt).not.toBeNull();\n        \n        if (response.changeTracking?.changeStatus === \"changed\") {\n          expect(response.changeTracking?.diff).toBeDefined();\n          expect(response.changeTracking?.diff?.text).toBeDefined();\n          expect(response.changeTracking?.diff?.json).toBeDefined();\n          expect(response.changeTracking?.diff?.json.files).toBeInstanceOf(Array);\n        }\n      }, scrapeTimeout);\n      \n      it.concurrent(\"includes structured output when requested\", async () => {\n        const response = await scrape({\n          url: \"https://example.com\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: {\n            modes: [\"json\"],\n            prompt: \"Summarize the changes between the previous and current content\",\n          },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response.changeTracking).toBeDefined();\n        expect(response.changeTracking?.previousScrapeAt).not.toBeNull();\n        \n        if (response.changeTracking?.changeStatus === \"changed\") {\n          expect(response.changeTracking?.json).toBeDefined();\n        }\n      }, scrapeTimeout);\n      \n      it.concurrent(\"supports schema-based extraction for change tracking\", async () => {\n        const response = await scrape({\n          url: \"https://example.com\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: {\n            modes: [\"json\"],\n            schema: {\n              type: \"object\",\n              properties: {\n                pricing: { \n                  type: \"object\",\n                  properties: {\n                    amount: { type: \"number\" },\n                    currency: { type: \"string\" }\n                  }\n                },\n                features: { \n                  type: \"array\", \n                  items: { type: \"string\" } \n                }\n              }\n            }\n          },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response.changeTracking).toBeDefined();\n        expect(response.changeTracking?.previousScrapeAt).not.toBeNull();\n        \n        if (response.changeTracking?.changeStatus === \"changed\") {\n          expect(response.changeTracking?.json).toBeDefined();\n          if (response.changeTracking?.json.pricing) {\n            expect(response.changeTracking?.json.pricing).toHaveProperty(\"old\");\n            expect(response.changeTracking?.json.pricing).toHaveProperty(\"new\");\n          }\n          if (response.changeTracking?.json.features) {\n            expect(response.changeTracking?.json.features).toHaveProperty(\"old\");\n            expect(response.changeTracking?.json.features).toHaveProperty(\"new\");\n          }\n        }\n      }, scrapeTimeout);\n      \n      it.concurrent(\"supports both git-diff and structured modes together\", async () => {\n        const response = await scrape({\n          url: \"https://example.com\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: {\n            modes: [\"git-diff\", \"json\"],\n            schema: {\n              type: \"object\",\n              properties: {\n                summary: { type: \"string\" },\n                changes: { type: \"array\", items: { type: \"string\" } }\n              }\n            }\n          },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response.changeTracking).toBeDefined();\n        expect(response.changeTracking?.previousScrapeAt).not.toBeNull();\n        \n        if (response.changeTracking?.changeStatus === \"changed\") {\n          expect(response.changeTracking?.diff).toBeDefined();\n          expect(response.changeTracking?.diff?.text).toBeDefined();\n          expect(response.changeTracking?.diff?.json).toBeDefined();\n          \n          expect(response.changeTracking?.json).toBeDefined();\n          expect(response.changeTracking?.json).toHaveProperty(\"summary\");\n          expect(response.changeTracking?.json).toHaveProperty(\"changes\");\n        }\n      }, scrapeTimeout);\n\n      it.concurrent(\"supports tags properly\", async () => {\n        const uuid1 = crypto.randomUUID();\n        const uuid2 = crypto.randomUUID();\n\n        const response1 = await scrape({\n          url: \"https://firecrawl.dev/\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: { tag: uuid1 },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        const response2 = await scrape({\n          url: \"https://firecrawl.dev/\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: { tag: uuid2 },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response1.changeTracking?.previousScrapeAt).toBeNull();\n        expect(response1.changeTracking?.changeStatus).toBe(\"new\");\n        expect(response2.changeTracking?.previousScrapeAt).toBeNull();\n        expect(response2.changeTracking?.changeStatus).toBe(\"new\");\n\n        const response3 = await scrape({\n          url: \"https://firecrawl.dev/\",\n          formats: [\"markdown\", \"changeTracking\"],\n          changeTrackingOptions: { tag: uuid1 },\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response3.changeTracking?.previousScrapeAt).not.toBeNull();\n        expect(response3.changeTracking?.changeStatus).not.toBe(\"new\");\n      }, scrapeTimeout * 3);\n    });\n  \n    describe(\"Location API (f-e dependant)\", () => {\n      it.concurrent(\"works without specifying an explicit location\", async () => {\n        await scrape({\n          url: \"https://iplocation.com\",\n          timeout: scrapeTimeout,\n        }, identity);\n      }, scrapeTimeout);\n\n      it.concurrent(\"works with country US\", async () => {\n        const response = await scrape({\n          url: \"https://iplocation.com\",\n          location: { country: \"US\" },\n          timeout: scrapeTimeout,\n        }, identity);\n    \n        expect(response.markdown).toContain(\"| Country | United States |\");\n      }, scrapeTimeout);\n    });\n\n    describe(\"Screenshot (f-e dependant)\", () => {\n      it.concurrent(\"screenshot format works\", async () => {\n        const response = await scrape({\n          url: \"http://firecrawl.dev\",\n          formats: [\"screenshot\"],\n          timeout: scrapeTimeout,\n        }, identity);\n    \n        expect(typeof response.screenshot).toBe(\"string\");\n      }, scrapeTimeout);\n\n      it.concurrent(\"screenshot@fullPage format works\", async () => {\n        const response = await scrape({\n          url: \"http://firecrawl.dev\",\n          formats: [\"screenshot@fullPage\"],\n          timeout: scrapeTimeout,\n        }, identity);\n    \n        expect(typeof response.screenshot).toBe(\"string\");\n      }, scrapeTimeout);\n    });\n\n    describe(\"PDF generation (f-e dependant)\", () => {\n      it.concurrent(\"works\", async () => {\n        const response = await scrape({\n          url: \"https://firecrawl.dev\",\n          timeout: scrapeTimeout,\n          actions: [{ type: \"pdf\" }],\n        }, identity);\n\n        expect(response.actions?.pdfs).toBeDefined();\n        expect(response.actions?.pdfs?.length).toBe(1);\n        expect(response.actions?.pdfs?.[0]).toBeDefined();\n        expect(typeof response.actions?.pdfs?.[0]).toBe(\"string\");\n      }, scrapeTimeout);\n    });\n  \n    describe(\"Proxy API (f-e dependant)\", () => {\n      it.concurrent(\"undefined works\", async () => {\n        await scrape({\n          url: \"http://firecrawl.dev\",\n          timeout: scrapeTimeout,\n        }, identity);\n      }, scrapeTimeout);\n\n      it.concurrent(\"basic works\", async () => {\n        await scrape({\n          url: \"http://firecrawl.dev\",\n          proxy: \"basic\",\n          timeout: scrapeTimeout,\n        }, identity);\n      }, scrapeTimeout);\n\n      it.concurrent(\"stealth works\", async () => {\n        await scrape({\n          url: \"http://firecrawl.dev\",\n          proxy: \"stealth\",\n          timeout: scrapeTimeout * 2,\n        }, identity);\n      }, scrapeTimeout * 2);\n\n      it.concurrent(\"auto works properly on non-stealth site\", async () => {\n        const res = await scrape({\n          url: \"http://firecrawl.dev\",\n          proxy: \"auto\",\n          timeout: scrapeTimeout * 2,\n        }, identity);\n\n        expect(res.metadata.proxyUsed).toBe(\"basic\");\n      }, scrapeTimeout * 2);\n\n      // TODO: flaky\n      // it.concurrent(\"auto works properly on 'stealth' site (faked for reliabile testing)\", async () => {\n      //   const res = await scrape({\n      //     url: \"https://eo16f6718vph4un.m.pipedream.net\", // always returns 403\n      //     proxy: \"auto\",\n      //     timeout: scrapeTimeout * 2,\n      //   }, identity);\n\n      //   expect(res.metadata.proxyUsed).toBe(\"stealth\");\n      // }, scrapeTimeout * 2);\n    });\n    \n    describe(\"PDF (f-e dependant)\", () => {\n      // Temporarily disabled, too flaky\n      // it.concurrent(\"works for PDFs behind anti-bot\", async () => {\n      //   const response = await scrape({\n      //     url: \"https://www.researchgate.net/profile/Amir-Leshem/publication/220732050_Robust_adaptive_beamforming_based_on_jointly_estimating_covariance_matrix_and_steering_vector/links/0c96052d2fd8f0a84b000000/Robust-adaptive-beamforming-based-on-jointly-estimating-covariance-matrix-and-steering-vector.pdf\"\n      //   });\n\n      //   expect(response.markdown).toContain(\"Robust adaptive beamforming based on jointly estimating covariance matrix\");\n      // }, 60000);\n\n      it.concurrent(\"blocks long PDFs with insufficient timeout\", async () => {\n        const response = await scrapeWithFailure({\n          url: \"https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf\",\n          timeout: scrapeTimeout,\n        }, identity);\n\n        expect(response.error).toContain(\"Insufficient time to process PDF\");\n      }, scrapeTimeout);\n\n      it.concurrent(\"scrapes long PDFs with sufficient timeout\", async () => {\n        const response = await scrape({\n          url: \"https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf\",\n          timeout: scrapeTimeout * 5,\n        }, identity);\n\n        // text on the last page\n        expect(response.markdown).toContain(\"Redistribution and use in source and binary forms, with or without modification\");\n      }, scrapeTimeout * 5);\n\n      it.concurrent(\"scrapes Google Docs links as PDFs\", async () => {\n        const response = await scrape({\n          url: \"https://docs.google.com/document/d/1H-hOLYssS8xXl2o5hxj4ipE7yyhZAX1s7ADYM1Hdlzo/view\",\n          timeout: scrapeTimeout * 5,\n        }, identity);\n\n        expect(response.markdown).toContain(\"This is a test to confirm Google Docs scraping abilities.\");\n      }, scrapeTimeout * 5);\n\n      it.concurrent(\"scrapes Google Slides links as PDFs\", async () => {\n        const response = await scrape({\n          url: \"https://docs.google.com/presentation/d/1pDKL1UULpr6siq_eVWE1hjqt5MKCgSSuKS_MWahnHAQ/view\",\n          timeout: scrapeTimeout * 5,\n        }, identity);\n\n        expect(response.markdown).toContain(\"This is a test to confirm Google Slides scraping abilities.\");\n      }, scrapeTimeout * 5);\n    });\n  }\n\n  if (!process.env.TEST_SUITE_SELF_HOSTED || process.env.OPENAI_API_KEY || process.env.OLLAMA_BASE_URL) {\n    describe(\"JSON format\", () => {\n      it.concurrent(\"works\", async () => {\n        const response = await scrape({\n          url: \"http://firecrawl.dev\",\n          formats: [\"json\"],\n          jsonOptions: {\n            prompt: \"Based on the information on the page, find what the company's mission is and whether it supports SSO, and whether it is open source.\",\n            schema: {\n              type: \"object\",\n              properties: {\n                company_mission: {\n                  type: \"string\",\n                },\n                supports_sso: {\n                  type: \"boolean\",\n                },\n                is_open_source: {\n                  type: \"boolean\",\n                },\n              },\n              required: [\"company_mission\", \"supports_sso\", \"is_open_source\"],\n            },\n          },\n          timeout: scrapeTimeout,\n        }, identity);\n    \n        expect(response).toHaveProperty(\"json\");\n        expect(response.json).toHaveProperty(\"company_mission\");\n        expect(typeof response.json.company_mission).toBe(\"string\");\n        expect(response.json).toHaveProperty(\"supports_sso\");\n        expect(response.json.supports_sso).toBe(false);\n        expect(typeof response.json.supports_sso).toBe(\"boolean\");\n        expect(response.json).toHaveProperty(\"is_open_source\");\n        expect(response.json.is_open_source).toBe(true);\n        expect(typeof response.json.is_open_source).toBe(\"boolean\");\n      }, scrapeTimeout);\n    });\n  }\n\n  it.concurrent(\"sourceURL stays unnormalized\", async () => {\n    const response = await scrape({\n      url: \"https://firecrawl.dev/?pagewanted=all&et_blog\",\n      timeout: scrapeTimeout,\n    }, identity);\n\n    expect(response.metadata.sourceURL).toBe(\"https://firecrawl.dev/?pagewanted=all&et_blog\");\n  }, scrapeTimeout);\n\n  it.concurrent(\"application/json content type is markdownified properly\", async () => {\n    const response = await scrape({\n      url: \"https://jsonplaceholder.typicode.com/todos/1\",\n      formats: [\"markdown\"],\n      timeout: scrapeTimeout,\n    }, identity);\n\n    expect(response.markdown).toContain(\"```json\");\n  }, scrapeTimeout);\n});\n"]}