{"version":3,"file":"queue-worker.js","sourceRoot":"","sources":["../../../src/services/queue-worker.ts"],"names":[],"mappings":"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","sourcesContent":["import \"dotenv/config\";\nimport \"./sentry\";\nimport * as Sentry from \"@sentry/node\";\nimport { CustomError } from \"../lib/custom-error\";\nimport {\n  getScrapeQueue,\n  getExtractQueue,\n  getDeepResearchQueue,\n  redisConnection,\n  getGenerateLlmsTxtQueue,\n  getBillingQueue,\n} from \"./queue-service\";\nimport { startWebScraperPipeline } from \"../main/runWebScraper\";\nimport { callWebhook } from \"./webhook\";\nimport { logJob } from \"./logging/log_job\";\nimport { Job, Queue } from \"bullmq\";\nimport { logger as _logger } from \"../lib/logger\";\nimport { Worker } from \"bullmq\";\nimport systemMonitor from \"./system-monitor\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addCrawlJob,\n  addCrawlJobDone,\n  addCrawlJobs,\n  crawlToCrawler,\n  finishCrawl,\n  finishCrawlPre,\n  unPreFinishCrawl,\n  finishCrawlKickoff,\n  generateURLPermutations,\n  getCrawl,\n  getCrawlJobs,\n  getDoneJobsOrderedLength,\n  lockURL,\n  lockURLsIndividually,\n  normalizeURL,\n  saveCrawl,\n} from \"../lib/crawl-redis\";\nimport { StoredCrawl } from \"../lib/crawl-redis\";\nimport { addScrapeJob, addScrapeJobs } from \"./queue-jobs\";\nimport {\n  addJobPriority,\n  deleteJobPriority,\n  getJobPriority,\n} from \"../../src/lib/job-priority\";\nimport { getJobs } from \"..//controllers/v1/crawl-status\";\nimport { configDotenv } from \"dotenv\";\nimport { scrapeOptions } from \"../controllers/v1/types\";\nimport {\n  concurrentJobDone,\n  pushConcurrencyLimitActiveJob,\n} from \"../lib/concurrency-limit\";\nimport { isUrlBlocked } from \"../scraper/WebScraper/utils/blocklist\";\nimport { BLOCKLISTED_URL_MESSAGE } from \"../lib/strings\";\nimport { Document, TeamFlags } from \"../controllers/v1/types\";\nimport {\n  ExtractResult,\n  performExtraction,\n} from \"../lib/extract/extraction-service\";\nimport { supabase_service } from \"../services/supabase\";\nimport { normalizeUrl, normalizeUrlOnlyHostname } from \"../lib/canonical-url\";\nimport { saveExtract, updateExtract } from \"../lib/extract/extract-redis\";\nimport { billTeam } from \"./billing/credit_billing\";\nimport { updateDeepResearch } from \"../lib/deep-research/deep-research-redis\";\nimport { performDeepResearch } from \"../lib/deep-research/deep-research-service\";\nimport { performGenerateLlmsTxt } from \"../lib/generate-llmstxt/generate-llmstxt-service\";\nimport { updateGeneratedLlmsTxt } from \"../lib/generate-llmstxt/generate-llmstxt-redis\";\nimport { performExtraction_F0 } from \"../lib/extract/fire-0/extraction-service-f0\";\nimport { CostTracking } from \"../lib/extract/extraction-service\";\nimport { getACUCTeam } from \"../controllers/auth\";\nimport Express from \"express\";\nimport http from \"http\";\nimport https from \"https\";\nimport { cacheableLookup } from \"../scraper/scrapeURL/lib/cacheableLookup\";\nimport { robustFetch } from \"../scraper/scrapeURL/lib/fetch\";\nimport { RateLimiterMode } from \"../types\";\nimport { calculateCreditsToBeBilled } from \"../lib/scrape-billing\";\nimport { redisEvictConnection } from \"./redis\";\nimport { generateURLSplits, queryIndexAtSplitLevel } from \"./index\";\nimport { WebCrawler } from \"../scraper/WebScraper/crawler\";\nimport type { Logger } from \"winston\";\n\nconfigDotenv();\n\nclass RacedRedirectError extends Error {\n  constructor() {\n    super(\"Raced redirect error\");\n  }\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst workerLockDuration = Number(process.env.WORKER_LOCK_DURATION) || 60000;\nconst workerStalledCheckInterval =\n  Number(process.env.WORKER_STALLED_CHECK_INTERVAL) || 30000;\nconst jobLockExtendInterval =\n  Number(process.env.JOB_LOCK_EXTEND_INTERVAL) || 10000;\nconst jobLockExtensionTime =\n  Number(process.env.JOB_LOCK_EXTENSION_TIME) || 60000;\n\nconst cantAcceptConnectionInterval =\n  Number(process.env.CANT_ACCEPT_CONNECTION_INTERVAL) || 2000;\nconst connectionMonitorInterval =\n  Number(process.env.CONNECTION_MONITOR_INTERVAL) || 10;\nconst gotJobInterval = Number(process.env.CONNECTION_MONITOR_INTERVAL) || 20;\n\nconst runningJobs: Set<string> = new Set();\n\n// Install cacheable lookup for all other requests\ncacheableLookup.install(http.globalAgent);\ncacheableLookup.install(https.globalAgent);\n\nasync function finishCrawlIfNeeded(job: Job & { id: string }, sc: StoredCrawl) {\n  const logger = _logger.child({\n    module: \"queue-worker\",\n    method: \"finishCrawlIfNeeded\",\n    jobId: job.id,\n    scrapeId: job.id,\n    crawlId: job.data.crawl_id,\n    zeroDataRetention: sc.internalOptions.zeroDataRetention,\n  });\n\n  if (await finishCrawlPre(job.data.crawl_id, logger)) {\n    logger.info(\"Crawl is pre-finished, checking if we need to add more jobs\");\n    if (\n      job.data.crawlerOptions &&\n      !(await redisEvictConnection.exists(\n        \"crawl:\" + job.data.crawl_id + \":invisible_urls\",\n      ))\n    ) {\n      await redisEvictConnection.set(\n        \"crawl:\" + job.data.crawl_id + \":invisible_urls\",\n        \"done\",\n        \"EX\",\n        60 * 60 * 24,\n      );\n\n      const sc = (await getCrawl(job.data.crawl_id))!;\n\n      const visitedUrls = new Set(\n        await redisEvictConnection.smembers(\n          \"crawl:\" + job.data.crawl_id + \":visited_unique\",\n        ),\n      );\n      \n      logger.info(\"Visited URLs\", {\n        visitedUrls: visitedUrls.size,\n      });\n\n      let lastUrls: string[] = [];\n      const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n      if (useDbAuthentication) {\n        lastUrls = (\n          (\n            await supabase_service.rpc(\"diff_get_last_crawl_urls\", {\n              i_team_id: job.data.team_id,\n              i_url: sc.originUrl!,\n            })\n          ).data ?? []\n        ).map((x) => x.url);\n      }\n\n      const lastUrlsSet = new Set(lastUrls);\n\n      logger.info(\"Last URLs\", {\n        lastUrls: lastUrlsSet.size,\n      });\n\n      const crawler = crawlToCrawler(\n        job.data.crawl_id,\n        sc,\n        (await getACUCTeam(job.data.team_id))?.flags ?? null,\n        sc.originUrl!,\n        job.data.crawlerOptions,\n      );\n\n      const univistedUrls = crawler.filterLinks(\n        Array.from(lastUrlsSet).filter((x) => !visitedUrls.has(x)),\n        Infinity,\n        sc.crawlerOptions.maxDepth ?? 10,\n      );\n\n      const addableJobCount =\n        sc.crawlerOptions.limit === undefined\n          ? Infinity\n          : sc.crawlerOptions.limit -\n            (await getDoneJobsOrderedLength(job.data.crawl_id));\n\n      if (univistedUrls.links.length !== 0 && addableJobCount > 0) {\n        logger.info(\"Adding jobs\", {\n          univistedUrls: univistedUrls.links.length,\n          addableJobCount,\n        });\n\n        const jobs = univistedUrls.links.slice(0, addableJobCount).map((url) => {\n          const uuid = uuidv4();\n          return {\n            name: uuid,\n            data: {\n              url,\n              mode: \"single_urls\" as const,\n              team_id: job.data.team_id,\n              crawlerOptions: {\n                ...job.data.crawlerOptions,\n                urlInvisibleInCurrentCrawl: true,\n              },\n              scrapeOptions: job.data.scrapeOptions,\n              internalOptions: sc.internalOptions,\n              origin: job.data.origin,\n              integration: job.data.integration,\n              crawl_id: job.data.crawl_id,\n              sitemapped: true,\n              webhook: job.data.webhook,\n              v1: job.data.v1,\n              zeroDataRetention: job.data.zeroDataRetention,\n            },\n            opts: {\n              jobId: uuid,\n              priority: 20,\n            },\n          };\n        });\n\n        const lockedIds = await lockURLsIndividually(\n          job.data.crawl_id,\n          sc,\n          jobs.map((x) => ({ id: x.opts.jobId, url: x.data.url })),\n        );\n        const lockedJobs = jobs.filter((x) =>\n          lockedIds.find((y) => y.id === x.opts.jobId),\n        );\n        await addCrawlJobs(\n          job.data.crawl_id,\n          lockedJobs.map((x) => x.opts.jobId),\n          logger,\n        );\n        await addScrapeJobs(lockedJobs);\n\n        if (lockedJobs.length > 0) {\n          logger.info(\"Added jobs, not going for the full finish\", {\n            lockedJobs: lockedJobs.length,\n          });\n\n          await unPreFinishCrawl(job.data.crawl_id);\n          return;\n        } else {\n          logger.info(\"No jobs added (all discovered URLs were locked), finishing crawl\");\n        }\n      }\n    }\n\n    logger.info(\"Finishing crawl\");\n    await finishCrawl(job.data.crawl_id, logger);\n\n    if (!job.data.v1) {\n      const jobIDs = await getCrawlJobs(job.data.crawl_id);\n\n      const jobs = (await getJobs(jobIDs)).sort(\n        (a, b) => a.timestamp - b.timestamp,\n      );\n      // const jobStatuses = await Promise.all(jobs.map((x) => x.getState()));\n      const jobStatus = sc.cancelled // || jobStatuses.some((x) => x === \"failed\")\n        ? \"failed\"\n        : \"completed\";\n\n      const fullDocs = jobs\n        .map((x) =>\n          x.returnvalue\n            ? Array.isArray(x.returnvalue)\n              ? x.returnvalue[0]\n              : x.returnvalue\n            : null,\n        )\n        .filter((x) => x !== null);\n\n      await logJob({\n        job_id: job.data.crawl_id,\n        success: jobStatus === \"completed\",\n        message: sc.cancelled ? \"Cancelled\" : undefined,\n        num_docs: fullDocs.length,\n        docs: [],\n        time_taken: (Date.now() - sc.createdAt) / 1000,\n        team_id: job.data.team_id,\n        mode: job.data.crawlerOptions !== null ? \"crawl\" : \"batch_scrape\",\n        url: sc.originUrl!,\n        scrapeOptions: sc.scrapeOptions,\n        crawlerOptions: sc.crawlerOptions,\n        origin: job.data.origin,\n        integration: job.data.integration,\n        zeroDataRetention: job.data.zeroDataRetention,\n      }, false, job.data.internalOptions?.bypassBilling ?? false);\n\n      const data = {\n        success: jobStatus !== \"failed\",\n        result: {\n          links: fullDocs.map((doc) => {\n            return {\n              content: doc,\n              source: doc?.metadata?.sourceURL ?? doc?.url ?? \"\",\n            };\n          }),\n        },\n        project_id: job.data.project_id,\n        docs: fullDocs,\n      };\n\n      // v0 web hooks, call when done with all the data\n      if (!job.data.v1) {\n        callWebhook({\n          teamId: job.data.team_id,\n          crawlId: job.data.crawl_id,\n          data,\n          webhook: job.data.webhook,\n          v1: job.data.v1,\n          eventType: job.data.crawlerOptions !== null\n            ? \"crawl.completed\"\n            : \"batch_scrape.completed\",\n        });\n      }\n    } else {\n      const num_docs = await getDoneJobsOrderedLength(job.data.crawl_id);\n      const jobStatus = sc.cancelled ? \"failed\" : \"completed\";\n\n      let credits_billed = null;\n\n      if (process.env.USE_DB_AUTHENTICATION === \"true\") {\n        const creditsRpc = await supabase_service\n          .rpc(\"credits_billed_by_crawl_id_1\", {\n            i_crawl_id: job.data.crawl_id,\n          });\n\n        credits_billed = creditsRpc.data?.[0]?.credits_billed ?? null;\n\n        if (credits_billed === null) {\n          logger.warn(\"Credits billed is null\", {\n            error: creditsRpc.error,\n          });\n        }\n      }\n      \n      await logJob(\n        {\n          job_id: job.data.crawl_id,\n          success: jobStatus === \"completed\",\n          message: sc.cancelled ? \"Cancelled\" : undefined,\n          num_docs,\n          docs: [],\n          time_taken: (Date.now() - sc.createdAt) / 1000,\n          team_id: job.data.team_id,\n          scrapeOptions: sc.scrapeOptions,\n          mode: job.data.crawlerOptions !== null ? \"crawl\" : \"batch_scrape\",\n          url:\n            sc?.originUrl ??\n            (job.data.crawlerOptions === null ? \"Batch Scrape\" : \"Unknown\"),\n          crawlerOptions: sc.crawlerOptions,\n          origin: job.data.origin,\n          integration: job.data.integration,\n          credits_billed,\n          zeroDataRetention: job.data.zeroDataRetention,\n        },\n        true,\n        job.data.internalOptions?.bypassBilling ?? false,\n      );\n\n\n      // v1 web hooks, call when done with no data, but with event completed\n      if (job.data.v1 && job.data.webhook) {\n        callWebhook({\n          teamId: job.data.team_id,\n          crawlId: job.data.crawl_id,\n          data: [],\n          webhook: job.data.webhook,\n          v1: job.data.v1,\n          eventType: job.data.crawlerOptions !== null\n            ? \"crawl.completed\"\n            : \"batch_scrape.completed\",\n        });\n      }\n    }\n  }\n}\n\nconst processJobInternal = async (token: string, job: Job & { id: string }) => {\n  const logger = _logger.child({\n    module: \"queue-worker\",\n    method: \"processJobInternal\",\n    jobId: job.id,\n    scrapeId: job.id,\n    crawlId: job.data?.crawl_id ?? undefined,\n    zeroDataRetention: job.data?.zeroDataRetention ?? false,\n  });\n\n  const extendLockInterval = setInterval(async () => {\n    logger.info(`🐂 Worker extending lock on job ${job.id}`, {\n      extendInterval: jobLockExtendInterval,\n      extensionTime: jobLockExtensionTime,\n    });\n\n    if (job.data?.mode !== \"kickoff\" && job.data?.team_id) {\n      await pushConcurrencyLimitActiveJob(job.data.team_id, job.id, 60 * 1000); // 60s lock renew, just like in the queue\n    }\n\n    await job.extendLock(token, jobLockExtensionTime);\n  }, jobLockExtendInterval);\n\n  await addJobPriority(job.data.team_id, job.id);\n  let err = null;\n  try {\n    if (job.data?.mode === \"kickoff\") {\n      const result = await processKickoffJob(job, token);\n      if (result.success) {\n        try {\n          await job.moveToCompleted(null, token, false);\n        } catch (e) {}\n      } else {\n        logger.debug(\"Job failed\", { result, mode: job.data.mode });\n        await job.moveToFailed((result as any).error, token, false);\n      }\n    } else {\n      const result = await processJob(job, token);\n      if (result.success) {\n        try {\n          if (\n            process.env.USE_DB_AUTHENTICATION === \"true\" &&\n            (job.data.crawl_id || process.env.GCS_BUCKET_NAME)\n          ) {\n            logger.debug(\n              \"Job succeeded -- putting null in Redis\",\n            );\n            await job.moveToCompleted(null, token, false);\n          } else {\n            logger.debug(\"Job succeeded -- putting result in Redis\");\n            await job.moveToCompleted(result.document, token, false);\n          }\n        } catch (e) {}\n      } else {\n        logger.debug(\"Job failed\", { result });\n        await job.moveToFailed((result as any).error, token, false);\n      }\n    }\n  } catch (error) {\n    logger.debug(\"Job failed\", { error });\n    Sentry.captureException(error);\n    err = error;\n    await job.moveToFailed(error, token, false);\n  } finally {\n    await deleteJobPriority(job.data.team_id, job.id);\n    clearInterval(extendLockInterval);\n  }\n\n  return err;\n};\n\nconst processExtractJobInternal = async (\n  token: string,\n  job: Job & { id: string },\n) => {\n  const logger = _logger.child({\n    module: \"extract-worker\",\n    method: \"processJobInternal\",\n    jobId: job.id,\n    extractId: job.data.extractId,\n    teamId: job.data?.teamId ?? undefined,\n  });\n\n  const extendLockInterval = setInterval(async () => {\n    logger.info(`🔄 Worker extending lock on job ${job.id}`);\n    await job.extendLock(token, jobLockExtensionTime);\n  }, jobLockExtendInterval);\n\n  try {\n    let result: ExtractResult | null = null;\n\n    const model = job.data.request.agent?.model\n    if (job.data.request.agent && model && model.toLowerCase().includes(\"fire-1\")) {\n      result = await performExtraction(job.data.extractId, {\n        request: job.data.request,\n        teamId: job.data.teamId,\n        subId: job.data.subId,\n      });\n    } else {\n      result = await performExtraction_F0(job.data.extractId, {\n        request: job.data.request,\n        teamId: job.data.teamId,\n        subId: job.data.subId,\n      });\n    }\n    // result = await performExtraction_F0(job.data.extractId, {\n    //   request: job.data.request,\n    //   teamId: job.data.teamId,\n    //   subId: job.data.subId,\n    // });\n\n    if (result && result.success) {\n      // Move job to completed state in Redis\n      await job.moveToCompleted(result, token, false);\n      return result;\n    } else {\n      // throw new Error(result.error || \"Unknown error during extraction\");\n\n      await job.moveToCompleted(result, token, false);\n      await updateExtract(job.data.extractId, {\n        status: \"failed\",\n        error:\n          result?.error ??\n          \"Unknown error, please contact help@firecrawl.com. Extract id: \" +\n            job.data.extractId,\n      });\n\n      return result;\n    }\n  } catch (error) {\n    logger.error(`🚫 Job errored ${job.id} - ${error}`, { error });\n\n    Sentry.captureException(error, {\n      data: {\n        job: job.id,\n      },\n    });\n\n    try {\n      // Move job to failed state in Redis\n      await job.moveToFailed(error, token, false);\n    } catch (e) {\n      logger.log(\"Failed to move job to failed state in Redis\", { error });\n    }\n\n    await updateExtract(job.data.extractId, {\n      status: \"failed\",\n      error:\n        error.error ??\n        error ??\n        \"Unknown error, please contact help@firecrawl.com. Extract id: \" +\n          job.data.extractId,\n    });\n    return {\n      success: false,\n      error:\n        error.error ??\n        error ??\n        \"Unknown error, please contact help@firecrawl.com. Extract id: \" +\n          job.data.extractId,\n    };\n    // throw error;\n  } finally {\n    clearInterval(extendLockInterval);\n  }\n};\n\nconst processDeepResearchJobInternal = async (\n  token: string,\n  job: Job & { id: string },\n) => {\n  const logger = _logger.child({\n    module: \"deep-research-worker\",\n    method: \"processJobInternal\",\n    jobId: job.id,\n    researchId: job.data.researchId,\n    teamId: job.data?.teamId ?? undefined,\n  });\n\n  const extendLockInterval = setInterval(async () => {\n    logger.info(`🔄 Worker extending lock on job ${job.id}`);\n    await job.extendLock(token, jobLockExtensionTime);\n  }, jobLockExtendInterval);\n\n  try {\n    console.log(\n      \"[Deep Research] Starting deep research: \",\n      job.data.researchId,\n    );\n    const result = await performDeepResearch({\n      researchId: job.data.researchId,\n      teamId: job.data.teamId,\n      query: job.data.request.query,\n      maxDepth: job.data.request.maxDepth,\n      timeLimit: job.data.request.timeLimit,\n      subId: job.data.subId,\n      maxUrls: job.data.request.maxUrls,\n      analysisPrompt: job.data.request.analysisPrompt,\n      systemPrompt: job.data.request.systemPrompt,\n      formats: job.data.request.formats,\n      jsonOptions: job.data.request.jsonOptions,\n    });\n\n    if (result.success) {\n      // Move job to completed state in Redis and update research status\n      await job.moveToCompleted(result, token, false);\n      return result;\n    } else {\n      // If the deep research failed but didn't throw an error\n      const error = new Error(\"Deep research failed without specific error\");\n      await updateDeepResearch(job.data.researchId, {\n        status: \"failed\",\n        error: error.message,\n      });\n      await job.moveToFailed(error, token, false);\n\n      return { success: false, error: error.message };\n    }\n  } catch (error) {\n    logger.error(`🚫 Job errored ${job.id} - ${error}`, { error });\n\n    Sentry.captureException(error, {\n      data: {\n        job: job.id,\n      },\n    });\n\n    try {\n      // Move job to failed state in Redis\n      await job.moveToFailed(error, token, false);\n    } catch (e) {\n      logger.error(\"Failed to move job to failed state in Redis\", { error });\n    }\n\n    await updateDeepResearch(job.data.researchId, {\n      status: \"failed\",\n      error: error.message || \"Unknown error occurred\",\n    });\n\n    return { success: false, error: error.message || \"Unknown error occurred\" };\n  } finally {\n    clearInterval(extendLockInterval);\n  }\n};\n\nconst processGenerateLlmsTxtJobInternal = async (\n  token: string,\n  job: Job & { id: string },\n) => {\n  const logger = _logger.child({\n    module: \"generate-llmstxt-worker\",\n    method: \"processJobInternal\",\n    jobId: job.id,\n    generateId: job.data.generateId,\n    teamId: job.data?.teamId ?? undefined,\n  });\n\n  const extendLockInterval = setInterval(async () => {\n    logger.info(`🔄 Worker extending lock on job ${job.id}`);\n    await job.extendLock(token, jobLockExtensionTime);\n  }, jobLockExtendInterval);\n\n  try {\n    const result = await performGenerateLlmsTxt({\n      generationId: job.data.generationId,\n      teamId: job.data.teamId,\n      url: job.data.request.url,\n      maxUrls: job.data.request.maxUrls,\n      showFullText: job.data.request.showFullText,\n      subId: job.data.subId,\n      cache: job.data.request.cache,\n    });\n\n    if (result.success) {\n      await job.moveToCompleted(result, token, false);\n      await updateGeneratedLlmsTxt(job.data.generateId, {\n        status: \"completed\",\n        generatedText: result.data.generatedText,\n        fullText: result.data.fullText,\n      });\n      return result;\n    } else {\n      const error = new Error(\n        \"LLMs text generation failed without specific error\",\n      );\n      await job.moveToFailed(error, token, false);\n      await updateGeneratedLlmsTxt(job.data.generateId, {\n        status: \"failed\",\n        error: error.message,\n      });\n      return { success: false, error: error.message };\n    }\n  } catch (error) {\n    logger.error(`🚫 Job errored ${job.id} - ${error}`, { error });\n\n    Sentry.captureException(error, {\n      data: {\n        job: job.id,\n      },\n    });\n\n    try {\n      await job.moveToFailed(error, token, false);\n    } catch (e) {\n      logger.error(\"Failed to move job to failed state in Redis\", { error });\n    }\n\n    await updateGeneratedLlmsTxt(job.data.generateId, {\n      status: \"failed\",\n      error: error.message || \"Unknown error occurred\",\n    });\n\n    return { success: false, error: error.message || \"Unknown error occurred\" };\n  } finally {\n    clearInterval(extendLockInterval);\n  }\n};\n\nlet isShuttingDown = false;\nlet isWorkerStalled = false;\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"Received SIGTERM. Shutting down gracefully...\");\n  isShuttingDown = true;\n});\n\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"Received SIGTERM. Shutting down gracefully...\");\n  isShuttingDown = true;\n});\n\nlet cantAcceptConnectionCount = 0;\n\nconst workerFun = async (\n  queue: Queue,\n  processJobInternal: (token: string, job: Job) => Promise<any>,\n) => {\n  const logger = _logger.child({ module: \"queue-worker\", method: \"workerFun\" });\n\n  const worker = new Worker(queue.name, null, {\n    connection: redisConnection,\n    lockDuration: 30 * 1000, // 30 seconds\n    stalledInterval: 30 * 1000, // 30 seconds\n    maxStalledCount: 10, // 10 times\n  });\n\n  worker.startStalledCheckTimer();\n\n  const monitor = await systemMonitor;\n\n  while (true) {\n    if (isShuttingDown) {\n      console.log(\"No longer accepting new jobs. SIGINT\");\n      break;\n    }\n    const token = uuidv4();\n    const canAcceptConnection = await monitor.acceptConnection();\n    if (!canAcceptConnection) {\n      console.log(\"Can't accept connection due to RAM/CPU load\");\n      logger.info(\"Can't accept connection due to RAM/CPU load\");\n      cantAcceptConnectionCount++;\n\n      isWorkerStalled = cantAcceptConnectionCount >= 25;\n\n      if (isWorkerStalled) {\n        logger.error(\"WORKER STALLED\", {\n          cpuUsage: await monitor.checkCpuUsage(),\n          memoryUsage: await monitor.checkMemoryUsage(),\n        });\n      }\n\n      await sleep(cantAcceptConnectionInterval); // more sleep\n      continue;\n    } else if (!currentLiveness) {\n      logger.info(\"Not accepting jobs because the liveness check failed\");\n\n      await sleep(cantAcceptConnectionInterval);\n      continue;\n    } else {\n      cantAcceptConnectionCount = 0;\n    }\n\n    const job = await worker.getNextJob(token);\n    if (job) {\n      if (job.id) {\n        runningJobs.add(job.id);\n      }\n\n      async function afterJobDone(job: Job<any, any, string>) {\n        if (job.id) {\n          runningJobs.delete(job.id);\n        }\n\n        await concurrentJobDone(job);\n      }\n\n      if (job.data && job.data.sentry && Sentry.isInitialized()) {\n        Sentry.continueTrace(\n          {\n            sentryTrace: job.data.sentry.trace,\n            baggage: job.data.sentry.baggage,\n          },\n          () => {\n            Sentry.startSpan(\n              {\n                name: \"Scrape job\",\n                attributes: {\n                  job: job.id,\n                  worker: process.env.FLY_MACHINE_ID ?? worker.id,\n                },\n              },\n              async (span) => {\n                await Sentry.startSpan(\n                  {\n                    name: \"Process scrape job\",\n                    op: \"queue.process\",\n                    attributes: {\n                      \"messaging.message.id\": job.id,\n                      \"messaging.destination.name\": getScrapeQueue().name,\n                      \"messaging.message.body.size\": job.data.sentry.size,\n                      \"messaging.message.receive.latency\":\n                        Date.now() - (job.processedOn ?? job.timestamp),\n                      \"messaging.message.retry.count\": job.attemptsMade,\n                    },\n                  },\n                  async () => {\n                    let res;\n                    try {\n                      res = await processJobInternal(token, job);\n                    } finally {\n                      await afterJobDone(job);\n                    }\n\n                    if (res !== null) {\n                      span.setStatus({ code: 2 }); // ERROR\n                    } else {\n                      span.setStatus({ code: 1 }); // OK\n                    }\n                  },\n                );\n              },\n            );\n          },\n        );\n      } else {\n        Sentry.startSpan(\n          {\n            name: \"Scrape job\",\n            attributes: {\n              job: job.id,\n              worker: process.env.FLY_MACHINE_ID ?? worker.id,\n            },\n          },\n          () => {\n            processJobInternal(token, job).finally(() => afterJobDone(job));\n          },\n        );\n      }\n\n      await sleep(gotJobInterval);\n    } else {\n      await sleep(connectionMonitorInterval);\n    }\n  }\n};\n\nasync function kickoffGetIndexLinks(sc: StoredCrawl, crawler: WebCrawler, url: string) {\n  if (sc.crawlerOptions.ignoreSitemap) {\n    return [];\n  }\n\n  const trimmedURL = new URL(url);\n  trimmedURL.search = \"\";\n\n  const index = await queryIndexAtSplitLevel(\n    sc.crawlerOptions.allowBackwardCrawling ? generateURLSplits(trimmedURL.href)[0] : trimmedURL.href,\n    sc.crawlerOptions.limit ?? 10000,\n  );\n\n  const validIndexLinksResult = crawler.filterLinks(\n    index.filter(x => crawler.filterURL(x, trimmedURL.href).allowed),\n    sc.crawlerOptions.limit ?? 10000,\n    sc.crawlerOptions.maxDepth ?? 10,\n    false,\n  );\n  const validIndexLinks = validIndexLinksResult.links;\n\n  return validIndexLinks;\n}\n\nasync function processKickoffJob(job: Job & { id: string }, token: string) {\n  const logger = _logger.child({\n    module: \"queue-worker\",\n    method: \"processKickoffJob\",\n    jobId: job.id,\n    scrapeId: job.id,\n    crawlId: job.data?.crawl_id ?? undefined,\n    teamId: job.data?.team_id ?? undefined,\n    zeroDataRetention: job.data.zeroDataRetention ?? false,\n  });\n\n  try {\n    const sc = (await getCrawl(job.data.crawl_id)) as StoredCrawl;\n    const crawler = crawlToCrawler(job.data.crawl_id, sc, (await getACUCTeam(job.data.team_id))?.flags ?? null);\n\n    logger.debug(\"Locking URL...\");\n    await lockURL(job.data.crawl_id, sc, job.data.url);\n    const jobId = uuidv4();\n    logger.debug(\"Adding scrape job to Redis...\", { jobId });\n    await addScrapeJob(\n      {\n        url: job.data.url,\n        mode: \"single_urls\",\n        team_id: job.data.team_id,\n        crawlerOptions: job.data.crawlerOptions,\n        scrapeOptions: scrapeOptions.parse(job.data.scrapeOptions),\n        internalOptions: sc.internalOptions,\n        origin: job.data.origin,\n        integration: job.data.integration,\n        crawl_id: job.data.crawl_id,\n        webhook: job.data.webhook,\n        v1: job.data.v1,\n        isCrawlSourceScrape: true,\n        zeroDataRetention: job.data.zeroDataRetention,\n      },\n      {\n        priority: 15,\n      },\n      jobId,\n    );\n    logger.debug(\"Adding scrape job to BullMQ...\", { jobId });\n    await addCrawlJob(job.data.crawl_id, jobId, logger);\n\n    if (job.data.webhook) {\n      logger.debug(\"Calling webhook with crawl.started...\", {\n        webhook: job.data.webhook,\n      });\n      callWebhook({\n        teamId: job.data.team_id,\n        crawlId: job.data.crawl_id,\n        data: null,\n        webhook: job.data.webhook,\n        v1: job.data.v1,\n        eventType: \"crawl.started\",\n      });\n    }\n\n    const sitemap = sc.crawlerOptions.ignoreSitemap\n      ? 0\n      : await crawler.tryGetSitemap(async (urls) => {\n          if (urls.length === 0) return;\n\n          logger.debug(\"Using sitemap chunk of length \" + urls.length, {\n            sitemapLength: urls.length,\n          });\n\n          let jobPriority = await getJobPriority({\n            team_id: job.data.team_id,\n            basePriority: 21,\n          });\n          logger.debug(\"Using job priority \" + jobPriority, { jobPriority });\n\n          const jobs = urls.map((url) => {\n            const uuid = uuidv4();\n            return {\n              name: uuid,\n              data: {\n                url,\n                mode: \"single_urls\" as const,\n                team_id: job.data.team_id,\n                crawlerOptions: job.data.crawlerOptions,\n                scrapeOptions: job.data.scrapeOptions,\n                internalOptions: sc.internalOptions,\n                origin: job.data.origin,\n                integration: job.data.integration,\n                crawl_id: job.data.crawl_id,\n                sitemapped: true,\n                webhook: job.data.webhook,\n                v1: job.data.v1,\n                zeroDataRetention: job.data.zeroDataRetention,\n              },\n              opts: {\n                jobId: uuid,\n                priority: 20,\n              },\n            };\n          });\n\n          logger.debug(\"Locking URLs...\");\n          const lockedIds = await lockURLsIndividually(\n            job.data.crawl_id,\n            sc,\n            jobs.map((x) => ({ id: x.opts.jobId, url: x.data.url })),\n          );\n          const lockedJobs = jobs.filter((x) =>\n            lockedIds.find((y) => y.id === x.opts.jobId),\n          );\n          logger.debug(\"Adding scrape jobs to Redis...\");\n          await addCrawlJobs(\n            job.data.crawl_id,\n            lockedJobs.map((x) => x.opts.jobId),\n            logger,\n          );\n          logger.debug(\"Adding scrape jobs to BullMQ...\");\n          await addScrapeJobs(lockedJobs);\n        });\n\n    if (sitemap === 0) {\n      logger.debug(\"Sitemap not found or ignored.\", {\n        ignoreSitemap: sc.crawlerOptions.ignoreSitemap,\n      });\n    }\n\n    const indexLinks = await kickoffGetIndexLinks(sc, crawler, job.data.url);\n\n    if (indexLinks.length > 0) {\n      logger.debug(\"Using index links of length \" + indexLinks.length, {\n        indexLinksLength: indexLinks.length,\n      });\n\n      let jobPriority = await getJobPriority({\n        team_id: job.data.team_id,\n        basePriority: 21,\n      });\n      logger.debug(\"Using job priority \" + jobPriority, { jobPriority });\n\n      const jobs = indexLinks.map((url) => {\n        const uuid = uuidv4();\n        return {\n          name: uuid,\n          data: {\n            url,\n            mode: \"single_urls\" as const,\n            team_id: job.data.team_id,\n            crawlerOptions: job.data.crawlerOptions,\n            scrapeOptions: job.data.scrapeOptions,\n            internalOptions: sc.internalOptions,\n            origin: job.data.origin,\n            integration: job.data.integration,\n            crawl_id: job.data.crawl_id,\n            sitemapped: true,\n            webhook: job.data.webhook,\n            v1: job.data.v1,\n            zeroDataRetention: job.data.zeroDataRetention,\n          },\n          opts: {\n            jobId: uuid,\n            priority: 20,\n          },\n        };\n      });\n\n      logger.debug(\"Locking URLs...\");\n      const lockedIds = await lockURLsIndividually(\n        job.data.crawl_id,\n        sc,\n        jobs.map((x) => ({ id: x.opts.jobId, url: x.data.url })),\n      );\n      const lockedJobs = jobs.filter((x) =>\n        lockedIds.find((y) => y.id === x.opts.jobId),\n      );\n      logger.debug(\"Adding scrape jobs to Redis...\");\n      await addCrawlJobs(\n        job.data.crawl_id,\n        lockedJobs.map((x) => x.opts.jobId),\n        logger,\n      );\n      logger.debug(\"Adding scrape jobs to BullMQ...\");\n      await addScrapeJobs(lockedJobs);\n    }\n\n    logger.debug(\"Done queueing jobs!\");\n\n    await finishCrawlKickoff(job.data.crawl_id);\n    await finishCrawlIfNeeded(job, sc);\n\n    return { success: true };\n  } catch (error) {\n    logger.error(\"An error occurred!\", { error });\n    await finishCrawlKickoff(job.data.crawl_id);\n    const sc = (await getCrawl(job.data.crawl_id)) as StoredCrawl;\n    if (sc) {\n      await finishCrawlIfNeeded(job, sc);\n    }\n    return { success: false, error };\n  }\n}\n\nasync function billScrapeJob(job: Job & { id: string }, document: Document | null, logger: Logger, costTracking: CostTracking, flags: TeamFlags) {\n  let creditsToBeBilled: number | null = null;\n\n  if (job.data.is_scrape !== true && !job.data.internalOptions?.bypassBilling) {\n    creditsToBeBilled = await calculateCreditsToBeBilled(job.data.scrapeOptions, job.data.internalOptions, document, costTracking, flags);\n\n    if (\n      job.data.team_id !== process.env.BACKGROUND_INDEX_TEAM_ID! &&\n      process.env.USE_DB_AUTHENTICATION === \"true\"\n    ) {\n      try {\n        const billingJobId = uuidv4();\n        logger.debug(\n          `Adding billing job to queue for team ${job.data.team_id}`,\n          {\n            billingJobId,\n            credits: creditsToBeBilled,\n            is_extract: false,\n          },\n        );\n\n        // Add directly to the billing queue - the billing worker will handle the rest\n        await getBillingQueue().add(\n          \"bill_team\",\n          {\n            team_id: job.data.team_id,\n            subscription_id: undefined,\n            credits: creditsToBeBilled,\n            is_extract: false,\n            timestamp: new Date().toISOString(),\n            originating_job_id: job.id,\n          },\n          {\n            jobId: billingJobId,\n            priority: 10,\n          },\n        );\n\n        return creditsToBeBilled;\n      } catch (error) {\n        logger.error(\n          `Failed to add billing job to queue for team ${job.data.team_id} for ${creditsToBeBilled} credits`,\n          { error },\n        );\n        Sentry.captureException(error);\n        return creditsToBeBilled;\n      }\n    }\n  }\n\n  return creditsToBeBilled;\n}\n\nasync function processJob(job: Job & { id: string }, token: string) {\n  const logger = _logger.child({\n    module: \"queue-worker\",\n    method: \"processJob\",\n    jobId: job.id,\n    scrapeId: job.id,\n    crawlId: job.data?.crawl_id ?? undefined,\n    teamId: job.data?.team_id ?? undefined,\n    zeroDataRetention: job.data?.zeroDataRetention ?? false,\n  });\n  logger.info(`🐂 Worker taking job ${job.id}`, { url: job.data.url });\n  const start = job.data.startTime ?? Date.now();\n  const remainingTime = job.data.scrapeOptions.timeout ? (job.data.scrapeOptions.timeout - (Date.now() - start)) : undefined;\n\n  const costTracking = new CostTracking();\n\n  try {\n    job.updateProgress({\n      current: 1,\n      total: 100,\n      current_step: \"SCRAPING\",\n      current_url: \"\",\n    });\n\n    if (remainingTime !== undefined && remainingTime < 0) {\n      throw new Error(\"timeout\");\n    }\n    const signal = remainingTime ? AbortSignal.timeout(remainingTime) : undefined;\n\n    if (job.data.crawl_id) {\n      const sc = (await getCrawl(job.data.crawl_id)) as StoredCrawl;\n      if (sc && sc.cancelled) {\n        throw new Error(\"Parent crawl/batch scrape was cancelled\");\n      }\n    }\n\n    const pipeline = await Promise.race([\n      startWebScraperPipeline({\n        job,\n        token,\n        costTracking,\n      }),\n      ...(remainingTime !== undefined\n        ? [\n            (async () => {\n              await sleep(remainingTime);\n              throw new Error(\"timeout\");\n            })(),\n          ]\n        : []),\n    ]);\n\n    try {\n      signal?.throwIfAborted();\n    } catch (e) {\n      throw new Error(\"timeout\");\n    }\n\n    if (!pipeline.success) {\n      throw pipeline.error;\n    }\n\n    const end = Date.now();\n    const timeTakenInSeconds = (end - start) / 1000;\n\n    const doc = pipeline.document;\n\n    const rawHtml = doc.rawHtml ?? \"\";\n\n    if (!job.data.scrapeOptions.formats.includes(\"rawHtml\")) {\n      delete doc.rawHtml;\n    }\n\n    if (job.data.concurrencyLimited) {\n      doc.warning =\n        \"This scrape job was throttled at your current concurrency limit. If you'd like to scrape faster, you can upgrade your plan.\" +\n        (doc.warning ? \" \" + doc.warning : \"\");\n    }\n\n    const data = {\n      success: true,\n      result: {\n        links: [\n          {\n            content: doc,\n            source: doc?.metadata?.sourceURL ?? doc?.metadata?.url ?? \"\",\n            id: job.id,\n          },\n        ],\n      },\n      project_id: job.data.project_id,\n      document: doc,\n    };\n\n    if (job.data.crawl_id) {\n      const sc = (await getCrawl(job.data.crawl_id)) as StoredCrawl;\n\n      if (\n        doc.metadata.url !== undefined &&\n        doc.metadata.sourceURL !== undefined &&\n        normalizeURL(doc.metadata.url, sc) !==\n          normalizeURL(doc.metadata.sourceURL, sc) &&\n        job.data.crawlerOptions !== null // only on crawls, don't care on batch scrape\n      ) {\n        const crawler = crawlToCrawler(job.data.crawl_id, sc, (await getACUCTeam(job.data.team_id))?.flags ?? null);\n        const filterResult = crawler.filterURL(doc.metadata.url, doc.metadata.sourceURL);\n        if (!filterResult.allowed && !job.data.isCrawlSourceScrape) {\n          const reason = filterResult.denialReason || \"Redirected target URL is not allowed by crawlOptions\";\n          throw new Error(reason);\n        }\n\n        // Only re-set originUrl if it's different from the current hostname\n        // This is only done on this condition to handle cross-domain redirects\n        // If this would be done for non-crossdomain redirects, but also for e.g.\n        // redirecting / -> /introduction (like our docs site does), it would\n        // break crawling the entire site without allowBackwardsCrawling - mogery\n        const isHostnameDifferent =\n          normalizeUrlOnlyHostname(doc.metadata.url) !==\n          normalizeUrlOnlyHostname(doc.metadata.sourceURL);\n        if (job.data.isCrawlSourceScrape && isHostnameDifferent) {\n          // TODO: re-fetch sitemap for redirect target domain\n          sc.originUrl = doc.metadata.url;\n          await saveCrawl(job.data.crawl_id, sc);\n        }\n\n        if (isUrlBlocked(doc.metadata.url, (await getACUCTeam(job.data.team_id))?.flags ?? null)) {\n          throw new Error(BLOCKLISTED_URL_MESSAGE); // TODO: make this its own error type that is ignored by error tracking\n        }\n\n        const p1 = generateURLPermutations(normalizeURL(doc.metadata.url, sc));\n        const p2 = generateURLPermutations(\n          normalizeURL(doc.metadata.sourceURL, sc),\n        );\n\n        if (JSON.stringify(p1) !== JSON.stringify(p2)) {\n          logger.debug(\n            \"Was redirected, removing old URL and locking new URL...\",\n            { oldUrl: doc.metadata.sourceURL, newUrl: doc.metadata.url },\n          );\n\n          // Prevent redirect target from being visited in the crawl again\n          // See lockURL\n          const x = await redisEvictConnection.sadd(\n            \"crawl:\" + job.data.crawl_id + \":visited\",\n            ...p1.map((x) => x.href),\n          );\n          const lockRes = x === p1.length;\n\n          if (job.data.crawlerOptions !== null && !lockRes) {\n            throw new RacedRedirectError();\n          }\n        }\n      }\n\n      if (job.data.crawlerOptions !== null) {\n        if (!sc.cancelled) {\n          const crawler = crawlToCrawler(\n            job.data.crawl_id,\n            sc,\n            (await getACUCTeam(job.data.team_id))?.flags ?? null,\n            doc.metadata.url ?? doc.metadata.sourceURL ?? sc.originUrl!,\n            job.data.crawlerOptions,\n          );\n\n          const links = crawler.filterLinks(\n            await crawler.extractLinksFromHTML(\n              rawHtml ?? \"\",\n              doc.metadata?.url ?? doc.metadata?.sourceURL ?? sc.originUrl!,\n            ),\n            Infinity,\n            sc.crawlerOptions?.maxDepth ?? 10,\n          );\n          logger.debug(\"Discovered \" + links.links.length + \" links...\", {\n            linksLength: links.links.length,\n          });\n\n          for (const link of links.links) {\n            if (await lockURL(job.data.crawl_id, sc, link)) {\n              // This seems to work really welel\n              const jobPriority = await getJobPriority({\n                team_id: sc.team_id,\n                basePriority: job.data.crawl_id ? 20 : 10,\n              });\n              const jobId = uuidv4();\n\n              logger.debug(\n                \"Determined job priority \" +\n                  jobPriority +\n                  \" for URL \" +\n                  JSON.stringify(link),\n                { jobPriority, url: link },\n              );\n\n              // console.log(\"team_id: \", sc.team_id)\n              // console.log(\"base priority: \", job.data.crawl_id ? 20 : 10)\n              // console.log(\"job priority: \" , jobPriority, \"\\n\\n\\n\")\n\n              await addScrapeJob(\n                {\n                  url: link,\n                  mode: \"single_urls\",\n                  team_id: sc.team_id,\n                  scrapeOptions: scrapeOptions.parse(sc.scrapeOptions),\n                  internalOptions: sc.internalOptions,\n                  crawlerOptions: {\n                    ...sc.crawlerOptions,\n                    currentDiscoveryDepth:\n                      (job.data.crawlerOptions?.currentDiscoveryDepth ?? 0) + 1,\n                  },\n                  origin: job.data.origin,\n                  integration: job.data.integration,\n                  crawl_id: job.data.crawl_id,\n                  webhook: job.data.webhook,\n                  v1: job.data.v1,\n                  zeroDataRetention: job.data.zeroDataRetention,\n                },\n                {},\n                jobId,\n                jobPriority,\n              );\n\n              await addCrawlJob(job.data.crawl_id, jobId, logger);\n              logger.debug(\"Added job for URL \" + JSON.stringify(link), {\n                jobPriority,\n                url: link,\n                newJobId: jobId,\n              });\n            } else {\n              // TODO: removed this, ok? too many 'not useful' logs (?) Mogery!\n              // logger.debug(\"Could not lock URL \" + JSON.stringify(link), {\n              //   url: link,\n              // });\n            }\n          }\n\n          // Only run check after adding new jobs for discovery - mogery\n          if (job.data.isCrawlSourceScrape) {\n            const filterResult = crawler.filterLinks(\n              [doc.metadata.url ?? doc.metadata.sourceURL!],\n              1,\n              sc.crawlerOptions?.maxDepth ?? 10,\n            );\n            if (filterResult.links.length === 0) {\n              const url = doc.metadata.url ?? doc.metadata.sourceURL!;\n              const reason = filterResult.denialReasons.get(url) || \"Source URL is not allowed by crawl configuration\";\n              throw new Error(reason);\n            }\n          }\n        }\n      }\n\n      try {\n        signal?.throwIfAborted();\n      } catch (e) {\n        throw new Error(\"timeout\");\n      }\n\n      const credits_billed = await billScrapeJob(job, doc, logger, costTracking, (await getACUCTeam(job.data.team_id))?.flags ?? null);\n\n      doc.metadata.creditsUsed = credits_billed ?? undefined;\n\n      logger.debug(\"Logging job to DB...\");\n      await logJob(\n        {\n          job_id: job.id as string,\n          success: true,\n          num_docs: 1,\n          docs: [doc],\n          time_taken: timeTakenInSeconds,\n          team_id: job.data.team_id,\n          mode: job.data.mode,\n          url: job.data.url,\n          crawlerOptions: sc.crawlerOptions,\n          scrapeOptions: job.data.scrapeOptions,\n          origin: job.data.origin,\n          integration: job.data.integration,\n          crawl_id: job.data.crawl_id,\n          cost_tracking: costTracking,\n          pdf_num_pages: doc.metadata.numPages,\n          credits_billed,\n          change_tracking_tag: job.data.scrapeOptions.changeTrackingOptions?.tag ?? null,\n          zeroDataRetention: job.data.zeroDataRetention,\n        },\n        true,\n        job.data.internalOptions?.bypassBilling ?? false,\n      );\n\n      if (job.data.webhook && job.data.mode !== \"crawl\" && job.data.v1) {\n        logger.debug(\"Calling webhook with success...\", {\n          webhook: job.data.webhook,\n        });\n        callWebhook({\n          teamId: job.data.team_id,\n          crawlId: job.data.crawl_id,\n          scrapeId: job.id,\n          data,\n          webhook: job.data.webhook,\n          v1: job.data.v1,\n          eventType: job.data.crawlerOptions !== null ? \"crawl.page\" : \"batch_scrape.page\",\n        });\n      }\n\n      logger.debug(\"Declaring job as done...\");\n      await addCrawlJobDone(job.data.crawl_id, job.id, true, logger);\n\n      await finishCrawlIfNeeded(job, sc);\n    } else {\n      try {\n        signal?.throwIfAborted();\n      } catch (e) {\n        throw new Error(\"timeout\");\n      }\n\n      const credits_billed = await billScrapeJob(job, doc, logger, costTracking, (await getACUCTeam(job.data.team_id))?.flags ?? null);\n\n      doc.metadata.creditsUsed = credits_billed ?? undefined;\n\n      await logJob({\n        job_id: job.id,\n        success: true,\n        message: \"Scrape completed\",\n        num_docs: 1,\n        docs: [doc],\n        time_taken: timeTakenInSeconds,\n        team_id: job.data.team_id,\n        mode: \"scrape\",\n        url: job.data.url,\n        scrapeOptions: job.data.scrapeOptions,\n        origin: job.data.origin,\n        integration: job.data.integration,\n        num_tokens: 0, // TODO: fix\n        cost_tracking: costTracking,\n        pdf_num_pages: doc.metadata.numPages,\n        credits_billed,\n        change_tracking_tag: job.data.scrapeOptions.changeTrackingOptions?.tag ?? null,\n        zeroDataRetention: job.data.zeroDataRetention,\n      }, false, job.data.internalOptions?.bypassBilling ?? false);\n    }\n\n    logger.info(`🐂 Job done ${job.id}`);\n    return data;\n  } catch (error) {\n    if (job.data.crawl_id) {\n      const sc = (await getCrawl(job.data.crawl_id)) as StoredCrawl;\n\n      logger.debug(\"Declaring job as done...\");\n      await addCrawlJobDone(job.data.crawl_id, job.id, false, logger);\n      await redisEvictConnection.srem(\n        \"crawl:\" + job.data.crawl_id + \":visited_unique\",\n        normalizeURL(job.data.url, sc),\n      );\n\n      await finishCrawlIfNeeded(job, sc);\n    }\n\n    const isEarlyTimeout =\n      error instanceof Error && error.message === \"timeout\";\n    const isCancelled =\n      error instanceof Error &&\n      error.message === \"Parent crawl/batch scrape was cancelled\";\n\n    if (isEarlyTimeout) {\n      logger.error(`🐂 Job timed out ${job.id}`);\n    } else if (error instanceof RacedRedirectError) {\n      logger.warn(`🐂 Job got redirect raced ${job.id}, silently failing`);\n    } else if (isCancelled) {\n      logger.warn(`🐂 Job got cancelled, silently failing`);\n    } else {\n      logger.error(`🐂 Job errored ${job.id} - ${error}`, { error });\n\n      Sentry.captureException(error, {\n        data: {\n          job: job.id,\n        },\n      });\n\n      if (error instanceof CustomError) {\n        // Here we handle the error, then save the failed job\n        logger.error(error.message); // or any other error handling\n      }\n      logger.error(error);\n      if (error.stack) {\n        logger.error(error.stack);\n      }\n    }\n\n    const data = {\n      success: false,\n      document: null,\n      project_id: job.data.project_id,\n      error:\n        error instanceof Error\n          ? error\n          : typeof error === \"string\"\n            ? new Error(error)\n            : new Error(JSON.stringify(error)),\n    };\n\n    if (!job.data.v1 && (job.data.mode === \"crawl\" || job.data.crawl_id)) {\n      callWebhook({\n        teamId: job.data.team_id,\n        crawlId: job.data.crawl_id ?? (job.id as string),\n        scrapeId: job.id,\n        data,\n        webhook: job.data.webhook,\n        v1: job.data.v1,\n        eventType: job.data.crawlerOptions !== null ? \"crawl.page\" : \"batch_scrape.page\",\n      });\n    }\n\n    const end = Date.now();\n    const timeTakenInSeconds = (end - start) / 1000;\n\n    const credits_billed = await billScrapeJob(job, null, logger, costTracking, (await getACUCTeam(job.data.team_id))?.flags ?? null);\n\n    logger.debug(\"Logging job to DB...\");\n    await logJob(\n      {\n        job_id: job.id as string,\n        success: false,\n        message:\n          typeof error === \"string\"\n            ? error\n            : (error.message ??\n              \"Something went wrong... Contact help@mendable.ai\"),\n        num_docs: 0,\n        docs: [],\n        time_taken: timeTakenInSeconds,\n        team_id: job.data.team_id,\n        mode: job.data.mode,\n        url: job.data.url,\n        crawlerOptions: job.data.crawlerOptions,\n        scrapeOptions: job.data.scrapeOptions,\n        origin: job.data.origin,\n        integration: job.data.integration,\n        crawl_id: job.data.crawl_id,\n        cost_tracking: costTracking,\n        credits_billed,\n        zeroDataRetention: job.data.zeroDataRetention,\n      },\n      true,\n      job.data.internalOptions?.bypassBilling ?? false,\n    );\n    return data;\n  }\n}\n\n// wsq.process(\n//   Math.floor(Number(process.env.NUM_WORKERS_PER_QUEUE ?? 8)),\n//   processJob\n// );\n\n// wsq.on(\"waiting\", j => ScrapeEvents.logJobEvent(j, \"waiting\"));\n// wsq.on(\"active\", j => ScrapeEvents.logJobEvent(j, \"active\"));\n// wsq.on(\"completed\", j => ScrapeEvents.logJobEvent(j, \"completed\"));\n// wsq.on(\"paused\", j => ScrapeEvents.logJobEvent(j, \"paused\"));\n// wsq.on(\"resumed\", j => ScrapeEvents.logJobEvent(j, \"resumed\"));\n// wsq.on(\"removed\", j => ScrapeEvents.logJobEvent(j, \"removed\"));\n\n// Start all workers\nconst app = Express();\n\nlet currentLiveness: boolean = true;\n\napp.get(\"/liveness\", (req, res) => {\n  // stalled check\n  if (isWorkerStalled) {\n    currentLiveness = false;\n    res.status(500).json({ ok: false });\n  } else {\n    if (process.env.USE_DB_AUTHENTICATION === \"true\") {\n      // networking check for Kubernetes environments\n      const host = process.env.FIRECRAWL_APP_HOST || \"firecrawl-app-service\";\n      const port = process.env.FIRECRAWL_APP_PORT || \"3002\";\n      const scheme = process.env.FIRECRAWL_APP_SCHEME || \"http\";\n      \n      robustFetch({\n        url: `${scheme}://${host}:${port}`,\n        method: \"GET\",\n        mock: null,\n        logger: _logger,\n        abort: AbortSignal.timeout(5000),\n        ignoreResponse: true,\n      })\n        .then(() => {\n          currentLiveness = true;\n          res.status(200).json({ ok: true });\n        }).catch(e => {\n          _logger.error(\"WORKER NETWORKING CHECK FAILED\", { error: e });\n          currentLiveness = false;\n          res.status(500).json({ ok: false });\n        });\n    } else {\n      currentLiveness = true;\n      res.status(200).json({ ok: true });\n    }\n  }\n});\n\napp.listen(3005, () => {\n  _logger.info(\"Liveness endpoint is running on port 3005\");\n});\n\n(async () => {\n  await Promise.all([\n    workerFun(getScrapeQueue(), processJobInternal),\n    workerFun(getExtractQueue(), processExtractJobInternal),\n    workerFun(getDeepResearchQueue(), processDeepResearchJobInternal),\n    workerFun(getGenerateLlmsTxtQueue(), processGenerateLlmsTxtJobInternal),\n  ]);\n\n  console.log(\"All workers exited. Waiting for all jobs to finish...\");\n\n  while (runningJobs.size > 0) {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n  }\n\n  console.log(\"All jobs finished. Worker out!\");\n  process.exit(0);\n})();\n"]}