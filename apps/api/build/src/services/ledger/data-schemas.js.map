{"version":3,"file":"data-schemas.js","sourceRoot":"","sources":["../../../../src/services/ledger/data-schemas.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAqCD,0CAOC;AAVD;;GAEG;AACH,SAAgB,eAAe,CAC7B,SAAY,EACZ,IAAqB;IAErB,OAAO;QACL,GAAG,IAAI;KACW,CAAC;AACvB,CAAC","sourcesContent":["/**\n * This file defines the data schemas for events tracked in the ledger system.\n * These interfaces represent the structure of the 'data' JSONB column in ledger.tracks.\n */\n\n/**\n * Common properties shared across all events\n */\nexport interface BaseEventData {\n    user_id?: string; // User ID if available\n    team_id?: string; // Team ID if available\n  }\n  \n  /**\n   * Concurrent browser limit reached event data\n   * Tracks when a user reaches the concurrent browser limit\n   */\n  export interface ConcurrentBrowserLimitReachedEventData extends BaseEventData {\n    team_id: string; // The team ID\n  }\n  /**\n   * Map of event definition slugs to their data types\n   */\n  export interface EventDataMap {\n    \"concurrent-browser-limit-reached\": ConcurrentBrowserLimitReachedEventData;\n  }\n  \n  /**\n   * Event definition slugs\n   */\n  export type EventDefinitionSlug = keyof EventDataMap;\n  \n  /**\n   * Helper type to extract the data type for a specific event\n   */\n  export type EventData<T extends EventDefinitionSlug> = EventDataMap[T];\n  \n  /**\n   * Creates a properly typed event data object with current timestamp\n   */\n  export function createEventData<T extends EventDefinitionSlug>(\n    eventType: T,\n    data: EventDataMap[T],\n  ): EventDataMap[T] {\n    return {\n      ...data,\n    } as EventDataMap[T];\n  }\n  "]}