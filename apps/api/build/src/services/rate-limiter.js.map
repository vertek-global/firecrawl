{"version":3,"file":"rate-limiter.js","sourceRoot":"","sources":["../../../src/services/rate-limiter.ts"],"names":[],"mappings":";;;;;;AAqCA,wCAQC;AA7CD,iEAAyD;AAEzD,sDAA4B;AAGf,QAAA,oBAAoB,GAAG,IAAI,iBAAK,CAC3C,OAAO,CAAC,GAAG,CAAC,oBAAqB,CAClC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,CAC9C,IAAI,wCAAgB,CAAC;IACnB,WAAW,EAAE,4BAAoB;IACjC,SAAS;IACT,MAAM;IACN,QAAQ,EAAE,EAAE,EAAE,sBAAsB;CACrC,CAAC,CAAC;AAEQ,QAAA,oBAAoB,GAAG,IAAI,wCAAgB,CAAC;IACvD,WAAW,EAAE,4BAAoB;IACjC,SAAS,EAAE,YAAY;IACvB,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,EAAE,EAAE,sBAAsB;CACrC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAwC;IAC9D,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,GAAG;IACX,MAAM,EAAE,GAAG;IACX,GAAG,EAAE,GAAG;IACR,OAAO,EAAE,GAAG;IACZ,OAAO,EAAE,EAAE;IACX,aAAa,EAAE,KAAK;IACpB,WAAW,EAAE,KAAK;IAClB,mBAAmB,EAAE,EAAE;IACvB,kBAAkB,EAAE,EAAE;CACvB,CAAC;AAEF,SAAgB,cAAc,CAC5B,IAAqB,EACrB,WAAuD;IAEvD,OAAO,iBAAiB,CACtB,GAAG,IAAI,EAAE,EACT,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,kBAAkB,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAC3D,CAAC;AACJ,CAAC","sourcesContent":["import { RateLimiterRedis } from \"rate-limiter-flexible\";\nimport { RateLimiterMode } from \"../types\";\nimport Redis from \"ioredis\";\nimport type { AuthCreditUsageChunk } from \"../controllers/v1/types\";\n\nexport const redisRateLimitClient = new Redis(\n  process.env.REDIS_RATE_LIMIT_URL!,\n);\n\nconst createRateLimiter = (keyPrefix, points) =>\n  new RateLimiterRedis({\n    storeClient: redisRateLimitClient,\n    keyPrefix,\n    points,\n    duration: 60, // Duration in seconds\n  });\n\nexport const testSuiteRateLimiter = new RateLimiterRedis({\n  storeClient: redisRateLimitClient,\n  keyPrefix: \"test-suite\",\n  points: 10000,\n  duration: 60, // Duration in seconds\n});\n\nconst fallbackRateLimits: AuthCreditUsageChunk[\"rate_limits\"] = {\n  crawl: 15,\n  scrape: 100,\n  search: 100,\n  map: 100,\n  extract: 100,\n  preview: 25,\n  extractStatus: 25000,\n  crawlStatus: 25000,\n  extractAgentPreview: 10,\n  scrapeAgentPreview: 10,\n};\n\nexport function getRateLimiter(\n  mode: RateLimiterMode,\n  rate_limits: AuthCreditUsageChunk[\"rate_limits\"] | null,\n): RateLimiterRedis {\n  return createRateLimiter(\n    `${mode}`,\n    (rate_limits?.[mode] ?? fallbackRateLimits?.[mode] ?? 500),\n  );\n}\n"]}