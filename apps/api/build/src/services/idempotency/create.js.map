{"version":3,"file":"create.js","sourceRoot":"","sources":["../../../../src/services/idempotency/create.ts"],"names":[],"mappings":";;AAIA,oDAgBC;AAnBD,0CAA+C;AAC/C,oDAAiD;AAE1C,KAAK,UAAU,oBAAoB,CAAC,GAAY;IACrD,MAAM,cAAc,GAAG,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAW,CAAC;IAClE,IAAI,CAAC,cAAc,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;IACzE,CAAC;IAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2BAAgB;SAC3C,IAAI,CAAC,kBAAkB,CAAC;SACxB,MAAM,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;IAEnC,IAAI,KAAK,EAAE,CAAC;QACV,eAAM,CAAC,KAAK,CAAC,qCAAqC,KAAK,EAAE,CAAC,CAAC;QAC3D,MAAM,KAAK,CAAC;IACd,CAAC;IAED,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["import { Request } from \"express\";\nimport { supabase_service } from \"../supabase\";\nimport { logger } from \"../../../src/lib/logger\";\n\nexport async function createIdempotencyKey(req: Request): Promise<string> {\n  const idempotencyKey = req.headers[\"x-idempotency-key\"] as string;\n  if (!idempotencyKey) {\n    throw new Error(\"No idempotency key provided in the request headers.\");\n  }\n\n  const { data, error } = await supabase_service\n    .from(\"idempotency_keys\")\n    .insert({ key: idempotencyKey });\n\n  if (error) {\n    logger.error(`Failed to create idempotency key: ${error}`);\n    throw error;\n  }\n\n  return idempotencyKey;\n}\n"]}