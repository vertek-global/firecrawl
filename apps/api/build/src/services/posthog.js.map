{"version":3,"file":"posthog.js","sourceRoot":"","sources":["../../../src/services/posthog.ts"],"names":[],"mappings":";;;AAIA,gCAOC;AAXD,+CAAuC;AACvC,yBAAuB;AACvB,iDAA8C;AAE9C,SAAwB,aAAa,CAAC,MAAc;IAClD,MAAM,aAAa,GAAG,IAAI,sBAAO,CAAC,MAAM,EAAE;QACxC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;QAC9B,OAAO,EAAE,CAAC;QACV,aAAa,EAAE,CAAC;KACjB,CAAC,CAAC;IACH,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,MAAM,WAAW;IACf,OAAO,KAAI,CAAC;CACb;AAED,2FAA2F;AAC3F,mFAAmF;AACtE,QAAA,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe;IAChD,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;IAC5C,CAAC,CAAC,CAAC,GAAG,EAAE;QACJ,eAAM,CAAC,IAAI,CACT,6HAA6H,CAC9H,CAAC;QACF,OAAO,IAAI,WAAW,EAAE,CAAC;IAC3B,CAAC,CAAC,EAAE,CAAC","sourcesContent":["import { PostHog } from \"posthog-node\";\nimport \"dotenv/config\";\nimport { logger } from \"../../src/lib/logger\";\n\nexport default function PostHogClient(apiKey: string) {\n  const posthogClient = new PostHog(apiKey, {\n    host: process.env.POSTHOG_HOST,\n    flushAt: 1,\n    flushInterval: 0,\n  });\n  return posthogClient;\n}\n\nclass MockPostHog {\n  capture() {}\n}\n\n// Using the actual PostHog class if POSTHOG_API_KEY exists, otherwise using the mock class\n// Additionally, print a warning to the terminal if POSTHOG_API_KEY is not provided\nexport const posthog = process.env.POSTHOG_API_KEY\n  ? PostHogClient(process.env.POSTHOG_API_KEY)\n  : (() => {\n      logger.warn(\n        \"POSTHOG_API_KEY is not provided - your events will not be logged. Using MockPostHog as a fallback. See posthog.ts for more.\",\n      );\n      return new MockPostHog();\n    })();\n"]}