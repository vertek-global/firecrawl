{"version":3,"file":"queue-service.js","sourceRoot":"","sources":["../../../src/services/queue-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Queue } from \"bullmq\";\nimport { logger } from \"../lib/logger\";\nimport IORedis from \"ioredis\";\n\nexport type QueueFunction = () => Queue<any, any, string, any, any, string>;\n\nlet scrapeQueue: Queue;\nlet extractQueue: Queue;\nlet loggingQueue: Queue;\nlet indexQueue: Queue;\nlet deepResearchQueue: Queue;\nlet generateLlmsTxtQueue: Queue;\nlet billingQueue: Queue;\n\nexport const redisConnection = new IORedis(process.env.REDIS_URL!, {\n  maxRetriesPerRequest: null,\n});\n\nexport const scrapeQueueName = \"{scrapeQueue}\";\nexport const extractQueueName = \"{extractQueue}\";\nexport const loggingQueueName = \"{loggingQueue}\";\nexport const indexQueueName = \"{indexQueue}\";\nexport const generateLlmsTxtQueueName = \"{generateLlmsTxtQueue}\";\nexport const deepResearchQueueName = \"{deepResearchQueue}\";\nexport const billingQueueName = \"{billingQueue}\";\n\nexport function getScrapeQueue() {\n  if (!scrapeQueue) {\n    scrapeQueue = new Queue(scrapeQueueName, {\n      connection: redisConnection,\n      defaultJobOptions: {\n        removeOnComplete: {\n          age: 3600, // 1 hour\n        },\n        removeOnFail: {\n          age: 3600, // 1 hour\n        },\n      },\n    });\n    logger.info(\"Web scraper queue created\");\n  }\n  return scrapeQueue;\n}\n\nexport function getExtractQueue() {\n  if (!extractQueue) {\n    extractQueue = new Queue(extractQueueName, {\n      connection: redisConnection,\n      defaultJobOptions: {\n        removeOnComplete: {\n          age: 90000, // 25 hours\n        },\n        removeOnFail: {\n          age: 90000, // 25 hours\n        },\n      },\n    });\n    logger.info(\"Extraction queue created\");\n  }\n  return extractQueue;\n}\n\nexport function getGenerateLlmsTxtQueue() {\n  if (!generateLlmsTxtQueue) {\n    generateLlmsTxtQueue = new Queue(generateLlmsTxtQueueName, {\n      connection: redisConnection,\n      defaultJobOptions: {\n        removeOnComplete: {\n          age: 90000, // 25 hours\n        },\n        removeOnFail: {\n          age: 90000, // 25 hours\n        },\n      },\n    });\n    logger.info(\"LLMs TXT generation queue created\");\n  }\n  return generateLlmsTxtQueue;\n}\n\nexport function getDeepResearchQueue() {\n  if (!deepResearchQueue) {\n    deepResearchQueue = new Queue(deepResearchQueueName, {\n      connection: redisConnection,\n      defaultJobOptions: {\n        removeOnComplete: {\n          age: 90000, // 25 hours\n        },\n        removeOnFail: {\n          age: 90000, // 25 hours\n        },\n      },\n    });\n    logger.info(\"Deep research queue created\");\n  }\n  return deepResearchQueue;\n}\n\nexport function getBillingQueue() {\n  if (!billingQueue) {\n    billingQueue = new Queue(billingQueueName, {\n      connection: redisConnection,\n      defaultJobOptions: {\n        removeOnComplete: {\n          age: 3600, // 1 hour\n        },\n        removeOnFail: {\n          age: 3600, // 1 hour\n        },\n      },\n    });\n    logger.info(\"Billing queue created\");\n  }\n  return billingQueue;\n}\n"]}