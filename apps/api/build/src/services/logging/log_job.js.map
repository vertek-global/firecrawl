{"version":3,"file":"log_job.js","sourceRoot":"","sources":["../../../../src/services/logging/log_job.ts"],"names":[],"mappings":"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","sourcesContent":["import { supabase_service } from \"../supabase\";\nimport { FirecrawlJob } from \"../../types\";\nimport { posthog } from \"../posthog\";\nimport \"dotenv/config\";\nimport { logger as _logger } from \"../../lib/logger\";\nimport { configDotenv } from \"dotenv\";\nimport { saveJobToGCS } from \"../../lib/gcs-jobs\";\nconfigDotenv();\n\nfunction cleanOfNull<T>(x: T): T {\n  if (Array.isArray(x)) {\n    return x.map((x) => cleanOfNull(x)) as T;\n  } else if (typeof x === \"object\" && x !== null) {\n    return Object.fromEntries(\n      Object.entries(x).map(([k, v]) => [k, cleanOfNull(v)]),\n    ) as T;\n  } else if (typeof x === \"string\") {\n    return x.replaceAll(\"\\u0000\", \"\") as T;\n  } else {\n    return x;\n  }\n}\n\nexport async function logJob(job: FirecrawlJob, force: boolean = false, bypassLogging: boolean = false) {\n  let logger = _logger.child({\n    module: \"log_job\",\n    method: \"logJob\",\n    ...(job.mode === \"scrape\" || job.mode === \"single_urls\" || job.mode === \"single_url\" ? ({\n      scrapeId: job.job_id,\n    }) : {}),\n    ...(job.mode === \"crawl\" || job.mode === \"batch_scrape\" ? ({\n      crawlId: job.job_id,\n    }) : {}),\n    ...(job.mode === \"extract\" ? ({\n      extractId: job.job_id,\n    }) : {}),\n  });\n\n  const zeroDataRetention = job.zeroDataRetention ?? false;\n\n  logger = logger.child({\n    zeroDataRetention,\n  });\n\n  try {\n    const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n    if (!useDbAuthentication) {\n      return;\n    }\n    \n    // Redact any pages that have an authorization header\n    // actually, Don't. we use the db to retrieve results now. this breaks authed crawls - mogery\n    // if (\n    //   job.scrapeOptions &&\n    //   job.scrapeOptions.headers &&\n    //   job.scrapeOptions.headers[\"Authorization\"]\n    // ) {\n    //   job.scrapeOptions.headers[\"Authorization\"] = \"REDACTED\";\n    //   job.docs = [\n    //     {\n    //       content: \"REDACTED DUE TO AUTHORIZATION HEADER\",\n    //       html: \"REDACTED DUE TO AUTHORIZATION HEADER\",\n    //     },\n    //   ];\n    // }\n    const jobColumn = {\n      job_id: job.job_id ? job.job_id : null,\n      success: job.success,\n      message: zeroDataRetention ? null : job.message,\n      num_docs: job.num_docs,\n      docs: zeroDataRetention ? null : ((job.mode === \"single_urls\" || job.mode === \"scrape\") && process.env.GCS_BUCKET_NAME) ? null : cleanOfNull(job.docs),\n      time_taken: job.time_taken,\n      team_id: (job.team_id === \"preview\" || job.team_id?.startsWith(\"preview_\"))? null : job.team_id,\n      mode: job.mode,\n      url: zeroDataRetention ? \"<redacted due to zero data retention>\" : job.url,\n      crawler_options: zeroDataRetention ? null : job.crawlerOptions,\n      page_options: zeroDataRetention ? null : job.scrapeOptions,\n      origin: zeroDataRetention ? null : job.origin,\n      integration: zeroDataRetention ? null : job.integration ?? null,\n      num_tokens: job.num_tokens,\n      retry: !!job.retry,\n      crawl_id: job.crawl_id,\n      tokens_billed: job.tokens_billed,\n      is_migrated: true,\n      cost_tracking: zeroDataRetention ? null : job.cost_tracking,\n      pdf_num_pages: zeroDataRetention ? null : job.pdf_num_pages ?? null,\n      credits_billed: job.credits_billed ?? null,\n      change_tracking_tag: zeroDataRetention ? null : job.change_tracking_tag ?? null,\n      dr_clean_by: zeroDataRetention && job.crawl_id ? new Date(Date.now() + 1000 * 60 * 60 * 24).toISOString() : null,\n    };\n\n    if (process.env.GCS_BUCKET_NAME) {\n      await saveJobToGCS(job);\n    }\n\n    if (bypassLogging) {\n      return;\n    }\n\n    if (force) {\n      let i = 0,\n        done = false;\n      while (i++ <= 10) {\n        try {\n          const { error } = await supabase_service\n            .from(\"firecrawl_jobs\")\n            .insert([jobColumn]);\n          if (error) {\n            logger.error(\n              \"Failed to log job due to Supabase error -- trying again\",\n              { error },\n            );\n            await new Promise<void>((resolve) =>\n              setTimeout(() => resolve(), 75),\n            );\n          } else {\n            done = true;\n            break;\n          }\n        } catch (error) {\n          logger.error(\n            \"Failed to log job due to thrown error -- trying again\",\n            { error },\n          );\n          await new Promise<void>((resolve) => setTimeout(() => resolve(), 75));\n        }\n      }\n      if (done) {\n        logger.debug(\"Job logged successfully!\");\n      } else {\n        logger.error(\"Failed to log job!\");\n      }\n    } else {\n      const { error } = await supabase_service\n        .from(\"firecrawl_jobs\")\n        .insert([jobColumn]);\n      if (error) {\n        logger.error(`Error logging job`, {\n          error,\n        });\n      } else {\n        logger.debug(\"Job logged successfully!\");\n      }\n    }\n\n    if (process.env.POSTHOG_API_KEY && !job.crawl_id) {\n      let phLog = {\n        distinctId: \"from-api\", //* To identify this on the group level, setting distinctid to a static string per posthog docs: https://posthog.com/docs/product-analytics/group-analytics#advanced-server-side-only-capturing-group-events-without-a-user\n        ...((job.team_id !== \"preview\" && !job.team_id?.startsWith(\"preview_\")) && {\n          groups: { team: job.team_id },\n        }), //* Identifying event on this team\n        event: \"job-logged\",\n        properties: {\n          success: job.success,\n          message: zeroDataRetention ? null: job.message,\n          num_docs: job.num_docs,\n          time_taken: job.time_taken,\n          team_id: (job.team_id === \"preview\" || job.team_id?.startsWith(\"preview_\"))? null : job.team_id,\n          mode: job.mode,\n          url: zeroDataRetention ? \"<redacted due to zero data retention>\" : job.url,\n          crawler_options: zeroDataRetention ? null : job.crawlerOptions,\n          page_options: zeroDataRetention ? null : job.scrapeOptions,\n          origin: zeroDataRetention ? null : job.origin,\n          num_tokens: job.num_tokens,\n          retry: job.retry,\n          tokens_billed: job.tokens_billed,\n          cost_tracking: zeroDataRetention ? null : job.cost_tracking,\n          pdf_num_pages: zeroDataRetention ? null : job.pdf_num_pages,\n          change_tracking_tag: zeroDataRetention ? null : job.change_tracking_tag ?? null,\n        },\n      };\n      if (job.mode !== \"single_urls\") {\n        posthog.capture(phLog);\n      }\n    }\n  } catch (error) {\n    logger.error(`Error logging job`, {\n      error,\n    });\n  }\n}\n"]}