{"version":3,"file":"crawl_log.js","sourceRoot":"","sources":["../../../../src/services/logging/crawl_log.ts"],"names":[],"mappings":";;AAKA,4BAgBC;AArBD,0CAA+C;AAC/C,oDAAiD;AACjD,mCAAsC;AACtC,IAAA,qBAAY,GAAE,CAAC;AAER,KAAK,UAAU,QAAQ,CAAC,MAAc,EAAE,OAAe;IAC5D,MAAM,mBAAmB,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,MAAM,CAAC;IACzE,IAAI,mBAAmB,EAAE,CAAC;QACxB,IAAI,CAAC;YACH,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2BAAgB;iBAC3C,IAAI,CAAC,gBAAgB,CAAC;iBACtB,MAAM,CAAC;gBACN;oBACE,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,OAAO;iBACjB;aACF,CAAC,CAAC;QACP,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,yCAAyC,KAAK,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["import { supabase_service } from \"../supabase\";\nimport { logger } from \"../../../src/lib/logger\";\nimport { configDotenv } from \"dotenv\";\nconfigDotenv();\n\nexport async function logCrawl(job_id: string, team_id: string) {\n  const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n  if (useDbAuthentication) {\n    try {\n      const { data, error } = await supabase_service\n        .from(\"bulljobs_teams\")\n        .insert([\n          {\n            job_id: job_id,\n            team_id: team_id,\n          },\n        ]);\n    } catch (error) {\n      logger.error(`Error logging crawl job to supabase:\\n${error}`);\n    }\n  }\n}\n"]}