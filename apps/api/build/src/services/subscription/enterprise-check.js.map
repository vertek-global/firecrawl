{"version":3,"file":"enterprise-check.js","sourceRoot":"","sources":["../../../../src/services/subscription/enterprise-check.ts"],"names":[],"mappings":";;AAYA,kGA0BC;AAtCD,0CAA+C;AAU/C,MAAM,yCAAyC,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;AAElE,KAAK,UAAU,2CAA2C,CAC/D,OAAe;IAEf,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM,2BAAgB;SAC5C,IAAI,CAAC,eAAe,CAAC;SACrB,MAAM,CAAC,iCAAiC,CAAC;SACzC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;SACtB,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;SACtB,EAAE,CACD,SAAS,EACT,yCAAyC,CAAC,WAAW,EAAE,CACxD,CAGF,CAAC;IAEF,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,sEAAsE;QACtE,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAC5B,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,aAAa,KAAK,IAAI,CACtD,CAAC;IAEF,OAAO,CAAC,CAAC,YAAY,CAAC;AACxB,CAAC","sourcesContent":["import { supabase_service } from \"../supabase\";\n\ninterface SubscriptionResponse {\n  prices: {\n    products: {\n      is_enterprise: boolean;\n    };\n  };\n}\n\nconst RATE_LIMIT_CHANGE_NOTIFICATION_START_DATE = new Date(\"2025-03-12\");\n\nexport async function isEnterpriseTeamCreatedAfterRateLimitChange(\n  team_id: string,\n): Promise<boolean> {\n  const { data, error } = (await supabase_service\n    .from(\"subscriptions\")\n    .select(\"prices(products(is_enterprise))\")\n    .eq(\"status\", \"active\")\n    .eq(\"team_id\", team_id)\n    .gt(\n      \"created\",\n      RATE_LIMIT_CHANGE_NOTIFICATION_START_DATE.toISOString(),\n    )) as {\n    data: SubscriptionResponse[] | null;\n    error: any;\n  };\n\n  if (error || !data) {\n    // If there's an error or no subscription found, assume non-enterprise\n    return false;\n  }\n\n  const isEnterprise = data.find(\n    (sub) => sub.prices?.products?.is_enterprise === true,\n  );\n\n  return !!isEnterprise;\n}\n"]}