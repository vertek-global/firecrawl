{"version":3,"file":"webhook.js","sourceRoot":"","sources":["../../../src/services/webhook.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosError } from \"axios\";\nimport { logger as _logger, logger } from \"../lib/logger\";\nimport { supabase_rr_service, supabase_service } from \"./supabase\";\nimport { WebhookEventType } from \"../types\";\nimport { configDotenv } from \"dotenv\";\nimport { z } from \"zod\";\nimport { webhookSchema } from \"../controllers/v1/types\";\nimport { redisEvictConnection } from \"./redis\";\nimport { index_supabase_service } from \".\";\nconfigDotenv();\n\nconst WEBHOOK_INSERT_QUEUE_KEY = \"webhook-insert-queue\";\nconst WEBHOOK_INSERT_BATCH_SIZE = 1000;\n\nasync function addWebhookInsertJob(data: any) {\n  await redisEvictConnection.rpush(WEBHOOK_INSERT_QUEUE_KEY, JSON.stringify(data));\n}\n\nexport async function getWebhookInsertQueueLength(): Promise<number> {\n  return await redisEvictConnection.llen(WEBHOOK_INSERT_QUEUE_KEY) ?? 0;\n}\n\nasync function getWebhookInsertJobs(): Promise<any[]> {\n  const jobs = (await redisEvictConnection.lpop(WEBHOOK_INSERT_QUEUE_KEY, WEBHOOK_INSERT_BATCH_SIZE)) ?? [];\n  return jobs.map(x => JSON.parse(x));\n}\n\nexport async function processWebhookInsertJobs() {\n  const jobs = await getWebhookInsertJobs();\n  if (jobs.length === 0) {\n    return;\n  }\n  logger.info(`Webhook inserter found jobs to insert`, { jobCount: jobs.length });\n  try {\n    await supabase_service.from(\"webhook_logs\").insert(jobs);\n    logger.info(`Webhook inserter inserted jobs`, { jobCount: jobs.length });\n  } catch (error) {\n    logger.error(`Webhook inserter failed to insert jobs`, { error, jobCount: jobs.length });\n  }\n}\n\nasync function logWebhook(data: {\n  success: boolean;\n  error?: string;\n  teamId: string;\n  crawlId: string;\n  scrapeId?: string;\n  url: string;\n  statusCode?: number;\n  event: WebhookEventType\n}) {\n  try {\n    await addWebhookInsertJob({\n      success: data.success,\n      error: data.error ?? null,\n      team_id: data.teamId,\n      crawl_id: data.crawlId,\n      scrape_id: data.scrapeId ?? null,\n      url: data.url,\n      status_code: data.statusCode ?? null,\n      event: data.event,\n    });\n  } catch (error) {\n    _logger.error(\"Error logging webhook\", { error, crawlId: data.crawlId, scrapeId: data.scrapeId, teamId: data.teamId, team_id: data.teamId, module: \"webhook\", method: \"logWebhook\" });\n  }\n}\n\nexport const callWebhook = async ({\n  teamId,\n  crawlId,\n  scrapeId,\n  data,\n  webhook,\n  v1,\n  eventType,\n  awaitWebhook = false,\n}: {\n  teamId: string;\n  crawlId: string;\n  scrapeId?: string;\n  webhook?: z.infer<typeof webhookSchema>,\n  v1: boolean,\n  data: any | null;\n  eventType: WebhookEventType,\n  awaitWebhook?: boolean;\n}) => {\n  const logger = _logger.child({\n    module: \"webhook\",\n    method: \"callWebhook\",\n    teamId, team_id: teamId,\n    crawlId,\n    scrapeId,\n    eventType,\n    awaitWebhook,\n    webhook,\n    isV1: v1,\n  });\n\n  if (webhook) {\n    let subType = eventType.split(\".\")[1];\n    if (!webhook.events.includes(subType as any)) {\n      logger.debug(\"Webhook event type not in specified events\", {\n        subType,\n        webhook,\n      });\n      return false;\n    }\n  }\n\n  try {\n    const selfHostedUrl = process.env.SELF_HOSTED_WEBHOOK_URL?.replace(\n      \"{{JOB_ID}}\",\n      crawlId,\n    );\n    const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n    let webhookUrl =\n      webhook ??\n      (selfHostedUrl ? webhookSchema.parse({ url: selfHostedUrl }) : undefined);\n\n    // Only fetch the webhook URL from the database if the self-hosted webhook URL and specified webhook are not set\n    // and the USE_DB_AUTHENTICATION environment variable is set to true\n    if (!webhookUrl && useDbAuthentication) {\n      const { data: webhooksData, error } = await supabase_rr_service\n        .from(\"webhooks\")\n        .select(\"url\")\n        .eq(\"team_id\", teamId)\n        .limit(1);\n      if (error) {\n        logger.error(\n          `Error fetching webhook URL for team`,\n          {\n            error,\n          },\n        );\n        return null;\n      }\n\n      if (!webhooksData || webhooksData.length === 0) {\n        return null;\n      }\n\n      webhookUrl = webhooksData[0].url;\n    }\n\n    logger.debug(\"Calling webhook...\", {\n      webhookUrl,\n    });\n\n    if (!webhookUrl) {\n      return null;\n    }\n\n    let dataToSend: any[] = [];\n    if (\n      data &&\n      data.result &&\n      data.result.links &&\n      data.result.links.length !== 0\n    ) {\n      for (let i = 0; i < data.result.links.length; i++) {\n        if (v1) {\n          dataToSend.push(data.result.links[i].content);\n        } else {\n          dataToSend.push({\n            content: data.result.links[i].content.content,\n            markdown: data.result.links[i].content.markdown,\n            metadata: data.result.links[i].content.metadata,\n          });\n        }\n      }\n    }\n\n    if (awaitWebhook) {\n      try {\n        const res = await axios.post(\n          webhookUrl.url,\n          {\n            success: !v1\n              ? data.success\n              : eventType === \"crawl.page\"\n                ? data.success\n                : true,\n            type: eventType,\n            [v1 ? \"id\" : \"jobId\"]: crawlId,\n            data: dataToSend,\n            error: !v1\n              ? data?.error || undefined\n              : eventType === \"crawl.page\"\n                ? data?.error || undefined\n                : undefined,\n            metadata: webhookUrl.metadata || undefined,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              ...webhookUrl.headers,\n            },\n            timeout: v1 ? 10000 : 30000, // 10 seconds timeout (v1)\n          },\n        );\n        logWebhook({\n          success: res.status >= 200 && res.status < 300,\n          teamId,\n          crawlId,\n          scrapeId,\n          url: webhookUrl.url,\n          event: eventType,\n          statusCode: res.status,\n        });\n      } catch (error) {\n        logger.error(\n          `Failed to send webhook`,\n          {\n            error,\n          },\n        );\n        logWebhook({\n          success: false,\n          teamId,\n          crawlId,\n          scrapeId,\n          url: webhookUrl.url,\n          event: eventType,\n          error: error instanceof Error ? error.message : (typeof error === \"string\" ? error : undefined),\n          statusCode: error instanceof AxiosError ? error.response?.status : undefined,\n        });\n      }\n    } else {\n      axios\n        .post(\n          webhookUrl.url,\n          {\n            success: !v1\n              ? data.success\n              : eventType === \"crawl.page\"\n                ? data.success\n                : true,\n            type: eventType,\n            [v1 ? \"id\" : \"jobId\"]: crawlId,\n            data: dataToSend,\n            error: !v1\n              ? data?.error || undefined\n              : eventType === \"crawl.page\"\n                ? data?.error || undefined\n                : undefined,\n            metadata: webhookUrl.metadata || undefined,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              ...webhookUrl.headers,\n            },\n          },\n        )\n        .then((res) => {\n          logWebhook({\n            success: res.status >= 200 && res.status < 300,\n            teamId,\n            crawlId,\n            scrapeId,\n            url: webhookUrl.url,\n            event: eventType,\n            statusCode: res.status,\n          });\n        })\n        .catch((error) => {\n          logger.error(\n            `Failed to send webhook`,\n            {\n              error,\n            },\n          );\n          logWebhook({\n            success: false,\n            teamId,\n            crawlId,\n            scrapeId,\n            url: webhookUrl.url,\n            event: eventType,\n            error: error instanceof Error ? error.message : (typeof error === \"string\" ? error : undefined),\n            statusCode: error instanceof AxiosError ? error.response?.status : undefined,\n          });\n        });\n    }\n  } catch (error) {\n    logger.debug(\n      `Error sending webhook`,\n      {\n        error,\n      },\n    );\n  }\n};\n"]}