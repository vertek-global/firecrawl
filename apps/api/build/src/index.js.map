{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import \"dotenv/config\";\nimport \"./services/sentry\";\nimport * as Sentry from \"@sentry/node\";\nimport express, { NextFunction, Request, Response } from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport {\n  getExtractQueue,\n  getScrapeQueue,\n  getGenerateLlmsTxtQueue,\n  getDeepResearchQueue,\n  getBillingQueue,\n} from \"./services/queue-service\";\nimport { v0Router } from \"./routes/v0\";\nimport os from \"os\";\nimport { logger } from \"./lib/logger\";\nimport { adminRouter } from \"./routes/admin\";\nimport http from \"node:http\";\nimport https from \"node:https\";\nimport { v1Router } from \"./routes/v1\";\nimport expressWs from \"express-ws\";\nimport { ErrorResponse, RequestWithMaybeACUC, ResponseWithSentry } from \"./controllers/v1/types\";\nimport { ZodError } from \"zod\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { RateLimiterMode } from \"./types\";\nimport { attachWsProxy } from \"./services/agentLivecastWS\";\nimport { cacheableLookup } from \"./scraper/scrapeURL/lib/cacheableLookup\";\n\nconst { createBullBoard } = require(\"@bull-board/api\");\nconst { BullAdapter } = require(\"@bull-board/api/bullAdapter\");\nconst { ExpressAdapter } = require(\"@bull-board/express\");\n\nconst numCPUs = process.env.ENV === \"local\" ? 2 : os.cpus().length;\nlogger.info(`Number of CPUs: ${numCPUs} available`);\n\n// Install cacheable lookup for all other requests\ncacheableLookup.install(http.globalAgent);\ncacheableLookup.install(https.globalAgent);\n\n// Initialize Express with WebSocket support\nconst expressApp = express();\nconst ws = expressWs(expressApp);\nconst app = ws.app;\n\nglobal.isProduction = process.env.IS_PRODUCTION === \"true\";\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json({ limit: \"10mb\" }));\n\napp.use(cors()); // Add this line to enable CORS\n\nconst serverAdapter = new ExpressAdapter();\nserverAdapter.setBasePath(`/admin/${process.env.BULL_AUTH_KEY}/queues`);\n\nconst { addQueue, removeQueue, setQueues, replaceQueues } = createBullBoard({\n  queues: [\n    new BullAdapter(getScrapeQueue()),\n    new BullAdapter(getExtractQueue()),\n    new BullAdapter(getGenerateLlmsTxtQueue()),\n    new BullAdapter(getDeepResearchQueue()),\n    new BullAdapter(getBillingQueue()),\n  ],\n  serverAdapter: serverAdapter,\n});\n\napp.use(\n  `/admin/${process.env.BULL_AUTH_KEY}/queues`,\n  serverAdapter.getRouter(),\n);\n\napp.get(\"/\", (req, res) => {\n  res.send(\"SCRAPERS-JS: Hello, world! K8s!\");\n});\n\n//write a simple test function\napp.get(\"/test\", async (req, res) => {\n  res.send(\"Hello, world!\");\n});\n\n// register router\napp.use(v0Router);\napp.use(\"/v1\", v1Router);\napp.use(adminRouter);\n\nconst DEFAULT_PORT = process.env.PORT ?? 3002;\nconst HOST = process.env.HOST ?? \"localhost\";\n\nfunction startServer(port = DEFAULT_PORT) {\n  // Attach WebSocket proxy to the Express app\n  attachWsProxy(app);\n  \n  const server = app.listen(Number(port), HOST, () => {\n    logger.info(`Worker ${process.pid} listening on port ${port}`);\n  });\n\n  const exitHandler = async () => {\n    logger.info(\"SIGTERM signal received: closing HTTP server\");\n    if (process.env.IS_KUBERNETES === \"true\") {\n      // Account for GCE load balancer drain timeout\n      logger.info(\"Waiting 60s for GCE load balancer drain timeout\");\n      await new Promise((resolve) => setTimeout(resolve, 60000));\n    }\n    server.close(() => {\n      logger.info(\"Server closed.\");\n      process.exit(0);\n    });\n  };\n\n  process.on(\"SIGTERM\", exitHandler);\n  process.on(\"SIGINT\", exitHandler);\n  return server;\n}\n\nif (require.main === module) {\n  startServer();\n}\n\napp.get(`/serverHealthCheck`, async (req, res) => {\n  try {\n    const scrapeQueue = getScrapeQueue();\n    const [waitingJobs] = await Promise.all([scrapeQueue.getWaitingCount()]);\n    const noWaitingJobs = waitingJobs === 0;\n    // 200 if no active jobs, 503 if there are active jobs\n    return res.status(noWaitingJobs ? 200 : 500).json({\n      waitingJobs,\n    });\n  } catch (error) {\n    Sentry.captureException(error);\n    logger.error(error);\n    return res.status(500).json({ error: error.message });\n  }\n});\n\napp.get(\"/serverHealthCheck/notify\", async (req, res) => {\n  if (process.env.SLACK_WEBHOOK_URL) {\n    const treshold = 1; // The treshold value for the active jobs\n    const timeout = 60000; // 1 minute // The timeout value for the check in milliseconds\n\n    const getWaitingJobsCount = async () => {\n      const scrapeQueue = getScrapeQueue();\n      const [waitingJobsCount] = await Promise.all([\n        scrapeQueue.getWaitingCount(),\n      ]);\n\n      return waitingJobsCount;\n    };\n\n    res.status(200).json({ message: \"Check initiated\" });\n\n    const checkWaitingJobs = async () => {\n      try {\n        let waitingJobsCount = await getWaitingJobsCount();\n        if (waitingJobsCount >= treshold) {\n          setTimeout(async () => {\n            // Re-check the waiting jobs count after the timeout\n            waitingJobsCount = await getWaitingJobsCount();\n            if (waitingJobsCount >= treshold) {\n              const slackWebhookUrl = process.env.SLACK_WEBHOOK_URL!;\n              const message = {\n                text: `⚠️ Warning: The number of active jobs (${waitingJobsCount}) has exceeded the threshold (${treshold}) for more than ${\n                  timeout / 60000\n                } minute(s).`,\n              };\n\n              const response = await fetch(slackWebhookUrl, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(message),\n              });\n\n              if (!response.ok) {\n                logger.error(\"Failed to send Slack notification\");\n              }\n            }\n          }, timeout);\n        }\n      } catch (error) {\n        Sentry.captureException(error);\n        logger.debug(error);\n      }\n    };\n\n    checkWaitingJobs();\n  }\n});\n\napp.get(\"/is-production\", (req, res) => {\n  res.send({ isProduction: global.isProduction });\n});\n\napp.use(\n  (\n    err: unknown,\n    req: Request<{}, ErrorResponse, undefined>,\n    res: Response<ErrorResponse>,\n    next: NextFunction,\n  ) => {\n    if (err instanceof ZodError) {\n      if (\n        Array.isArray(err.errors) &&\n        err.errors.find((x) => x.message === \"URL uses unsupported protocol\")\n      ) {\n        logger.warn(\"Unsupported protocol error: \" + JSON.stringify(req.body));\n      }\n\n      res\n        .status(400)\n        .json({ success: false, error: \"Bad Request\", details: err.errors });\n    } else {\n      next(err);\n    }\n  },\n);\n\nSentry.setupExpressErrorHandler(app);\n\napp.use(\n  (\n    err: unknown,\n    req: RequestWithMaybeACUC<{}, ErrorResponse, undefined>,\n    res: ResponseWithSentry<ErrorResponse>,\n    next: NextFunction,\n  ) => {\n    if (\n      err instanceof SyntaxError &&\n      \"status\" in err &&\n      err.status === 400 &&\n      \"body\" in err\n    ) {\n      return res\n        .status(400)\n        .json({ success: false, error: \"Bad request, malformed JSON\" });\n    }\n\n    const id = res.sentry ?? uuidv4();\n\n    logger.error(\n      \"Error occurred in request! (\" +\n        req.path +\n        \") -- ID \" +\n        id +\n        \" -- \",\n    { error: err, errorId: id, path: req.path, teamId: req.acuc?.team_id, team_id: req.acuc?.team_id });\n    res.status(500).json({\n      success: false,\n      error:\n        \"An unexpected error occurred. Please contact help@firecrawl.com for help. Your exception ID is \" +\n        id,\n    });\n  },\n);\n\nlogger.info(`Worker ${process.pid} started`);\n// const sq = getScrapeQueue();\n\n// sq.on(\"waiting\", j => ScrapeEvents.logJobEvent(j, \"waiting\"));\n// sq.on(\"active\", j => ScrapeEvents.logJobEvent(j, \"active\"));\n// sq.on(\"completed\", j => ScrapeEvents.logJobEvent(j, \"completed\"));\n// sq.on(\"paused\", j => ScrapeEvents.logJobEvent(j, \"paused\"));\n// sq.on(\"resumed\", j => ScrapeEvents.logJobEvent(j, \"resumed\"));\n// sq.on(\"removed\", j => ScrapeEvents.logJobEvent(j, \"removed\"));\n// \n"]}