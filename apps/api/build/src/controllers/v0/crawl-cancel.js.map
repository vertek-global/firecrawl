{"version":3,"file":"crawl-cancel.js","sourceRoot":"","sources":["../../../../src/controllers/v0/crawl-cancel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport { authenticateUser } from \"../auth\";\nimport { RateLimiterMode } from \"../../../src/types\";\nimport { supabase_service } from \"../../../src/services/supabase\";\nimport { logger } from \"../../../src/lib/logger\";\nimport { getCrawl, saveCrawl } from \"../../../src/lib/crawl-redis\";\nimport * as Sentry from \"@sentry/node\";\nimport { configDotenv } from \"dotenv\";\nimport { redisEvictConnection } from \"../../../src/services/redis\";\nconfigDotenv();\n\nexport async function crawlCancelController(req: Request, res: Response) {\n  try {\n    const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n\n    const auth = await authenticateUser(req, res, RateLimiterMode.CrawlStatus);\n    if (!auth.success) {\n      return res.status(auth.status).json({ error: auth.error });\n    }\n\n    const { team_id } = auth;\n\n    if (auth.chunk?.flags?.forceZDR) {\n      return res.status(400).json({ error: \"Your team has zero data retention enabled. This is not supported on the v0 API. Please update your code to use the v1 API.\" });\n    }\n\n    redisEvictConnection.sadd(\"teams_using_v0\", team_id)\n      .catch(error => logger.error(\"Failed to add team to teams_using_v0\", { error, team_id }));\n\n    const sc = await getCrawl(req.params.jobId);\n    if (!sc) {\n      return res.status(404).json({ error: \"Job not found\" });\n    }\n\n    // check if the job belongs to the team\n    if (useDbAuthentication) {\n      const { data, error: supaError } = await supabase_service\n        .from(\"bulljobs_teams\")\n        .select(\"*\")\n        .eq(\"job_id\", req.params.jobId)\n        .eq(\"team_id\", team_id);\n      if (supaError) {\n        return res.status(500).json({ error: supaError.message });\n      }\n\n      if (data.length === 0) {\n        return res.status(403).json({ error: \"Unauthorized\" });\n      }\n    }\n\n    try {\n      sc.cancelled = true;\n      await saveCrawl(req.params.jobId, sc);\n    } catch (error) {\n      logger.error(error);\n    }\n\n    res.json({\n      status: \"cancelled\",\n    });\n  } catch (error) {\n    Sentry.captureException(error);\n    logger.error(error);\n    return res.status(500).json({ error: error.message });\n  }\n}\n"]}