{"version":3,"file":"map.js","sourceRoot":"","sources":["../../../../src/controllers/v1/map.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response } from \"express\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  MapDocument,\n  mapRequestSchema,\n  RequestWithAuth,\n  scrapeOptions,\n  TeamFlags,\n  TimeoutSignal,\n} from \"./types\";\nimport { crawlToCrawler, StoredCrawl } from \"../../lib/crawl-redis\";\nimport { MapResponse, MapRequest } from \"./types\";\nimport { configDotenv } from \"dotenv\";\nimport {\n  checkAndUpdateURLForMap,\n  isSameDomain,\n  isSameSubdomain,\n  removeDuplicateUrls,\n} from \"../../lib/validateUrl\";\nimport { fireEngineMap } from \"../../search/fireEngine\";\nimport { billTeam } from \"../../services/billing/credit_billing\";\nimport { logJob } from \"../../services/logging/log_job\";\nimport { performCosineSimilarity } from \"../../lib/map-cosine\";\nimport { logger } from \"../../lib/logger\";\nimport Redis from \"ioredis\";\nimport { generateURLSplits, queryIndexAtDomainSplitLevel, queryIndexAtSplitLevel } from \"../../services/index\";\n\nconfigDotenv();\nconst redis = new Redis(process.env.REDIS_URL!);\n\n// Max Links that /map can return\nconst MAX_MAP_LIMIT = 30000;\n// Max Links that \"Smart /map\" can return\nconst MAX_FIRE_ENGINE_RESULTS = 500;\n\ninterface MapResult {\n  success: boolean;\n  links: string[];\n  scrape_id?: string;\n  job_id: string;\n  time_taken: number;\n  mapResults: MapDocument[];\n}\n\nasync function queryIndex(url: string, limit: number, useIndex: boolean, includeSubdomains: boolean): Promise<string[]> {\n  if (!useIndex) {\n    return [];\n  }\n\n  const urlSplits = generateURLSplits(url);\n  if (urlSplits.length === 1) {\n    const urlObj = new URL(url);\n    const hostname = urlObj.hostname;\n\n    // TEMP: this should be altered on June 15th 2025 7AM PT - mogery\n    const domainLinks = includeSubdomains ? await queryIndexAtDomainSplitLevel(hostname, limit, 14 * 24 * 60 * 60 * 1000) : [];\n    const splitLinks = await queryIndexAtSplitLevel(url, limit, 14 * 24 * 60 * 60 * 1000);\n\n    return Array.from(new Set([...domainLinks, ...splitLinks]));\n  } else {\n    return await queryIndexAtSplitLevel(url, limit);\n  }\n}\n\nexport async function getMapResults({\n  url,\n  search,\n  limit = MAX_MAP_LIMIT,\n  ignoreSitemap = false,\n  includeSubdomains = true,\n  crawlerOptions = {},\n  teamId,\n  origin,\n  includeMetadata = false,\n  allowExternalLinks,\n  abort = new AbortController().signal, // noop\n  mock,\n  filterByPath = true,\n  flags,\n  useIndex = true,\n  timeout,\n}: {\n  url: string;\n  search?: string;\n  limit?: number;\n  ignoreSitemap?: boolean;\n  includeSubdomains?: boolean;\n  crawlerOptions?: any;\n  teamId: string;\n  origin?: string;\n  includeMetadata?: boolean;\n  allowExternalLinks?: boolean;\n  abort?: AbortSignal;\n  mock?: string;\n  filterByPath?: boolean;\n  flags: TeamFlags;\n  useIndex?: boolean;\n  timeout?: number;\n}): Promise<MapResult> {\n  const id = uuidv4();\n  let links: string[] = [url];\n  let mapResults: MapDocument[] = [];\n\n  const zeroDataRetention = flags?.forceZDR ?? false;\n\n  const sc: StoredCrawl = {\n    originUrl: url,\n    crawlerOptions: {\n      ...crawlerOptions,\n      limit: crawlerOptions.sitemapOnly ? 10000000 : limit,\n      scrapeOptions: undefined,\n    },\n    scrapeOptions: scrapeOptions.parse({}),\n    internalOptions: { teamId },\n    team_id: teamId,\n    createdAt: Date.now(),\n  };\n\n  const crawler = crawlToCrawler(id, sc, flags);\n\n  try {\n    sc.robots = await crawler.getRobotsTxt(false, abort);\n    crawler.importRobotsTxt(sc.robots);\n  } catch (_) {}\n\n  // If sitemapOnly is true, only get links from sitemap\n  if (crawlerOptions.sitemapOnly) {\n    const sitemap = await crawler.tryGetSitemap(\n      (urls) => {\n        urls.forEach((x) => {\n          links.push(x);\n        });\n      },\n      true,\n      true,\n      timeout ?? 30000,\n      abort,\n      mock,\n    );\n    if (sitemap > 0) {\n      links = links\n        .slice(1)\n        .map((x) => {\n          try {\n            return checkAndUpdateURLForMap(x).url.trim();\n          } catch (_) {\n            return null;\n          }\n        })\n        .filter((x) => x !== null) as string[];\n      // links = links.slice(1, limit); // don't slice, unnecessary\n    }\n  } else {\n    let urlWithoutWww = url.replace(\"www.\", \"\");\n\n    let mapUrl =\n      search && allowExternalLinks\n        ? `${search} ${urlWithoutWww}`\n        : search\n          ? `${search} site:${urlWithoutWww}`\n          : `site:${url}`;\n\n    const resultsPerPage = 100;\n    const maxPages = Math.ceil(\n      Math.min(MAX_FIRE_ENGINE_RESULTS, limit) / resultsPerPage,\n    );\n\n    const cacheKey = `fireEngineMap:${mapUrl}`;\n    const cachedResult = await redis.get(cacheKey);\n\n    let allResults: any[] = [];\n    let pagePromises: Promise<any>[] = [];\n\n    if (cachedResult) {\n      allResults = JSON.parse(cachedResult);\n    } else {\n      const fetchPage = async (page: number) => {\n        return fireEngineMap(mapUrl, {\n          numResults: resultsPerPage,\n          page: page,\n        }, abort);\n      };\n\n      pagePromises = Array.from({ length: maxPages }, (_, i) =>\n        fetchPage(i + 1),\n      );\n      allResults = await Promise.all(pagePromises);\n\n      if (!zeroDataRetention) {\n        await redis.set(cacheKey, JSON.stringify(allResults), \"EX\", 48 * 60 * 60); // Cache for 48 hours\n      }\n    }\n\n    // Parallelize sitemap index query with search results\n    const [indexResults, ...searchResults] = await Promise.all([\n      queryIndex(url, limit, useIndex, includeSubdomains),\n      ...(cachedResult ? [] : pagePromises),\n    ]);\n\n    if (indexResults.length > 0) {\n      links.push(...indexResults);\n    }\n\n    // If sitemap is not ignored, fetch sitemap\n    // This will attempt to find it in the index at first, or fetch a fresh one if it's older than 2 days\n    if (\n      !ignoreSitemap\n    ) {\n      try {\n        await crawler.tryGetSitemap(\n          (urls) => {\n            links.push(...urls);\n          },\n          true,\n          false,\n          timeout ?? 30000,\n          abort,\n        );\n      } catch (e) {\n        logger.warn(\"tryGetSitemap threw an error\", { error: e });\n      }\n    }\n\n    if (!cachedResult) {\n      allResults = searchResults;\n    }\n\n    mapResults = allResults\n      .flat()\n      .filter((result) => result !== null && result !== undefined);\n\n    const minumumCutoff = Math.min(MAX_MAP_LIMIT, limit);\n    if (mapResults.length > minumumCutoff) {\n      mapResults = mapResults.slice(0, minumumCutoff);\n    }\n\n    if (mapResults.length > 0) {\n      if (search) {\n        // Ensure all map results are first, maintaining their order\n        links = [\n          mapResults[0].url,\n          ...mapResults.slice(1).map((x) => x.url),\n          ...links,\n        ];\n      } else {\n        mapResults.map((x) => {\n          links.push(x.url);\n        });\n      }\n    }\n\n    // Perform cosine similarity between the search query and the list of links\n    if (search) {\n      const searchQuery = search.toLowerCase();\n      links = performCosineSimilarity(links, searchQuery);\n    }\n\n    links = links\n      .map((x) => {\n        try {\n          return checkAndUpdateURLForMap(x).url.trim();\n        } catch (_) {\n          return null;\n        }\n      })\n      .filter((x) => x !== null) as string[];\n\n    // allows for subdomains to be included\n    links = links.filter((x) => isSameDomain(x, url));\n\n    // if includeSubdomains is false, filter out subdomains\n    if (!includeSubdomains) {\n      links = links.filter((x) => isSameSubdomain(x, url));\n    }\n\n    // Filter by path if enabled\n    if (filterByPath && !allowExternalLinks) {\n      try {\n        const urlObj = new URL(url);\n        const urlPath = urlObj.pathname;\n        // Only apply path filtering if the URL has a significant path (not just '/' or empty)\n        // This means we only filter by path if the user has not selected a root domain\n        if (urlPath && urlPath !== '/' && urlPath.length > 1) {\n          links = links.filter(link => {\n            try {\n              const linkObj = new URL(link);\n              return linkObj.pathname.startsWith(urlPath);\n            } catch (e) {\n              return false;\n            }\n          });\n        }\n      } catch (e) {\n        // If URL parsing fails, continue without path filtering\n        logger.warn(`Failed to parse URL for path filtering: ${url}`, { error: e });\n      }\n    }\n\n    // remove duplicates that could be due to http/https or www\n    links = removeDuplicateUrls(links);\n  }\n\n  const linksToReturn = crawlerOptions.sitemapOnly\n    ? links\n    : links.slice(0, limit);\n\n  return {\n    success: true,\n    links: linksToReturn,\n    mapResults: mapResults,\n    scrape_id: origin?.includes(\"website\") ? id : undefined,\n    job_id: id,\n    time_taken: (new Date().getTime() - Date.now()) / 1000,\n  };\n}\n\nexport async function mapController(\n  req: RequestWithAuth<{}, MapResponse, MapRequest>,\n  res: Response<MapResponse>,\n) {\n  const originalRequest = req.body;\n  req.body = mapRequestSchema.parse(req.body);\n  \n  if (req.acuc?.flags?.forceZDR) {\n    return res.status(400).json({ success: false, error: \"Your team has zero data retention enabled. This is not supported on map. Please contact support@firecrawl.com to unblock this feature.\" });\n  }\n\n  logger.info(\"Map request\", {\n    request: req.body,\n    originalRequest,\n    teamId: req.auth.team_id,\n  });\n\n  let result: Awaited<ReturnType<typeof getMapResults>>;\n  const abort = new AbortController();\n  try {\n    result = await Promise.race([\n      getMapResults({\n        url: req.body.url,\n        search: req.body.search,\n        limit: req.body.limit,\n        ignoreSitemap: req.body.ignoreSitemap,\n        includeSubdomains: req.body.includeSubdomains,\n        crawlerOptions: req.body,\n        origin: req.body.origin,\n        teamId: req.auth.team_id,\n        abort: abort.signal,\n        mock: req.body.useMock,\n        filterByPath: req.body.filterByPath !== false,\n        flags: req.acuc?.flags ?? null,\n        useIndex: req.body.useIndex,\n        timeout: req.body.timeout,\n      }),\n      ...(req.body.timeout !== undefined ? [\n        new Promise((resolve, reject) => setTimeout(() => {\n          abort.abort(new TimeoutSignal());\n          reject(new TimeoutSignal());\n        }, req.body.timeout))\n      ] : []),\n    ]) as any;\n  } catch (error) {\n    if (error instanceof TimeoutSignal || error === \"timeout\") {\n      return res.status(408).json({\n        success: false,\n        error: \"Request timed out\",\n      });\n    } else {\n      throw error;\n    }\n  }\n\n  // Bill the team\n  billTeam(req.auth.team_id, req.acuc?.sub_id, 1).catch((error) => {\n    logger.error(\n      `Failed to bill team ${req.auth.team_id} for 1 credit: ${error}`,\n    );\n  });\n\n  // Log the job\n  logJob({\n    job_id: result.job_id,\n    success: result.links.length > 0,\n    message: \"Map completed\",\n    num_docs: result.links.length,\n    docs: result.links,\n    time_taken: result.time_taken,\n    team_id: req.auth.team_id,\n    mode: \"map\",\n    url: req.body.url,\n    crawlerOptions: {},\n    scrapeOptions: {},\n    origin: req.body.origin ?? \"api\",\n    integration: req.body.integration,\n    num_tokens: 0,\n    credits_billed: 1,\n    zeroDataRetention: false, // not supported\n  });\n\n  const response = {\n    success: true as const,\n    links: result.links,\n    scrape_id: result.scrape_id,\n  };\n\n  return res.status(200).json(response);\n}\n"]}