{"version":3,"file":"crawl.js","sourceRoot":"","sources":["../../../../src/controllers/v1/crawl.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response } from \"express\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  CrawlRequest,\n  crawlRequestSchema,\n  CrawlResponse,\n  RequestWithAuth,\n  toLegacyCrawlerOptions,\n} from \"./types\";\nimport { crawlToCrawler, saveCrawl, StoredCrawl } from \"../../lib/crawl-redis\";\nimport { logCrawl } from \"../../services/logging/crawl_log\";\nimport { _addScrapeJobToBullMQ } from \"../../services/queue-jobs\";\nimport { logger as _logger } from \"../../lib/logger\";\n\nexport async function crawlController(\n  req: RequestWithAuth<{}, CrawlResponse, CrawlRequest>,\n  res: Response<CrawlResponse>,\n) {\n  const preNormalizedBody = req.body;\n  req.body = crawlRequestSchema.parse(req.body);\n\n  if (req.body.zeroDataRetention && !req.acuc?.flags?.allowZDR) {\n    return res.status(400).json({\n      success: false,\n      error: \"Zero data retention is enabled for this team. If you're interested in ZDR, please contact support@firecrawl.com\",\n    });\n  }\n\n  const zeroDataRetention = req.acuc?.flags?.forceZDR || req.body.zeroDataRetention;\n\n  const id = uuidv4();\n  const logger = _logger.child({\n    crawlId: id,\n    module: \"api/v1\",\n    method: \"crawlController\",\n    teamId: req.auth.team_id,\n    zeroDataRetention,\n  });\n\n  logger.debug(\"Crawl \" + id + \" starting\", {\n    request: req.body,\n    originalRequest: preNormalizedBody,\n    account: req.account,\n  });\n\n  await logCrawl(id, req.auth.team_id);\n\n  let { remainingCredits } = req.account!;\n  const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === \"true\";\n  if (!useDbAuthentication) {\n    remainingCredits = Infinity;\n  }\n\n  const crawlerOptions = {\n    ...req.body,\n    url: undefined,\n    scrapeOptions: undefined,\n  };\n  const scrapeOptions = req.body.scrapeOptions;\n\n  // TODO: @rafa, is this right? copied from v0\n  if (Array.isArray(crawlerOptions.includePaths)) {\n    for (const x of crawlerOptions.includePaths) {\n      try {\n        new RegExp(x);\n      } catch (e) {\n        return res.status(400).json({ success: false, error: e.message });\n      }\n    }\n  }\n\n  if (Array.isArray(crawlerOptions.excludePaths)) {\n    for (const x of crawlerOptions.excludePaths) {\n      try {\n        new RegExp(x);\n      } catch (e) {\n        return res.status(400).json({ success: false, error: e.message });\n      }\n    }\n  }\n\n  const originalLimit = crawlerOptions.limit;\n  crawlerOptions.limit = Math.min(remainingCredits, crawlerOptions.limit);\n  logger.debug(\"Determined limit: \" + crawlerOptions.limit, {\n    remainingCredits,\n    bodyLimit: originalLimit,\n    originalBodyLimit: preNormalizedBody.limit,\n  });\n\n  const sc: StoredCrawl = {\n    originUrl: req.body.url,\n    crawlerOptions: toLegacyCrawlerOptions(crawlerOptions),\n    scrapeOptions,\n    internalOptions: {\n      disableSmartWaitCache: true,\n      teamId: req.auth.team_id,\n      saveScrapeResultToGCS: process.env.GCS_FIRE_ENGINE_BUCKET_NAME ? true : false,\n      zeroDataRetention,\n    }, // NOTE: smart wait disabled for crawls to ensure contentful scrape, speed does not matter\n    team_id: req.auth.team_id,\n    createdAt: Date.now(),\n    maxConcurrency: req.body.maxConcurrency !== undefined ? Math.min(req.body.maxConcurrency, req.acuc.concurrency) : undefined,\n    zeroDataRetention,\n  };\n\n  const crawler = crawlToCrawler(id, sc, req.acuc?.flags ?? null);\n\n  try {\n    sc.robots = await crawler.getRobotsTxt(scrapeOptions.skipTlsVerification);\n    const robotsCrawlDelay = crawler.getRobotsCrawlDelay();\n    if (robotsCrawlDelay !== null && !sc.crawlerOptions.delay) {\n      sc.crawlerOptions.delay = robotsCrawlDelay;\n    }\n  } catch (e) {\n    logger.debug(\"Failed to get robots.txt (this is probably fine!)\", {\n      error: e,\n    });\n  }\n\n  await saveCrawl(id, sc);\n\n  await _addScrapeJobToBullMQ(\n    {\n      url: req.body.url,\n      mode: \"kickoff\" as const,\n      team_id: req.auth.team_id,\n      crawlerOptions,\n      scrapeOptions: sc.scrapeOptions,\n      internalOptions: sc.internalOptions,\n      origin: req.body.origin,\n      integration: req.body.integration,\n      crawl_id: id,\n      webhook: req.body.webhook,\n      v1: true,\n      zeroDataRetention: zeroDataRetention || false,\n    },\n    {},\n    crypto.randomUUID(),\n    10,\n  );\n\n  const protocol = process.env.ENV === \"local\" ? req.protocol : \"https\";\n\n  return res.status(200).json({\n    success: true,\n    id,\n    url: `${protocol}://${req.get(\"host\")}/v1/crawl/${id}`,\n  });\n}\n"]}