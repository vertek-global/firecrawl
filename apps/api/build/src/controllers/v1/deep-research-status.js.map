{"version":3,"file":"deep-research-status.js","sourceRoot":"","sources":["../../../../src/controllers/v1/deep-research-status.ts"],"names":[],"mappings":";;AAQA,oEAgDC;AAtDD,qFAGqD;AACrD,2DAA8D;AAEvD,KAAK,UAAU,4BAA4B,CAChD,GAAiD,EACjD,GAAa;IAEb,MAAM,QAAQ,GAAG,MAAM,IAAA,qCAAe,EAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAEzD,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,6BAA6B;SACrC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,IAAI,GAAQ,IAAI,CAAC;IAErB,IACE,QAAQ,CAAC,MAAM,KAAK,WAAW;QAC/B,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,MAAM,EAC5C,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,IAAA,mCAAmB,EAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAClC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;QACpD,IAAI,EAAE;YACJ,aAAa,EAAE,QAAQ,CAAC,aAAa;YACrC,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,2CAA2C;YAC3C,2CAA2C;SAC5C;QACD,KAAK,EAAE,QAAQ,EAAE,KAAK,IAAI,SAAS;QACnC,SAAS,EAAE,CAAC,MAAM,IAAA,2CAAqB,EAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE;QACxE,YAAY,EAAE,QAAQ,CAAC,YAAY;QACnC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,MAAM,EAAE,QAAQ,CAAC,MAAM;QACvB,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM;QAClC,0CAA0C;QAC1C,aAAa;QACb,UAAU,EAAE,QAAQ,CAAC,UAAU;QAC/B,aAAa;QACb,OAAO,EAAE,QAAQ,CAAC,OAAO;QACzB,iCAAiC;KAClC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { Response } from \"express\";\nimport { RequestWithAuth } from \"./types\";\nimport {\n  getDeepResearch,\n  getDeepResearchExpiry,\n} from \"../../lib/deep-research/deep-research-redis\";\nimport { supabaseGetJobsById } from \"../../lib/supabase-jobs\";\n\nexport async function deepResearchStatusController(\n  req: RequestWithAuth<{ jobId: string }, any, any>,\n  res: Response,\n) {\n  const research = await getDeepResearch(req.params.jobId);\n\n  if (!research) {\n    return res.status(404).json({\n      success: false,\n      error: \"Deep research job not found\",\n    });\n  }\n\n  let data: any = null;\n\n  if (\n    research.status === \"completed\" &&\n    process.env.USE_DB_AUTHENTICATION === \"true\"\n  ) {\n    const jobData = await supabaseGetJobsById([req.params.jobId]);\n    if (jobData && jobData.length > 0) {\n      data = jobData[0].docs[0];\n    }\n  }\n\n  return res.status(200).json({\n    success: research.status === \"failed\" ? false : true,\n    data: {\n      finalAnalysis: research.finalAnalysis,\n      sources: research.sources,\n      activities: research.activities,\n      json: research.json,\n      // completedSteps: research.completedSteps,\n      // totalSteps: research.totalExpectedSteps,\n    },\n    error: research?.error ?? undefined,\n    expiresAt: (await getDeepResearchExpiry(req.params.jobId)).toISOString(),\n    currentDepth: research.currentDepth,\n    maxDepth: research.maxDepth,\n    status: research.status,\n    totalUrls: research.sources.length,\n    // DO NOT remove - backwards compatibility\n    //@deprecated\n    activities: research.activities,\n    //@deprecated\n    sources: research.sources,\n    // summaries: research.summaries,\n  });\n}\n"]}