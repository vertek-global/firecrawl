{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/controllers/v1/types.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport { z } from \"zod\";\nimport { protocolIncluded, checkUrl } from \"../../lib/validateUrl\";\nimport { countries } from \"../../lib/validate-country\";\nimport {\n  ExtractorOptions,\n  PageOptions,\n  ScrapeActionContent,\n  Document as V0Document,\n} from \"../../lib/entities\";\nimport { InternalOptions } from \"../../scraper/scrapeURL\";\n\nexport enum IntegrationEnum {\n  DIFY = \"dify\",\n  ZAPIER = \"zapier\",\n  PIPEDREAM = \"pipedream\",\n  RAYCAST = \"raycast\",\n  LANGCHAIN = \"langchain\",\n  CREWAI = \"crewai\",\n  LLAMAINDEX = \"llamaindex\",\n  N8N = \"n8n\",\n  CAMELAI = \"camelai\",\n  MAKE = \"make\",\n  FLOWISE = \"flowise\",\n  METAGPT = \"metagpt\",\n  RELEVANCEAI = 'relevanceai',\n}\n\nexport type Format =\n  | \"markdown\"\n  | \"html\"\n  | \"rawHtml\"\n  | \"links\"\n  | \"screenshot\"\n  | \"screenshot@fullPage\"\n  | \"extract\"\n  | \"json\"\n  | \"changeTracking\";\n\nexport const url = z.preprocess(\n  (x) => {\n    if (!protocolIncluded(x as string)) {\n      x = `http://${x}`;\n    }\n\n    // transforming the query parameters is breaking certain sites, so we're not doing it - mogery\n    // try {\n    //   const urlObj = new URL(x as string);\n    //   if (urlObj.search) {\n    //     const searchParams = new URLSearchParams(urlObj.search.substring(1));\n    //     return `${urlObj.origin}${urlObj.pathname}?${searchParams.toString()}`;\n    //   }\n    // } catch (e) {\n    // }\n\n    return x;\n  },\n  z\n    .string()\n    .url()\n    .regex(/^https?:\\/\\//, \"URL uses unsupported protocol\")\n    .refine(\n      (x) =>\n        /(\\.[a-zA-Z0-9-\\u0400-\\u04FF\\u0500-\\u052F\\u2DE0-\\u2DFF\\uA640-\\uA69F]{2,}|\\.xn--[a-zA-Z0-9-]{1,})(:\\d+)?([\\/?#]|$)/i.test(\n          x,\n        ),\n      \"URL must have a valid top-level domain or be a valid path\",\n    )\n    .refine((x) => {\n      try {\n        checkUrl(x as string);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    }, \"Invalid URL\")\n  // .refine((x) => !isUrlBlocked(x as string), BLOCKLISTED_URL_MESSAGE),\n);\n\nconst strictMessage =\n  \"Unrecognized key in body -- please review the v1 API documentation for request body changes\";\n\nexport const agentExtractModelValue = 'fire-1'\nexport const isAgentExtractModelValid = (x: string | undefined) => x?.toLowerCase() === agentExtractModelValue;\n\nexport const agentOptionsExtract = z\n  .object({\n    model: z.string().default(agentExtractModelValue),\n  })\n  .strict(strictMessage);\n\nexport type AgentOptions = z.infer<typeof agentOptionsExtract>;\n\nexport const extractOptions = z\n  .object({\n    mode: z.enum([\"llm\"]).default(\"llm\"),\n    schema: z.any().optional(),\n    systemPrompt: z\n      .string()\n      .max(10000)\n      .default(\"\"),\n    prompt: z.string().max(10000).optional(),\n    temperature: z.number().optional(),\n  })\n  .strict(strictMessage)\n  .transform((data) => ({\n    ...data,\n    systemPrompt: \"Based on the information on the page, extract all the information from the schema in JSON format. Try to extract all the fields even those that might not be marked as required.\"\n  }));\n\nexport const extractOptionsWithAgent = z\n  .object({\n    mode: z.enum([\"llm\"]).default(\"llm\"),\n    schema: z.any().optional(),\n    systemPrompt: z\n      .string()\n      .max(10000)\n      .default(\"\"),\n    prompt: z.string().max(10000).optional(),\n    temperature: z.number().optional(),\n    agent: z\n      .object({\n        model: z.string().default(agentExtractModelValue),\n        prompt: z.string().optional(),\n      })\n      .optional(),\n  })\n  .strict(strictMessage)\n  .transform((data) => ({\n    ...data,\n    systemPrompt: isAgentExtractModelValid(data.agent?.model)\n      ? `You are an expert web data extractor. Your task is to analyze the provided markdown content from a web page and generate a JSON object based *strictly* on the provided schema.\n\nKey Instructions:\n1.  **Schema Adherence:** Populate the JSON object according to the structure defined in the schema.\n2.  **Content Grounding:** Extract information *only* if it is explicitly present in the provided markdown. Do NOT infer or fabricate information.\n3.  **Missing Information:** If a piece of information required by the schema cannot be found in the markdown, use \\`null\\` for that field's value.\n4.  **SmartScrape Recommendation:**\n    *   Assess if the *full* required data seems unavailable in the current markdown likely because:\n        - Content requires user interaction to reveal (e.g., clicking buttons, hovering, scrolling)\n        - Content uses pagination (e.g., \"Load More\" buttons, numbered pagination, infinite scroll)\n        - Content is dynamically loaded after user actions\n    *   If the content requires user interaction or pagination to be fully accessible, set \\`shouldUseSmartscrape\\` to \\`true\\` in your response and provide a clear \\`reasoning\\` and \\`prompt\\` for the SmartScrape tool.\n    *   If the content is simply JavaScript rendered but doesn't require interaction, set \\`shouldUseSmartscrape\\` to \\`false\\`.\n5.  **Output Format:** Your final output MUST be a single, valid JSON object conforming precisely to the schema. Do not include any explanatory text outside the JSON structure.`\n      : \"Based on the information on the page, extract all the information from the schema in JSON format. Try to extract all the fields even those that might not be marked as required.\"\n  }));\n\nexport type ExtractOptions = z.infer<typeof extractOptions>;\n\nconst ACTIONS_MAX_WAIT_TIME = 60;\nconst MAX_ACTIONS = 50;\nfunction calculateTotalWaitTime(\n  actions: any[] = [],\n  waitFor: number = 0,\n): number {\n  const actionWaitTime = actions.reduce((acc, action) => {\n    if (action.type === \"wait\") {\n      if (action.milliseconds) {\n        return acc + action.milliseconds;\n      }\n      // Consider selector actions as 1 second\n      if (action.selector) {\n        return acc + 1000;\n      }\n    }\n    return acc;\n  }, 0);\n\n  return waitFor + actionWaitTime;\n}\n\nexport const actionSchema = z\n  .union([\n    z\n      .object({\n        type: z.literal(\"wait\"),\n        milliseconds: z.number().int().positive().finite().optional(),\n        selector: z.string().optional(),\n      })\n      .refine(\n        (data) =>\n          (data.milliseconds !== undefined || data.selector !== undefined) &&\n          !(data.milliseconds !== undefined && data.selector !== undefined),\n        {\n          message:\n            \"Either 'milliseconds' or 'selector' must be provided, but not both.\",\n        },\n      ),\n    z.object({\n      type: z.literal(\"click\"),\n      selector: z.string(),\n      all: z.boolean().default(false),\n    }),\n    z.object({\n      type: z.literal(\"screenshot\"),\n      fullPage: z.boolean().default(false),\n      quality: z.number().min(1).max(100).optional(),\n    }),\n    z.object({\n      type: z.literal(\"write\"),\n      text: z.string(),\n    }),\n    z.object({\n      type: z.literal(\"press\"),\n      key: z.string(),\n    }),\n    z.object({\n      type: z.literal(\"scroll\"),\n      direction: z.enum([\"up\", \"down\"]).optional().default(\"down\"),\n      selector: z.string().optional(),\n    }),\n    z.object({\n      type: z.literal(\"scrape\"),\n    }),\n    z.object({\n      type: z.literal(\"executeJavascript\"),\n      script: z.string(),\n    }),\n    z.object({\n      type: z.literal(\"pdf\"),\n      landscape: z.boolean().default(false),\n      scale: z.number().default(1),\n      format: z.enum(['A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'Letter', 'Legal', 'Tabloid', 'Ledger']).default(\"Letter\"),\n    }),\n  ]);\n\nexport type Action = z.infer<typeof actionSchema>;\n\nexport const actionsSchema = z\n  .array(actionSchema)\n  .refine((actions) => actions.length <= MAX_ACTIONS, {\n    message: `Number of actions cannot exceed ${MAX_ACTIONS}`,\n  })\n  .refine(\n    (actions) =>\n      calculateTotalWaitTime(actions) <= ACTIONS_MAX_WAIT_TIME * 1000,\n    {\n      message: `Total wait time (waitFor + wait actions) cannot exceed ${ACTIONS_MAX_WAIT_TIME} seconds`,\n    },\n  );\n\nconst baseScrapeOptions = z\n  .object({\n    formats: z\n      .enum([\n        \"markdown\",\n        \"html\",\n        \"rawHtml\",\n        \"links\",\n        \"screenshot\",\n        \"screenshot@fullPage\",\n        \"extract\",\n        \"json\",\n        \"changeTracking\",\n      ])\n      .array()\n      .optional()\n      .default([\"markdown\"])\n      .refine(\n        (x) => !(x.includes(\"screenshot\") && x.includes(\"screenshot@fullPage\")),\n        \"You may only specify either screenshot or screenshot@fullPage\",\n      )\n      .refine(\n        (x) => !x.includes(\"changeTracking\") || x.includes(\"markdown\"),\n        \"The changeTracking format requires the markdown format to be specified as well\",\n      ),\n    headers: z.record(z.string(), z.string()).optional(),\n    includeTags: z.string().array().optional(),\n    excludeTags: z.string().array().optional(),\n    onlyMainContent: z.boolean().default(true),\n    timeout: z.number().int().positive().finite().safe().optional(),\n    waitFor: z\n      .number()\n      .int()\n      .nonnegative()\n      .finite()\n      .safe()\n      .max(60000)\n      .default(0),\n    // Deprecate this to jsonOptions\n    extract: extractOptions.optional(),\n    // New\n    jsonOptions: extractOptions.optional(),\n    changeTrackingOptions: z\n      .object({\n        prompt: z.string().optional(),\n        schema: z.any().optional(),\n        modes: z.enum([\"json\", \"git-diff\"]).array().optional().default([]),\n        tag: z.string().or(z.null()).default(null),\n      })\n      .optional(),\n    mobile: z.boolean().default(false),\n    parsePDF: z.boolean().default(true),\n    actions: actionsSchema.optional(),\n    // New\n    location: z\n      .object({\n        country: z\n          .string()\n          .optional()\n          .refine(\n            (val) =>\n              !val ||\n              Object.keys(countries).includes(val.toUpperCase()) ||\n              val === \"US-generic\",\n            {\n              message:\n                \"Invalid country code. Please use a valid ISO 3166-1 alpha-2 country code.\",\n            },\n          )\n          .transform((val) => (val ? val.toUpperCase() : \"US-generic\")),\n        languages: z.string().array().optional(),\n      })\n      .optional(),\n\n    // Deprecated\n    geolocation: z\n      .object({\n        country: z\n          .string()\n          .optional()\n          .refine(\n            (val) => !val || Object.keys(countries).includes(val.toUpperCase()),\n            {\n              message:\n                \"Invalid country code. Please use a valid ISO 3166-1 alpha-2 country code.\",\n            },\n          )\n          .transform((val) => (val ? val.toUpperCase() : \"US-generic\")),\n        languages: z.string().array().optional(),\n      })\n      .optional(),\n    skipTlsVerification: z.boolean().default(false),\n    removeBase64Images: z.boolean().default(true),\n    fastMode: z.boolean().default(false),\n    useMock: z.string().optional(),\n    blockAds: z.boolean().default(true),\n    proxy: z.enum([\"basic\", \"stealth\", \"auto\"]).optional(),\n    maxAge: z.number().int().gte(0).safe().default(0),\n    storeInCache: z.boolean().default(true),\n    // @deprecated\n    __experimental_cache: z.boolean().default(false).optional(),\n    __searchPreviewToken: z.string().optional(),\n  })\n  .strict(strictMessage);\n\nconst fire1Refine = (obj) => {\n  if (obj.agent?.model?.toLowerCase() === \"fire-1\" && obj.jsonOptions?.agent?.model?.toLowerCase() === \"fire-1\") {\n    return false;\n  }\n  return true;\n}\nconst fire1RefineOpts = {\n  message: \"You may only specify the FIRE-1 model in agent or jsonOptions.agent, but not both.\",\n};\nconst extractRefine = (obj) => {\n  const hasExtractFormat = obj.formats?.includes(\"extract\");\n  const hasExtractOptions = obj.extract !== undefined;\n  const hasJsonFormat = obj.formats?.includes(\"json\");\n  const hasJsonOptions = obj.jsonOptions !== undefined;\n  return (\n    ((hasExtractFormat && hasExtractOptions) ||\n      (!hasExtractFormat && !hasExtractOptions)) &&\n    ((hasJsonFormat && hasJsonOptions) || (!hasJsonFormat && !hasJsonOptions))\n  );\n};\nconst extractRefineOpts = {\n  message:\n    \"When 'extract' or 'json' format is specified, corresponding options must be provided, and vice versa\",\n};\nconst extractTransform = (obj) => {\n  // Handle timeout\n  if (\n    (obj.formats?.includes(\"extract\") ||\n      obj.extract ||\n      obj.formats?.includes(\"json\") ||\n      obj.jsonOptions) &&\n    obj.timeout === 30000\n  ) {\n    obj = { ...obj, timeout: 60000 };\n  }\n\n  if (obj.formats?.includes(\"changeTracking\") && (obj.waitFor === undefined || obj.waitFor < 5000)) {\n    obj = { ...obj, waitFor: 5000 };\n  }\n\n  if (obj.formats?.includes(\"changeTracking\") && obj.timeout === 30000) {\n    obj = { ...obj, timeout: 60000 };\n  }\n\n  if (obj.agent) {\n    obj = { ...obj, timeout: 300000 };\n  }\n\n  if ((obj.proxy === \"stealth\" || obj.proxy === \"auto\") && obj.timeout === 30000) {\n    obj = { ...obj, timeout: 120000 };\n  }\n\n  if (obj.formats?.includes(\"json\")) {\n    obj.formats.push(\"extract\");\n  }\n\n  // Convert JSON options to extract options if needed\n  if (obj.jsonOptions && !obj.extract) {\n    obj = {\n      ...obj,\n      extract: {\n        prompt: obj.jsonOptions.prompt,\n        systemPrompt: obj.jsonOptions.systemPrompt,\n        schema: obj.jsonOptions.schema,\n        agent: obj.jsonOptions.agent,\n        mode: \"llm\",\n      },\n    };\n  }\n\n  return obj;\n};\n\nexport const scrapeOptions = baseScrapeOptions\n  .extend({\n    agent: z\n      .object({\n        model: z.string().default(agentExtractModelValue),\n        prompt: z.string().optional(),\n        sessionId: z.string().optional(),\n        waitBeforeClosingMs: z.number().optional(),\n      })\n      .optional(),\n    extract: extractOptionsWithAgent.optional(),\n    jsonOptions: extractOptionsWithAgent.optional(),\n  })\n  .strict(strictMessage)\n  .refine(\n    (obj) => {\n      if (!obj.actions) return true;\n      return (\n        calculateTotalWaitTime(obj.actions, obj.waitFor) <=\n        ACTIONS_MAX_WAIT_TIME * 1000\n      );\n    },\n    {\n      message: `Total wait time (waitFor + wait actions) cannot exceed ${ACTIONS_MAX_WAIT_TIME} seconds`,\n    },\n  )\n  .refine(extractRefine, extractRefineOpts)\n  .refine(fire1Refine, fire1RefineOpts)\n  .transform(extractTransform);\n\nexport type BaseScrapeOptions = z.infer<typeof baseScrapeOptions>;\n\nexport type ScrapeOptions = BaseScrapeOptions & {\n  extract?: z.infer<typeof extractOptionsWithAgent>,\n  jsonOptions?: z.infer<typeof extractOptionsWithAgent>,\n  agent?: {\n    model: string,\n    prompt: string,\n    sessionId?: string,\n    waitBeforeClosingMs?: number,\n  },\n};\n\nimport Ajv from \"ajv\";\nimport type { CostTracking } from \"../../lib/extract/extraction-service\";\n\nconst ajv = new Ajv();\n\nexport const extractV1Options = z\n  .object({\n    urls: url\n      .array()\n      .max(10, \"Maximum of 10 URLs allowed per request while in beta.\")\n      .optional(),\n    prompt: z.string().max(10000).optional(),\n    systemPrompt: z.string().max(10000).optional(),\n    schema: z\n      .any()\n      .optional()\n      .refine(\n        (val) => {\n          if (!val) return true; // Allow undefined schema\n          try {\n            const validate = ajv.compile(val);\n            return typeof validate === \"function\";\n          } catch (e) {\n            return false;\n          }\n        },\n        {\n          message: \"Invalid JSON schema.\",\n        },\n      ),\n    limit: z.number().int().positive().finite().safe().optional(),\n    ignoreSitemap: z.boolean().default(false),\n    includeSubdomains: z.boolean().default(true),\n    allowExternalLinks: z.boolean().default(false),\n    enableWebSearch: z.boolean().default(false),\n    scrapeOptions: baseScrapeOptions.default({ onlyMainContent: false }).optional(),\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    urlTrace: z.boolean().default(false),\n    timeout: z.number().int().positive().finite().safe().default(60000),\n    __experimental_streamSteps: z.boolean().default(false),\n    __experimental_llmUsage: z.boolean().default(false),\n    __experimental_showSources: z.boolean().default(false),\n    showSources: z.boolean().default(false),\n    __experimental_cacheKey: z.string().optional(),\n    __experimental_cacheMode: z\n      .enum([\"direct\", \"save\", \"load\"])\n      .default(\"direct\")\n      .optional(),\n    agent: agentOptionsExtract.optional(),\n    __experimental_showCostTracking: z.boolean().default(false),\n    ignoreInvalidURLs: z.boolean().default(false),\n  })\n  .strict(strictMessage)\n  .refine((obj) => obj.urls || obj.prompt, {\n    message: \"Either 'urls' or 'prompt' must be provided.\",\n  })\n  .transform((obj) => ({\n    ...obj,\n    allowExternalLinks: obj.allowExternalLinks || obj.enableWebSearch,\n  }))\n  .refine(\n    (x) => (x.scrapeOptions ? extractRefine(x.scrapeOptions) : true),\n    extractRefineOpts,\n  )\n  .refine(\n    (x) => (x.scrapeOptions ? fire1Refine(x.scrapeOptions) : true),\n    fire1RefineOpts,\n  )\n  .transform((x) => ({\n    ...x,\n    scrapeOptions: x.scrapeOptions\n      ? extractTransform(x.scrapeOptions)\n      : x.scrapeOptions,\n  }));\n\nexport type ExtractV1Options = z.infer<typeof extractV1Options>;\nexport const extractRequestSchema = extractV1Options;\nexport type ExtractRequest = z.infer<typeof extractRequestSchema>;\nexport type ExtractRequestInput = z.input<typeof extractRequestSchema>;\n\nexport const scrapeRequestSchema = baseScrapeOptions\n  .omit({ timeout: true })\n  .extend({\n    url,\n    agent: z\n      .object({\n        model: z.string().default(agentExtractModelValue),\n        prompt: z.string().optional(),\n        sessionId: z.string().optional(),\n        waitBeforeClosingMs: z.number().optional(),\n      })\n      .optional(),\n    extract: extractOptionsWithAgent.optional(),\n    jsonOptions: extractOptionsWithAgent.optional(),\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    timeout: z.number().int().positive().finite().safe().default(30000),\n    zeroDataRetention: z.boolean().optional(),\n  })\n  .strict(strictMessage)\n  .refine(extractRefine, extractRefineOpts)\n  .refine(fire1Refine, fire1RefineOpts)\n  .transform(extractTransform);\n\nexport type ScrapeRequest = z.infer<typeof scrapeRequestSchema>;\nexport type ScrapeRequestInput = z.input<typeof scrapeRequestSchema>;\n\nexport const webhookSchema = z.preprocess(\n  (x) => {\n    if (typeof x === \"string\") {\n      return { url: x };\n    } else {\n      return x;\n    }\n  },\n  z\n    .object({\n      url: z.string().url(),\n      headers: z.record(z.string(), z.string()).default({}),\n      metadata: z.record(z.string(), z.string()).default({}),\n      events: z\n        .array(z.enum([\"completed\", \"failed\", \"page\", \"started\"]))\n        .default([\"completed\", \"failed\", \"page\", \"started\"]),\n    })\n    .strict(strictMessage),\n);\n\nexport const batchScrapeRequestSchema = baseScrapeOptions\n  .extend({\n    urls: url.array(),\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    webhook: webhookSchema.optional(),\n    appendToId: z.string().uuid().optional(),\n    ignoreInvalidURLs: z.boolean().default(false),\n    maxConcurrency: z.number().positive().int().optional(),\n    zeroDataRetention: z.boolean().optional(),\n  })\n  .strict(strictMessage)\n  .refine(extractRefine, extractRefineOpts)\n  .refine(fire1Refine, fire1RefineOpts)\n  .transform(extractTransform);\n\nexport const batchScrapeRequestSchemaNoURLValidation = baseScrapeOptions\n  .extend({\n    urls: z.string().array(),\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    webhook: webhookSchema.optional(),\n    appendToId: z.string().uuid().optional(),\n    ignoreInvalidURLs: z.boolean().default(false),\n    maxConcurrency: z.number().positive().int().optional(),\n    zeroDataRetention: z.boolean().optional(),\n  })\n  .strict(strictMessage)\n  .refine(extractRefine, extractRefineOpts)\n  .refine(fire1Refine, fire1RefineOpts)\n  .transform(extractTransform);\n\nexport type BatchScrapeRequest = z.infer<typeof batchScrapeRequestSchema>;\nexport type BatchScrapeRequestInput = z.input<typeof batchScrapeRequestSchema>;\n\nconst crawlerOptions = z\n  .object({\n    includePaths: z.string().array().default([]),\n    excludePaths: z.string().array().default([]),\n    maxDepth: z.number().default(10), // default?\n    maxDiscoveryDepth: z.number().optional(),\n    limit: z.number().default(10000), // default?\n    allowBackwardLinks: z.boolean().default(false), // DEPRECATED: use crawlEntireDomain\n    crawlEntireDomain: z.boolean().optional(),\n    allowExternalLinks: z.boolean().default(false),\n    allowSubdomains: z.boolean().default(false),\n    ignoreRobotsTxt: z.boolean().default(false),\n    ignoreSitemap: z.boolean().default(false),\n    deduplicateSimilarURLs: z.boolean().default(true),\n    ignoreQueryParameters: z.boolean().default(false),\n    regexOnFullURL: z.boolean().default(false),\n    delay: z.number().positive().optional(),\n  })\n  .strict(strictMessage);\n\n// export type CrawlerOptions = {\n//   includePaths?: string[];\n//   excludePaths?: string[];\n//   maxDepth?: number;\n//   limit?: number;\n//   allowBackwardLinks?: boolean; // DEPRECATED: use crawlEntireDomain\n//   crawlEntireDomain?: boolean;\n//   allowExternalLinks?: boolean;\n//   ignoreSitemap?: boolean;\n// };\n\nexport type CrawlerOptions = z.infer<typeof crawlerOptions>;\n\nexport const crawlRequestSchema = crawlerOptions\n  .extend({\n    url,\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    scrapeOptions: baseScrapeOptions.default({}),\n    webhook: webhookSchema.optional(),\n    limit: z.number().default(10000),\n    maxConcurrency: z.number().positive().int().optional(),\n    zeroDataRetention: z.boolean().optional(),\n  })\n  .strict(strictMessage)\n  .refine((x) => extractRefine(x.scrapeOptions), extractRefineOpts)\n  .refine((x) => fire1Refine(x.scrapeOptions), fire1RefineOpts)\n  .transform((x) => {\n    if (x.crawlEntireDomain !== undefined) {\n      x.allowBackwardLinks = x.crawlEntireDomain;\n    }\n    return {\n      ...x,\n      scrapeOptions: extractTransform(x.scrapeOptions),\n    };\n  });\n\n// export type CrawlRequest = {\n//   url: string;\n//   crawlerOptions?: CrawlerOptions;\n//   scrapeOptions?: Exclude<ScrapeRequest, \"url\">;\n// };\n\n// export type ExtractorOptions = {\n//   mode: \"markdown\" | \"llm-extraction\" | \"llm-extraction-from-markdown\" | \"llm-extraction-from-raw-html\";\n//   extractionPrompt?: string;\n//   extractionSchema?: Record<string, any>;\n// }\n\nexport type CrawlRequest = z.infer<typeof crawlRequestSchema>;\nexport type CrawlRequestInput = z.input<typeof crawlRequestSchema>;\n\nexport const mapRequestSchema = crawlerOptions\n  .extend({\n    url,\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    includeSubdomains: z.boolean().default(true),\n    search: z.string().optional(),\n    ignoreSitemap: z.boolean().default(false),\n    sitemapOnly: z.boolean().default(false),\n    limit: z.number().min(1).max(30000).default(5000),\n    timeout: z.number().positive().finite().optional(),\n    useMock: z.string().optional(),\n    filterByPath: z.boolean().default(true),\n    useIndex: z.boolean().default(true),\n  })\n  .strict(strictMessage);\n\n// export type MapRequest = {\n//   url: string;\n//   crawlerOptions?: CrawlerOptions;\n// };\n\nexport type MapRequest = z.infer<typeof mapRequestSchema>;\nexport type MapRequestInput = z.input<typeof mapRequestSchema>;\n\nexport type Document = {\n  title?: string;\n  description?: string;\n  url?: string;\n  markdown?: string;\n  html?: string;\n  rawHtml?: string;\n  links?: string[];\n  screenshot?: string;\n  extract?: any;\n  json?: any;\n  warning?: string;\n  actions?: {\n    screenshots?: string[];\n    scrapes?: ScrapeActionContent[];\n    javascriptReturns?: {\n      type: string;\n      value: unknown;\n    }[];\n    pdfs?: string[];\n  };\n  changeTracking?: {\n    previousScrapeAt: string | null;\n    changeStatus: \"new\" | \"same\" | \"changed\" | \"removed\";\n    visibility: \"visible\" | \"hidden\";\n    diff?: {\n      text: string;\n      json: {\n        files: Array<{\n          from: string | null;\n          to: string | null;\n          chunks: Array<{\n            content: string;\n            changes: Array<{\n              type: string;\n              normal?: boolean;\n              ln?: number;\n              ln1?: number;\n              ln2?: number;\n              content: string;\n            }>;\n          }>;\n        }>;\n      };\n    };\n    json?: any;\n  }\n  metadata: {\n    title?: string;\n    description?: string;\n    language?: string;\n    keywords?: string;\n    robots?: string;\n    ogTitle?: string;\n    ogDescription?: string;\n    ogUrl?: string;\n    ogImage?: string;\n    ogAudio?: string;\n    ogDeterminer?: string;\n    ogLocale?: string;\n    ogLocaleAlternate?: string[];\n    ogSiteName?: string;\n    ogVideo?: string;\n    favicon?: string;\n    dcTermsCreated?: string;\n    dcDateCreated?: string;\n    dcDate?: string;\n    dcTermsType?: string;\n    dcType?: string;\n    dcTermsAudience?: string;\n    dcTermsSubject?: string;\n    dcSubject?: string;\n    dcDescription?: string;\n    dcTermsKeywords?: string;\n    modifiedTime?: string;\n    publishedTime?: string;\n    articleTag?: string;\n    articleSection?: string;\n    url?: string;\n    sourceURL?: string;\n    statusCode: number;\n    scrapeId?: string;\n    error?: string;\n    numPages?: number;\n    contentType?: string;\n    proxyUsed: \"basic\" | \"stealth\";\n    cacheState?: \"hit\" | \"miss\";\n    cachedAt?: string;\n    creditsUsed?: number;\n    // [key: string]: string | string[] | number | { smartScrape: number; other: number; total: number } | undefined;\n  };\n  serpResults?: {\n    title: string;\n    description: string;\n    url: string;\n  };\n};\n\nexport type ErrorResponse = {\n  success: false;\n  error: string;\n  details?: any;\n};\n\nexport type ScrapeResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    warning?: string;\n    data: Document;\n    scrape_id?: string;\n  };\n\nexport interface ScrapeResponseRequestTest {\n  statusCode: number;\n  body: ScrapeResponse;\n  error?: string;\n}\n\nexport interface URLTrace {\n  url: string;\n  status: \"mapped\" | \"scraped\" | \"error\";\n  timing: {\n    discoveredAt: string;\n    scrapedAt?: string;\n    completedAt?: string;\n  };\n  error?: string;\n  warning?: string;\n  contentStats?: {\n    rawContentLength: number;\n    processedContentLength: number;\n    tokensUsed: number;\n  };\n  relevanceScore?: number;\n  usedInCompletion?: boolean;\n  extractedFields?: string[];\n}\n\nexport interface ExtractResponse {\n  success: boolean;\n  error?: string;\n  data?: any;\n  scrape_id?: string;\n  id?: string;\n  warning?: string;\n  urlTrace?: URLTrace[];\n  sources?: {\n    [key: string]: string[];\n  };\n  tokensUsed?: number;\n}\n\nexport interface ExtractResponseRequestTest {\n  statusCode: number;\n  body: ExtractResponse;\n  error?: string;\n}\n\nexport type CrawlResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    id: string;\n    url: string;\n  };\n\nexport type BatchScrapeResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    id: string;\n    url: string;\n    invalidURLs?: string[];\n  };\n\nexport type MapResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    links: string[];\n    scrape_id?: string;\n  };\n\nexport type CrawlStatusParams = {\n  jobId: string;\n};\n\nexport type ConcurrencyCheckParams = {\n  teamId: string;\n};\n\nexport type ConcurrencyCheckResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    concurrency: number;\n    maxConcurrency: number;\n  };\n\nexport type CrawlStatusResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    status: \"scraping\" | \"completed\" | \"failed\" | \"cancelled\";\n    completed: number;\n    total: number;\n    creditsUsed: number;\n    expiresAt: string;\n    next?: string;\n    data: Document[];\n  };\n\nexport type OngoingCrawlsResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    crawls: {\n      id: string;\n      teamId: string;\n      url: string;\n      options: CrawlerOptions;\n    }[];\n  };\n\nexport type CrawlErrorsResponse =\n  | ErrorResponse\n  | {\n    errors: {\n      id: string;\n      timestamp?: string;\n      url: string;\n      error: string;\n    }[];\n    robotsBlocked: string[];\n  };\n\ntype AuthObject = {\n  team_id: string;\n};\n\ntype Account = {\n  remainingCredits: number;\n};\n\nexport type AuthCreditUsageChunk = {\n  api_key: string;\n  team_id: string;\n  sub_id: string | null;\n  sub_current_period_start: string | null;\n  sub_current_period_end: string | null;\n  sub_user_id: string | null;\n  price_id: string | null;\n  price_credits: number; // credit limit with assoicated price, or free_credits (500) if free plan\n  credits_used: number;\n  coupon_credits: number; // do not rely on this number to be up to date after calling a billTeam\n  adjusted_credits_used: number; // credits this period minus coupons used\n  remaining_credits: number;\n  total_credits_sum: number;\n  plan_priority: {\n    bucketLimit: number;\n    planModifier: number;\n  };\n  rate_limits: {\n    crawl: number;\n    scrape: number;\n    search: number;\n    map: number;\n    extract: number;\n    preview: number;\n    crawlStatus: number;\n    extractStatus: number;\n    extractAgentPreview?: number;\n    scrapeAgentPreview?: number;\n  };\n  concurrency: number;\n  flags: TeamFlags;\n\n  // appended on JS-side\n  is_extract?: boolean;\n};\n\nexport type TeamFlags = {\n  ignoreRobots?: boolean;\n  unblockedDomains?: string[];\n  forceZDR?: boolean;\n  allowZDR?: boolean;\n  zdrCost?: number;\n} | null;\n\nexport type AuthCreditUsageChunkFromTeam = Omit<AuthCreditUsageChunk, \"api_key\">;\n\nexport interface RequestWithMaybeACUC<\n  ReqParams = {},\n  ReqBody = undefined,\n  ResBody = undefined,\n> extends Request<ReqParams, ReqBody, ResBody> {\n  acuc?: AuthCreditUsageChunk;\n}\n\nexport interface RequestWithACUC<\n  ReqParams = {},\n  ReqBody = undefined,\n  ResBody = undefined,\n> extends Request<ReqParams, ReqBody, ResBody> {\n  acuc: AuthCreditUsageChunk;\n}\n\nexport interface RequestWithAuth<\n  ReqParams = {},\n  ReqBody = undefined,\n  ResBody = undefined,\n> extends Request<ReqParams, ReqBody, ResBody> {\n  auth: AuthObject;\n  account?: Account;\n}\n\nexport interface RequestWithMaybeAuth<\n  ReqParams = {},\n  ReqBody = undefined,\n  ResBody = undefined,\n> extends RequestWithMaybeACUC<ReqParams, ReqBody, ResBody> {\n  auth?: AuthObject;\n  account?: Account;\n}\n\nexport interface RequestWithAuth<\n  ReqParams = {},\n  ReqBody = undefined,\n  ResBody = undefined,\n> extends RequestWithACUC<ReqParams, ReqBody, ResBody> {\n  auth: AuthObject;\n  account?: Account;\n}\n\nexport interface ResponseWithSentry<ResBody = undefined>\n  extends Response<ResBody> {\n  sentry?: string;\n}\n\nexport function toLegacyCrawlerOptions(x: CrawlerOptions) {\n  return {\n    includes: x.includePaths,\n    excludes: x.excludePaths,\n    maxCrawledLinks: x.limit,\n    maxDepth: x.maxDepth,\n    limit: x.limit,\n    generateImgAltText: false,\n    allowBackwardCrawling: x.crawlEntireDomain ?? x.allowBackwardLinks,\n    allowExternalContentLinks: x.allowExternalLinks,\n    allowSubdomains: x.allowSubdomains,\n    ignoreRobotsTxt: x.ignoreRobotsTxt,\n    ignoreSitemap: x.ignoreSitemap,\n    deduplicateSimilarURLs: x.deduplicateSimilarURLs,\n    ignoreQueryParameters: x.ignoreQueryParameters,\n    regexOnFullURL: x.regexOnFullURL,\n    maxDiscoveryDepth: x.maxDiscoveryDepth,\n    currentDiscoveryDepth: 0,\n    delay: x.delay,\n  };\n}\n\nexport function toNewCrawlerOptions(x: any): CrawlerOptions {\n  return {\n    includePaths: x.includes,\n    excludePaths: x.excludes,\n    limit: x.limit,\n    maxDepth: x.maxDepth,\n    allowBackwardLinks: x.allowBackwardCrawling,\n    crawlEntireDomain: x.allowBackwardCrawling,\n    allowExternalLinks: x.allowExternalContentLinks,\n    allowSubdomains: x.allowSubdomains,\n    ignoreRobotsTxt: x.ignoreRobotsTxt,\n    ignoreSitemap: x.ignoreSitemap,\n    deduplicateSimilarURLs: x.deduplicateSimilarURLs,\n    ignoreQueryParameters: x.ignoreQueryParameters,\n    regexOnFullURL: x.regexOnFullURL,\n    maxDiscoveryDepth: x.maxDiscoveryDepth,\n    delay: x.delay,\n  }\n}\n\nexport function fromLegacyCrawlerOptions(x: any, teamId: string): {\n  crawlOptions: CrawlerOptions;\n  internalOptions: InternalOptions;\n} {\n  return {\n    crawlOptions: crawlerOptions.parse({\n      includePaths: x.includes,\n      excludePaths: x.excludes,\n      limit: x.maxCrawledLinks ?? x.limit,\n      maxDepth: x.maxDepth,\n      allowBackwardLinks: x.allowBackwardCrawling,\n      crawlEntireDomain: x.allowBackwardCrawling,\n      allowExternalLinks: x.allowExternalContentLinks,\n      allowSubdomains: x.allowSubdomains,\n      ignoreRobotsTxt: x.ignoreRobotsTxt,\n      ignoreSitemap: x.ignoreSitemap,\n      deduplicateSimilarURLs: x.deduplicateSimilarURLs,\n      ignoreQueryParameters: x.ignoreQueryParameters,\n      regexOnFullURL: x.regexOnFullURL,\n      maxDiscoveryDepth: x.maxDiscoveryDepth,\n      delay: x.delay,\n    }),\n    internalOptions: {\n      v0CrawlOnlyUrls: x.returnOnlyUrls,\n      teamId,\n    },\n  };\n}\n\nexport interface MapDocument {\n  url: string;\n  title?: string;\n  description?: string;\n}\nexport function fromLegacyScrapeOptions(\n  pageOptions: PageOptions,\n  extractorOptions: ExtractorOptions | undefined,\n  timeout: number | undefined,\n  teamId: string,\n): { scrapeOptions: ScrapeOptions; internalOptions: InternalOptions } {\n  return {\n    scrapeOptions: scrapeOptions.parse({\n      formats: [\n        (pageOptions.includeMarkdown ?? true) ? (\"markdown\" as const) : null,\n        (pageOptions.includeHtml ?? false) ? (\"html\" as const) : null,\n        (pageOptions.includeRawHtml ?? false) ? (\"rawHtml\" as const) : null,\n        (pageOptions.screenshot ?? false) ? (\"screenshot\" as const) : null,\n        (pageOptions.fullPageScreenshot ?? false)\n          ? (\"screenshot@fullPage\" as const)\n          : null,\n        extractorOptions !== undefined &&\n          extractorOptions.mode.includes(\"llm-extraction\")\n          ? (\"extract\" as const)\n          : null,\n        \"links\",\n      ].filter((x) => x !== null),\n      waitFor: pageOptions.waitFor,\n      headers: pageOptions.headers,\n      includeTags:\n        typeof pageOptions.onlyIncludeTags === \"string\"\n          ? [pageOptions.onlyIncludeTags]\n          : pageOptions.onlyIncludeTags,\n      excludeTags:\n        typeof pageOptions.removeTags === \"string\"\n          ? [pageOptions.removeTags]\n          : pageOptions.removeTags,\n      onlyMainContent: pageOptions.onlyMainContent ?? false,\n      timeout: timeout,\n      parsePDF: pageOptions.parsePDF,\n      actions: pageOptions.actions,\n      location: pageOptions.geolocation,\n      skipTlsVerification: pageOptions.skipTlsVerification,\n      removeBase64Images: pageOptions.removeBase64Images,\n      extract:\n        extractorOptions !== undefined &&\n          extractorOptions.mode.includes(\"llm-extraction\")\n          ? {\n            systemPrompt: extractorOptions.extractionPrompt,\n            prompt: extractorOptions.userPrompt,\n            schema: extractorOptions.extractionSchema,\n          }\n          : undefined,\n      mobile: pageOptions.mobile,\n      fastMode: pageOptions.useFastMode,\n    }),\n    internalOptions: {\n      atsv: pageOptions.atsv,\n      v0DisableJsDom: pageOptions.disableJsDom,\n      teamId,\n    },\n    // TODO: fallback, fetchPageContent, replaceAllPathsWithAbsolutePaths, includeLinks\n  };\n}\n\nexport function fromLegacyCombo(\n  pageOptions: PageOptions,\n  extractorOptions: ExtractorOptions | undefined,\n  timeout: number | undefined,\n  crawlerOptions: any,\n  teamId: string,\n): { scrapeOptions: ScrapeOptions; internalOptions: InternalOptions } {\n  const { scrapeOptions, internalOptions: i1 } = fromLegacyScrapeOptions(\n    pageOptions,\n    extractorOptions,\n    timeout,\n    teamId,\n  );\n  const { internalOptions: i2 } = fromLegacyCrawlerOptions(crawlerOptions, teamId);\n  return { scrapeOptions, internalOptions: Object.assign(i1, i2) };\n}\n\nexport function toLegacyDocument(\n  document: Document,\n  internalOptions: InternalOptions,\n): V0Document | { url: string } {\n  if (internalOptions.v0CrawlOnlyUrls) {\n    return { url: document.metadata.sourceURL! };\n  }\n\n  return {\n    content: document.markdown!,\n    markdown: document.markdown!,\n    html: document.html,\n    rawHtml: document.rawHtml,\n    linksOnPage: document.links,\n    llm_extraction: document.extract,\n    metadata: {\n      ...document.metadata,\n      error: undefined,\n      statusCode: undefined,\n      pageError: document.metadata.error,\n      pageStatusCode: document.metadata.statusCode,\n      screenshot: document.screenshot,\n    },\n    actions: document.actions,\n    warning: document.warning,\n  };\n}\n\nexport const searchRequestSchema = z\n  .object({\n    query: z.string(),\n    limit: z\n      .number()\n      .int()\n      .positive()\n      .finite()\n      .safe()\n      .max(100)\n      .optional()\n      .default(5),\n    tbs: z.string().optional(),\n    filter: z.string().optional(),\n    lang: z.string().optional().default(\"en\"),\n    country: z.string().optional().default(\"us\"),\n    location: z.string().optional(),\n    origin: z.string().optional().default(\"api\"),\n    integration: z.nativeEnum(IntegrationEnum).optional().transform(val => val || null),\n    timeout: z.number().int().positive().finite().safe().default(60000),\n    ignoreInvalidURLs: z.boolean().optional().default(false),\n    __searchPreviewToken: z.string().optional(),\n    scrapeOptions: baseScrapeOptions\n      .extend({\n        formats: z\n          .array(\n            z.enum([\n              \"markdown\",\n              \"html\",\n              \"rawHtml\",\n              \"links\",\n              \"screenshot\",\n              \"screenshot@fullPage\",\n              \"extract\",\n              \"json\",\n            ]),\n          )\n          .default([]),\n      })\n      .default({}),\n  })\n  .strict(\n    \"Unrecognized key in body -- please review the v1 API documentation for request body changes\",\n  )\n  .refine((x) => extractRefine(x.scrapeOptions), extractRefineOpts)\n  .refine((x) => fire1Refine(x.scrapeOptions), fire1RefineOpts)\n  .transform((x) => ({\n    ...x,\n    scrapeOptions: extractTransform(x.scrapeOptions),\n  }));\n\nexport type SearchRequest = z.infer<typeof searchRequestSchema>;\nexport type SearchRequestInput = z.input<typeof searchRequestSchema>;\n\nexport type SearchResponse =\n  | ErrorResponse\n  | {\n    success: true;\n    warning?: string;\n    data: Document[];\n  };\n\nexport type TokenUsage = {\n  promptTokens: number;\n  completionTokens: number;\n  totalTokens: number;\n  step?: string;\n  model?: string;\n};\n\nexport const generateLLMsTextRequestSchema = z.object({\n  url: url.describe(\"The URL to generate text from\"),\n  maxUrls: z\n    .number()\n    .min(1)\n    .max(5000)\n    .default(10)\n    .describe(\"Maximum number of URLs to process\"),\n  showFullText: z\n    .boolean()\n    .default(false)\n    .describe(\"Whether to show the full LLMs-full.txt in the response\"),\n  cache: z\n    .boolean()\n    .default(true)\n    .describe(\"Whether to use cached content if available\"),\n  __experimental_stream: z.boolean().optional(),\n});\n\nexport type GenerateLLMsTextRequest = z.infer<\n  typeof generateLLMsTextRequestSchema\n>;\n\nexport class TimeoutSignal extends Error {\n  constructor() {\n    super(\"Operation timed out\");\n  }\n}\n"]}