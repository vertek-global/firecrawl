{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../../src/controllers/v1/search.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response } from \"express\";\nimport {\n  Document,\n  RequestWithAuth,\n  SearchRequest,\n  SearchResponse,\n  searchRequestSchema,\n  ScrapeOptions,\n  TeamFlags,\n} from \"./types\";\nimport { billTeam } from \"../../services/billing/credit_billing\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addScrapeJob, waitForJob } from \"../../services/queue-jobs\";\nimport { logJob } from \"../../services/logging/log_job\";\nimport { getJobPriority } from \"../../lib/job-priority\";\nimport { Mode } from \"../../types\";\nimport { getScrapeQueue } from \"../../services/queue-service\";\nimport { search } from \"../../search\";\nimport { isUrlBlocked } from \"../../scraper/WebScraper/utils/blocklist\";\nimport * as Sentry from \"@sentry/node\";\nimport { BLOCKLISTED_URL_MESSAGE } from \"../../lib/strings\";\nimport { logger as _logger } from \"../../lib/logger\";\nimport type { Logger } from \"winston\";\nimport { CostTracking } from \"../../lib/extract/extraction-service\";\n\n// Used for deep research\nexport async function searchAndScrapeSearchResult(\n  query: string,\n  options: {\n    teamId: string;\n    origin: string;\n    timeout: number;\n    scrapeOptions: ScrapeOptions;\n  },\n  logger: Logger,\n  costTracking: CostTracking,\n  flags: TeamFlags,\n): Promise<Document[]> {\n  try {\n    const searchResults = await search({\n      query,\n      num_results: 5,\n    });\n\n    const documents = await Promise.all(\n      searchResults.map((result) =>\n        scrapeSearchResult(\n          {\n            url: result.url,\n            title: result.title,\n            description: result.description,\n          },\n          options,\n          logger,\n          costTracking,\n          flags,\n        ),\n      ),\n    );\n\n    return documents;\n  } catch (error) {\n    return [];\n  }\n}\n\nasync function scrapeSearchResult(\n  searchResult: { url: string; title: string; description: string },\n  options: {\n    teamId: string;\n    origin: string;\n    timeout: number;\n    scrapeOptions: ScrapeOptions;\n  },\n  logger: Logger,\n  costTracking: CostTracking,\n  flags: TeamFlags,\n  directToBullMQ: boolean = false,\n  isSearchPreview: boolean = false,\n): Promise<Document> {\n  const jobId = uuidv4();\n  const jobPriority = await getJobPriority({\n    team_id: options.teamId,\n    basePriority: 10,\n  });\n\n  const zeroDataRetention = flags?.forceZDR ?? false;\n\n  try {\n    if (isUrlBlocked(searchResult.url, flags)) {\n      throw new Error(\"Could not scrape url: \" + BLOCKLISTED_URL_MESSAGE);\n    }\n    logger.info(\"Adding scrape job\", {\n      scrapeId: jobId,\n      url: searchResult.url,\n      teamId: options.teamId,\n      origin: options.origin,\n      zeroDataRetention,\n    });\n    await addScrapeJob(\n      {\n        url: searchResult.url,\n        mode: \"single_urls\" as Mode,\n        team_id: options.teamId,\n        scrapeOptions: {\n          ...options.scrapeOptions,\n          maxAge: 3 * 24 * 60 * 60 * 1000, // 3 days\n        },\n        internalOptions: { teamId: options.teamId, bypassBilling: true, zeroDataRetention },\n        origin: options.origin,\n        is_scrape: true,\n        startTime: Date.now(),\n        zeroDataRetention,\n      },\n      {},\n      jobId,\n      jobPriority,\n      directToBullMQ,\n    );\n\n    const doc: Document = await waitForJob(jobId, options.timeout);\n\n    logger.info(\"Scrape job completed\", {\n      scrapeId: jobId,\n      url: searchResult.url,\n      teamId: options.teamId,\n      origin: options.origin,\n    });\n    await getScrapeQueue().remove(jobId);\n\n    // Move SERP results to top level\n    return {\n      title: searchResult.title,\n      description: searchResult.description,\n      url: searchResult.url,\n      ...doc,\n    };\n  } catch (error) {\n    logger.error(`Error in scrapeSearchResult: ${error}`, {\n      scrapeId: jobId,\n      url: searchResult.url,\n      teamId: options.teamId,\n    });\n\n    let statusCode = 0;\n    if (error?.message?.includes(\"Could not scrape url\")) {\n      statusCode = 403;\n    }\n    // Return a minimal document with SERP results at top level\n    return {\n      title: searchResult.title,\n      description: searchResult.description,\n      url: searchResult.url,\n      metadata: {\n        statusCode,\n        error: error.message,\n        proxyUsed: \"basic\",\n      },\n    };\n  }\n}\n\nexport async function searchController(\n  req: RequestWithAuth<{}, SearchResponse, SearchRequest>,\n  res: Response<SearchResponse>,\n) {\n  const jobId = uuidv4();\n  let logger = _logger.child({\n    jobId,\n    teamId: req.auth.team_id,\n    module: \"search\",\n    method: \"searchController\",\n    zeroDataRetention: req.acuc?.flags?.forceZDR,\n  });\n\n  if (req.acuc?.flags?.forceZDR) {\n    return res.status(400).json({ success: false, error: \"Your team has zero data retention enabled. This is not supported on search. Please contact support@firecrawl.com to unblock this feature.\" });\n  }\n\n  let responseData: SearchResponse = {\n    success: true,\n    data: [],\n  };\n  const startTime = new Date().getTime();\n  const costTracking = new CostTracking();\n  const isSearchPreview = process.env.SEARCH_PREVIEW_TOKEN !== undefined && process.env.SEARCH_PREVIEW_TOKEN === req.body.__searchPreviewToken;\n\n  try {\n    req.body = searchRequestSchema.parse(req.body);\n\n    logger = logger.child({\n      query: req.body.query,\n      origin: req.body.origin,\n    });\n\n    let limit = req.body.limit;\n\n    // Buffer results by 50% to account for filtered URLs\n    const num_results_buffer = Math.floor(limit * 2);\n\n    logger.info(\"Searching for results\");\n\n    let searchResults = await search({\n      query: req.body.query,\n      advanced: false,\n      num_results: num_results_buffer,\n      tbs: req.body.tbs,\n      filter: req.body.filter,\n      lang: req.body.lang,\n      country: req.body.country,\n      location: req.body.location,\n    });\n\n    if (req.body.ignoreInvalidURLs) {\n      searchResults = searchResults.filter(\n        (result) => !isUrlBlocked(result.url, req.acuc?.flags ?? null),\n      );\n    }\n\n    logger.info(\"Searching completed\", {\n      num_results: searchResults.length,\n    });\n\n    // Filter blocked URLs early to avoid unnecessary billing\n    if (searchResults.length > limit) {\n      searchResults = searchResults.slice(0, limit);\n    }\n\n    if (searchResults.length === 0) {\n      logger.info(\"No search results found\");\n      responseData.warning = \"No search results found\";\n    } else if (\n      !req.body.scrapeOptions.formats ||\n      req.body.scrapeOptions.formats.length === 0\n    ) {\n      responseData.data = searchResults.map((r) => ({\n        url: r.url,\n        title: r.title,\n        description: r.description,\n      })) as Document[];\n    } else {\n      logger.info(\"Scraping search results\");\n      const scrapePromises = searchResults.map((result) =>\n        scrapeSearchResult(\n          result,\n          {\n            teamId: req.auth.team_id,\n            origin: req.body.origin,\n            timeout: req.body.timeout,\n            scrapeOptions: req.body.scrapeOptions,\n          },\n          logger,\n          costTracking,\n          req.acuc?.flags ?? null,\n          (req.acuc?.price_credits ?? 0) <= 3000,\n          isSearchPreview,\n        ),\n      );\n\n      const docs = await Promise.all(scrapePromises);\n      logger.info(\"Scraping completed\", {\n        num_docs: docs.length,\n      });\n\n      const filteredDocs = docs.filter(\n        (doc) =>\n          doc.serpResults || (doc.markdown && doc.markdown.trim().length > 0),\n      );\n\n      logger.info(\"Filtering completed\", {\n        num_docs: filteredDocs.length,\n      });\n\n      if (filteredDocs.length === 0) {\n        responseData.data = docs;\n        responseData.warning = \"No content found in search results\";\n      } else {\n        responseData.data = filteredDocs;\n      }\n    }\n\n    // TODO: This is horrid. Fix soon - mogery\n    const credits_billed = responseData.data.reduce((a, x) => {\n      if (x.metadata?.numPages !== undefined && x.metadata.numPages > 0 && req.body.scrapeOptions?.parsePDF !== false) {\n        return a + x.metadata.numPages;\n      } else {\n        return a + 1;\n      }\n    }, 0)\n\n    // Bill team once for all successful results\n    if (!isSearchPreview) {\n      billTeam(\n        req.auth.team_id,\n        req.acuc?.sub_id,\n        credits_billed,\n      ).catch((error) => {\n        logger.error(\n          `Failed to bill team ${req.auth.team_id} for ${responseData.data.length} credits: ${error}`,\n        );\n      });\n    }\n\n    const endTime = new Date().getTime();\n    const timeTakenInSeconds = (endTime - startTime) / 1000;\n\n    logger.info(\"Logging job\", {\n      num_docs: responseData.data.length,\n      time_taken: timeTakenInSeconds,\n    });\n\n    logJob(\n      {\n        job_id: jobId,\n        success: true,\n        num_docs: responseData.data.length,\n        docs: responseData.data,\n        time_taken: timeTakenInSeconds,\n        team_id: req.auth.team_id,\n        mode: \"search\",\n        url: req.body.query,\n        scrapeOptions: req.body.scrapeOptions,\n        origin: req.body.origin,\n        integration: req.body.integration,\n        cost_tracking: costTracking,\n        credits_billed,\n        zeroDataRetention: false, // not supported\n      },\n      false,\n      isSearchPreview,\n    );\n\n    return res.status(200).json(responseData);\n  } catch (error) {\n    if (\n      error instanceof Error &&\n      (error.message.startsWith(\"Job wait\") || error.message === \"timeout\")\n    ) {\n      return res.status(408).json({\n        success: false,\n        error: \"Request timed out\",\n      });\n    }\n\n    Sentry.captureException(error);\n    logger.error(\"Unhandled error occurred in search\", { error });\n    return res.status(500).json({\n      success: false,\n      error: error.message,\n    });\n  }\n}\n"]}