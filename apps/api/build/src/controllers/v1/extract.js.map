{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../src/controllers/v1/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport {\n  RequestWithAuth,\n  ExtractRequest,\n  extractRequestSchema,\n  ExtractResponse,\n} from \"./types\";\nimport { getExtractQueue } from \"../../services/queue-service\";\nimport * as Sentry from \"@sentry/node\";\nimport { saveExtract } from \"../../lib/extract/extract-redis\";\nimport { getTeamIdSyncB } from \"../../lib/extract/team-id-sync\";\nimport { performExtraction } from \"../../lib/extract/extraction-service\";\nimport { performExtraction_F0 } from \"../../lib/extract/fire-0/extraction-service-f0\";\nimport { BLOCKLISTED_URL_MESSAGE } from \"../../lib/strings\";\nimport { isUrlBlocked } from \"../../scraper/WebScraper/utils/blocklist\";\nimport { logger as _logger } from \"../../lib/logger\";\n\nexport async function oldExtract(\n  req: RequestWithAuth<{}, ExtractResponse, ExtractRequest>,\n  res: Response<ExtractResponse>,\n  extractId: string,\n) {\n  // Means that are in the non-queue system\n  // TODO: Remove this once all teams have transitioned to the new system\n  try {\n    let result;\n    const model = req.body.agent?.model\n    if (req.body.agent && model && model.toLowerCase().includes(\"fire-1\")) {\n      result = await performExtraction(extractId, {\n        request: req.body,\n        teamId: req.auth.team_id,\n        subId: req.acuc?.sub_id ?? undefined,\n      });\n    } else {\n      result = await performExtraction_F0(extractId, {\n        request: req.body,\n        teamId: req.auth.team_id,\n        subId: req.acuc?.sub_id ?? undefined,\n      });\n    }\n\n    return res.status(200).json(result);\n  } catch (error) {\n    return res.status(500).json({\n      success: false,\n      error: \"Internal server error\",\n    });\n  }\n}\n/**\n * Extracts data from the provided URLs based on the request parameters.\n * Currently in beta.\n * @param req - The request object containing authentication and extraction details.\n * @param res - The response object to send the extraction results.\n * @returns A promise that resolves when the extraction process is complete.\n */\nexport async function extractController(\n  req: RequestWithAuth<{}, ExtractResponse, ExtractRequest>,\n  res: Response<ExtractResponse>,\n) {\n  const selfHosted = process.env.USE_DB_AUTHENTICATION !== \"true\";\n  const originalRequest = { ...req.body };\n  req.body = extractRequestSchema.parse(req.body);\n\n  if (req.acuc?.flags?.forceZDR) {\n    return res.status(400).json({ success: false, error: \"Your team has zero data retention enabled. This is not supported on extract. Please contact support@firecrawl.com to unblock this feature.\" });\n  }\n\n  const invalidURLs: string[] = req.body.urls?.filter((url: string) => isUrlBlocked(url, req.acuc?.flags ?? null)) ?? [];\n\n  if (invalidURLs.length > 0 && !req.body.ignoreInvalidURLs) {\n    if (!res.headersSent) {\n      return res.status(403).json({\n        success: false,\n        error: BLOCKLISTED_URL_MESSAGE,\n      });\n    }\n  }\n\n  const extractId = crypto.randomUUID();\n\n  _logger.info(\"Extract starting...\", {\n    request: req.body,\n    originalRequest,\n    teamId: req.auth.team_id,\n    team_id: req.auth.team_id,\n    subId: req.acuc?.sub_id,\n    extractId,\n    zeroDataRetention: req.acuc?.flags?.forceZDR,\n  });\n\n  const jobData = {\n    request: req.body,\n    teamId: req.auth.team_id,\n    subId: req.acuc?.sub_id,\n    extractId,\n    agent: req.body.agent,\n  };\n\n  if (\n    (await getTeamIdSyncB(req.auth.team_id)) &&\n    req.body.origin !== \"api-sdk\" &&\n    req.body.origin !== \"website\" &&\n    !req.body.origin.startsWith(\"python-sdk@\") &&\n    !req.body.origin.startsWith(\"js-sdk@\")\n  ) {\n    return await oldExtract(req, res, extractId);\n  }\n\n  await saveExtract(extractId, {\n    id: extractId,\n    team_id: req.auth.team_id,\n    createdAt: Date.now(),\n    status: \"processing\",\n    showSteps: req.body.__experimental_streamSteps,\n    showLLMUsage: req.body.__experimental_llmUsage,\n    showSources: req.body.__experimental_showSources || req.body.showSources,\n    showCostTracking: req.body.__experimental_showCostTracking,\n    zeroDataRetention: req.acuc?.flags?.forceZDR,\n  });\n\n  if (Sentry.isInitialized()) {\n    const size = JSON.stringify(jobData).length;\n    await Sentry.startSpan(\n      {\n        name: \"Add extract job\",\n        op: \"queue.publish\",\n        attributes: {\n          \"messaging.message.id\": extractId,\n          \"messaging.destination.name\": getExtractQueue().name,\n          \"messaging.message.body.size\": size,\n        },\n      },\n      async (span) => {\n        await getExtractQueue().add(extractId, {\n          ...jobData,\n          sentry: {\n            trace: Sentry.spanToTraceHeader(span),\n            baggage: Sentry.spanToBaggageHeader(span),\n            size,\n          },\n        }, { jobId: extractId });\n      },\n    );\n  } else {\n    await getExtractQueue().add(extractId, jobData, {\n      jobId: extractId,\n    });\n  }\n\n  return res.status(200).json({\n    success: true,\n    id: extractId,\n    urlTrace: [],\n    ...(invalidURLs.length > 0 && req.body.ignoreInvalidURLs ? {\n      invalidURLs,\n    } : {}),\n  });\n}\n"]}