{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../../src/controllers/auth.ts"],"names":[],"mappings":";;AAqCA,sCAmCC;AAwED,0BAkFC;AAED,8CAmCC;AAED,kCA8EC;AAED,8BAYC;AAED,sCAYC;AAED,4CAUC;AAED,oDA6IC;AA9gBD,8CAA2C;AAC3C,2DAA0D;AAC1D,oCAIkB;AAClB,mDAA6E;AAC7E,8CAA2C;AAG3C,0CAAuC;AACvC,iDAA8C;AAC9C,6CAAwD;AACxD,6CAA6C;AAC7C,+BAAgC;AAGhC,iDAAiD;AACjD,wBAAwB;AACxB,gBAAgB;AAChB,aAAa;AACb,iBAAiB;AACjB,gBAAgB;AAChB,0BAA0B;AAC1B,qBAAqB;AACrB,YAAY;AACZ,UAAU;AACV,SAAS;AACT,gCAAgC;AAChC,gBAAgB;AAChB,iBAAiB;AACjB,SAAS,mBAAmB,CAAC,aAAqB;IAChD,sCAAsC;IACtC,OAAO,IAAA,eAAQ,EAAC,aAAa,CAAC,CAAC;AACjC,CAAC;AAEM,KAAK,UAAU,aAAa,CACjC,OAAe,EACf,UAAmB,EACnB,IAGiE;IAEjE,MAAM,YAAY,GAAG,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC5E,MAAM,UAAU,GAAG,QAAQ,YAAY,EAAE,CAAC;IAE1C,IAAI,CAAC;QACH,MAAM,iBAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;YAC5D,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE,CAAC;gBAC/B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAA,gBAAQ,EAAC,YAAY,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBAElE,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;oBAClB,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;wBACnB,MAAM,MAAM,CAAC,KAAK,CAAC;oBACrB,CAAC;oBAED,OAAO;gBACT,CAAC;YACH,CAAC;YAED,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnB,MAAM,MAAM,CAAC,KAAK,CAAC;YACrB,CAAC;YAED,iCAAiC;YACjC,MAAM,IAAA,gBAAQ,EAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,8BAA8B,YAAY,KAAK,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;AACH,CAAC;AAED,MAAM,eAAe,GAAmE,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;IAChH,OAAO,EAAE,SAAS;IAClB,OAAO;IACP,MAAM,EAAE,IAAI;IACZ,wBAAwB,EAAE,IAAI;IAC9B,sBAAsB,EAAE,IAAI;IAC5B,WAAW,EAAE,IAAI;IACjB,QAAQ,EAAE,IAAI;IACd,WAAW,EAAE;QACX,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,EAAE;QACV,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,CAAC;QACT,GAAG,EAAE,CAAC;QACN,OAAO,EAAE,CAAC;QACV,WAAW,EAAE,GAAG;QAChB,aAAa,EAAE,GAAG;QAClB,mBAAmB,EAAE,CAAC;QACtB,kBAAkB,EAAE,CAAC;KACtB;IACD,aAAa,EAAE,QAAQ;IACvB,YAAY,EAAE,CAAC;IACf,cAAc,EAAE,QAAQ;IACxB,qBAAqB,EAAE,CAAC;IACxB,iBAAiB,EAAE,QAAQ;IAC3B,iBAAiB,EAAE,QAAQ;IAC3B,aAAa,EAAE;QACb,WAAW,EAAE,EAAE;QACf,YAAY,EAAE,GAAG;KAClB;IACD,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,KAAK,EAAE,IAAI;IACX,UAAU;CACX,CAAC,CAAC;AAEH,MAAM,QAAQ,GAA+B,GAAG,EAAE,CAAC,CAAC;IAClD,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,QAAQ;IACjB,MAAM,EAAE,QAAQ;IAChB,wBAAwB,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;IAClD,sBAAsB,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE;IAC/F,WAAW,EAAE,QAAQ;IACrB,QAAQ,EAAE,QAAQ;IAClB,WAAW,EAAE;QACX,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,QAAQ;QACjB,MAAM,EAAE,QAAQ;QAChB,GAAG,EAAE,QAAQ;QACb,OAAO,EAAE,QAAQ;QACjB,WAAW,EAAE,QAAQ;QACrB,aAAa,EAAE,QAAQ;QACvB,mBAAmB,EAAE,QAAQ;QAC7B,kBAAkB,EAAE,QAAQ;KAC7B;IACD,aAAa,EAAE,QAAQ;IACvB,YAAY,EAAE,CAAC;IACf,cAAc,EAAE,QAAQ;IACxB,qBAAqB,EAAE,CAAC;IACxB,iBAAiB,EAAE,QAAQ;IAC3B,iBAAiB,EAAE,QAAQ;IAC3B,aAAa,EAAE;QACb,WAAW,EAAE,EAAE;QACf,YAAY,EAAE,GAAG;KAClB;IACD,WAAW,EAAE,QAAQ;IACrB,KAAK,EAAE,IAAI;IACX,UAAU,EAAE,KAAK;CAClB,CAAC,CAAC;AAEI,KAAK,UAAU,OAAO,CAC3B,OAAe,EACf,SAAS,GAAG,KAAK,EACjB,QAAQ,GAAG,IAAI,EACf,IAAsB;IAEtB,IAAI,SAAS,GACT,IAAI,KAAK,uBAAe,CAAC,OAAO;QAChC,IAAI,KAAK,uBAAe,CAAC,aAAa;QACtC,IAAI,KAAK,uBAAe,CAAC,mBAAmB,CAAC;IAEjD,IAAI,OAAO,KAAK,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC1C,MAAM,IAAI,GAAG,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,MAAM,EAAE,CAAC;QACjD,MAAM,IAAI,GAAG,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,YAAY,GAAG,QAAQ,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE3E,IAAI,QAAQ,EAAE,CAAC;QACb,MAAM,UAAU,GAAG,MAAM,IAAA,gBAAQ,EAAC,YAAY,CAAC,CAAC;QAChD,IAAI,UAAU,KAAK,IAAI,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IAED,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,CAAC;QACV,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,OAAO,OAAO,GAAG,UAAU,EAAE,CAAC;YAC5B,MAAM,MAAM,GACV,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8BAAmB,CAAC,CAAC,CAAC,2BAAgB,CAAC;YACjE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,GAAG,CACjC,4BAA4B,EAC5B,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAC9E,EAAE,GAAG,EAAE,IAAI,EAAE,CACd,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,MAAM;YACR,CAAC;YAED,eAAM,CAAC,IAAI,CACT,iEAAiE,OAAO,mBAAmB,EAC3F,EAAE,KAAK,EAAE,CACV,CAAC;YACF,OAAO,EAAE,CAAC;YACV,IAAI,OAAO,KAAK,UAAU,EAAE,CAAC;gBAC3B,MAAM,IAAI,KAAK,CACb,4EAA4E;oBAC1E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CACxB,CAAC;YACJ,CAAC;YAED,wCAAwC;YACxC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,KAAK,GACT,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEvE,IAAI,KAAK,EAAE,CAAC;YACV,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;QAC/B,CAAC;QAED,8CAA8C;QAC9C,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,EAAE,CAAC;YAC/B,aAAa,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;SAAM,CAAC;QACN,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,iBAAiB,CACrC,OAAe,EACf,UAAmB,EACnB,IAGiF;IAEjF,MAAM,YAAY,GAAG,aAAa,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACjF,MAAM,UAAU,GAAG,QAAQ,YAAY,EAAE,CAAC;IAE1C,IAAI,CAAC;QACH,MAAM,iBAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;YAC5D,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE,CAAC;gBAC/B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAA,gBAAQ,EAAC,YAAY,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBAElE,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;oBAClB,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;wBACnB,MAAM,MAAM,CAAC,KAAK,CAAC;oBACrB,CAAC;oBAED,OAAO;gBACT,CAAC;YACH,CAAC;YAED,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnB,MAAM,MAAM,CAAC,KAAK,CAAC;YACrB,CAAC;YAED,iCAAiC;YACjC,MAAM,IAAA,gBAAQ,EAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,8BAA8B,YAAY,KAAK,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,WAAW,CAC/B,OAAe,EACf,SAAS,GAAG,KAAK,EACjB,QAAQ,GAAG,IAAI,EACf,IAAsB;IAEtB,IAAI,SAAS,GACT,IAAI,KAAK,uBAAe,CAAC,OAAO;QAChC,IAAI,KAAK,uBAAe,CAAC,aAAa;QACtC,IAAI,KAAK,uBAAe,CAAC,mBAAmB,CAAC;IAEjD,IAAI,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QAClC,MAAM,IAAI,GAAG,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,MAAM,EAAE,CAAC;QACjD,MAAM,IAAI,GAAG,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,YAAY,GAAG,aAAa,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAEhF,IAAI,QAAQ,EAAE,CAAC;QACb,MAAM,UAAU,GAAG,MAAM,IAAA,gBAAQ,EAAC,YAAY,CAAC,CAAC;QAChD,IAAI,UAAU,KAAK,IAAI,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IAED,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,CAAC;QACV,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,MAAM,UAAU,GAAG,CAAC,CAAC;QAErB,OAAO,OAAO,GAAG,UAAU,EAAE,CAAC;YAC5B,MAAM,MAAM,GACV,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8BAAmB,CAAC,CAAC,CAAC,2BAAgB,CAAC;YACjE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,GAAG,CACjC,sCAAsC,EACtC,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAC/E,EAAE,GAAG,EAAE,IAAI,EAAE,CACd,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,MAAM;YACR,CAAC;YAED,eAAM,CAAC,IAAI,CACT,iEAAiE,OAAO,mBAAmB,EAC3F,EAAE,KAAK,EAAE,CACV,CAAC;YACF,OAAO,EAAE,CAAC;YACV,IAAI,OAAO,KAAK,UAAU,EAAE,CAAC;gBAC3B,MAAM,IAAI,KAAK,CACb,4EAA4E;oBAC1E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CACxB,CAAC;YACJ,CAAC;YAED,wCAAwC;YACxC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,KAAK,GACT,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEvE,8CAA8C;QAC9C,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,EAAE,CAAC;YAC/B,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC;QAED,OAAO,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5D,CAAC;SAAM,CAAC;QACN,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,SAAS,CAAC,OAAe;IAC7C,0CAA0C;IAC1C,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5B,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QACvB,MAAM,QAAQ,GAAG,QAAQ,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAClE,MAAM,IAAA,iBAAS,EAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH,CAAC;IAEF,gCAAgC;IAChC,MAAM,IAAA,iBAAS,EAAC,QAAQ,OAAO,EAAE,CAAC,CAAC;AACrC,CAAC;AAEM,KAAK,UAAU,aAAa,CAAC,OAAe;IACjD,0CAA0C;IAC1C,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5B,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QACvB,MAAM,QAAQ,GAAG,aAAa,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvE,MAAM,IAAA,iBAAS,EAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH,CAAC;IAEF,gCAAgC;IAChC,MAAM,IAAA,iBAAS,EAAC,aAAa,OAAO,EAAE,CAAC,CAAC;AAC1C,CAAC;AAEM,KAAK,UAAU,gBAAgB,CACpC,GAAG,EACH,GAAG,EACH,IAAsB;IAEtB,OAAO,IAAA,mBAAQ,EAAC,oBAAoB,EAAE;QACpC,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,QAAQ;KAClB,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACrB,CAAC;AAEM,KAAK,UAAU,oBAAoB,CACxC,GAAG,EACH,GAAG,EACH,IAAsB;IAEtB,MAAM,UAAU,GACd,GAAG,CAAC,OAAO,CAAC,aAAa;QACzB,CAAC,GAAG,CAAC,OAAO,CAAC,wBAAwB,CAAC;YACpC,CAAC,CAAC,UAAU,GAAG,CAAC,OAAO,CAAC,wBAAwB,CAAC,EAAE;YACnD,CAAC,CAAC,IAAI,CAAC,CAAC;IACZ,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IAChE,CAAC;IACD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,0CAA0C;IAClF,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,6BAA6B;YACpC,MAAM,EAAE,GAAG;SACZ,CAAC;IACJ,CAAC;IAED,MAAM,UAAU,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC;QAC/E,GAAG,CAAC,MAAM,CAAC,aAAa,CAAW,CAAC;IACtC,MAAM,OAAO,GAAG,UAAU,GAAG,KAAK,CAAC;IAEnC,IAAI,WAA6B,CAAC;IAClC,IAAI,gBAAgB,GAA8B,IAAI,CAAC;IACvD,IAAI,aAAqB,CAAC;IAE1B,IAAI,MAAM,GAAkB,IAAI,CAAC;IACjC,IAAI,OAAO,GAAkB,IAAI,CAAC;IAClC,IAAI,KAAK,GAAgC,IAAI,CAAC;IAC9C,IAAI,KAAK,IAAI,8BAA8B,EAAE,CAAC;QAC5C,MAAM,IAAI,KAAK,CACb,yFAAyF,CAC1F,CAAC;IACJ,CAAC;IACD,IAAI,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,IAAI,IAAI,uBAAe,CAAC,WAAW,EAAE,CAAC;YACxC,WAAW,GAAG,IAAA,6BAAc,EAAC,uBAAe,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnE,CAAC;aAAM,IAAI,IAAI,IAAI,uBAAe,CAAC,aAAa,EAAE,CAAC;YACjD,WAAW,GAAG,IAAA,6BAAc,EAAC,uBAAe,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC;aAAM,CAAC;YACN,WAAW,GAAG,IAAA,6BAAc,EAAC,uBAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,GAAG,WAAW,OAAO,EAAE,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,aAAa,GAAG,IAAA,mBAAQ,EAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE,CAAC;YACxC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,6BAA6B;gBACpC,MAAM,EAAE,GAAG;aACZ,CAAC;QACJ,CAAC;QAED,KAAK,GAAG,MAAM,OAAO,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAExD,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YACnB,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,6BAA6B;gBACpC,MAAM,EAAE,GAAG;aACZ,CAAC;QACJ,CAAC;QAED,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QACvB,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;QAEzB,gBAAgB,GAAG;YACjB,OAAO,EAAE,MAAM;SAChB,CAAC;QACF,WAAW,GAAG,IAAA,6BAAc,EAC1B,IAAI,IAAI,uBAAe,CAAC,KAAK,EAC7B,KAAK,CAAC,WAAW,CAClB,CAAC;IACJ,CAAC;IAED,MAAM,mBAAmB,GACvB,KAAK,KAAK,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAEzD,IAAI,CAAC;QACH,MAAM,WAAW,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACjD,CAAC;IAAC,OAAO,cAAc,EAAE,CAAC;QACxB,eAAM,CAAC,KAAK,CAAC,wBAAwB,cAAc,EAAE,EAAE;YACrD,MAAM;YACN,OAAO;YACP,IAAI;YACJ,UAAU,EAAE,KAAK,EAAE,WAAW;YAC9B,cAAc;SACf,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;QAErE,+GAA+G;QAC/G,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvC,wHAAwH;QAExH,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,4CAA4C,cAAc,CAAC,cAAc,0BAA0B,cAAc,CAAC,eAAe,wGAAwG,IAAI,gBAAgB,SAAS,EAAE;YAC/Q,MAAM,EAAE,GAAG;SACZ,CAAC;IACJ,CAAC;IAED,IACE,KAAK,KAAK,OAAO,CAAC,GAAG,CAAC,aAAa;QACnC,CAAC,IAAI,KAAK,uBAAe,CAAC,MAAM;YAC9B,IAAI,KAAK,uBAAe,CAAC,OAAO;YAChC,IAAI,KAAK,uBAAe,CAAC,GAAG;YAC5B,IAAI,KAAK,uBAAe,CAAC,KAAK;YAC9B,IAAI,KAAK,uBAAe,CAAC,WAAW;YACpC,IAAI,KAAK,uBAAe,CAAC,OAAO;YAChC,IAAI,KAAK,uBAAe,CAAC,MAAM,CAAC,EAClC,CAAC;QACD,OAAO;YACL,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,WAAW,OAAO,EAAE;YAC7B,KAAK,EAAE,IAAI;SACZ,CAAC;QACF,uEAAuE;QACvE,qCAAqC;QACrC,mDAAmD;QACnD,kDAAkD;QAClD,IAAI;QACJ,yCAAyC;QACzC,kDAAkD;QAClD,IAAI;QAEJ,gFAAgF;IAClF,CAAC;IAED,OAAO;QACL,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,MAAM,IAAI,SAAS;QAC5B,KAAK;KACN,CAAC;AACJ,CAAC","sourcesContent":["import { parseApi } from \"../lib/parseApi\";\nimport { getRateLimiter } from \"../services/rate-limiter\";\nimport {\n  AuthResponse,\n  NotificationType,\n  RateLimiterMode,\n} from \"../types\";\nimport { supabase_rr_service, supabase_service } from \"../services/supabase\";\nimport { withAuth } from \"../lib/withAuth\";\nimport { RateLimiterRedis } from \"rate-limiter-flexible\";\nimport { sendNotification } from \"../services/notification/email_notification\";\nimport { logger } from \"../lib/logger\";\nimport { redlock } from \"../services/redlock\";\nimport { deleteKey, getValue } from \"../services/redis\";\nimport { setValue } from \"../services/redis\";\nimport { validate } from \"uuid\";\nimport * as Sentry from \"@sentry/node\";\nimport { AuthCreditUsageChunk, AuthCreditUsageChunkFromTeam } from \"./v1/types\";\n// const { data, error } = await supabase_service\n//     .from('api_keys')\n//     .select(`\n//       key,\n//       team_id,\n//       teams (\n//         subscriptions (\n//           price_id\n//         )\n//       )\n//     `)\n//     .eq('key', normalizedApi)\n//     .limit(1)\n//     .single();\nfunction normalizedApiIsUuid(potentialUuid: string): boolean {\n  // Check if the string is a valid UUID\n  return validate(potentialUuid);\n}\n\nexport async function setCachedACUC(\n  api_key: string,\n  is_extract: boolean,\n  acuc:\n    | AuthCreditUsageChunk\n    | null\n    | ((acuc: AuthCreditUsageChunk) => AuthCreditUsageChunk | null),\n) {\n  const cacheKeyACUC = `acuc_${api_key}_${is_extract ? \"extract\" : \"scrape\"}`;\n  const redLockKey = `lock_${cacheKeyACUC}`;\n\n  try {\n    await redlock.using([redLockKey], 10000, {}, async (signal) => {\n      if (typeof acuc === \"function\") {\n        acuc = acuc(JSON.parse((await getValue(cacheKeyACUC)) ?? \"null\"));\n\n        if (acuc === null) {\n          if (signal.aborted) {\n            throw signal.error;\n          }\n\n          return;\n        }\n      }\n\n      if (signal.aborted) {\n        throw signal.error;\n      }\n\n      // Cache for 10 minutes. - mogery\n      await setValue(cacheKeyACUC, JSON.stringify(acuc), 600, true);\n    });\n  } catch (error) {\n    logger.error(`Error updating cached ACUC ${cacheKeyACUC}: ${error}`);\n  }\n}\n\nconst mockPreviewACUC: (team_id: string, is_extract: boolean) => AuthCreditUsageChunk = (team_id, is_extract) => ({\n  api_key: \"preview\",\n  team_id,\n  sub_id: null,\n  sub_current_period_start: null,\n  sub_current_period_end: null,\n  sub_user_id: null,\n  price_id: null,\n  rate_limits: {\n    crawl: 2,\n    scrape: 10,\n    extract: 10,\n    search: 5,\n    map: 5,\n    preview: 5,\n    crawlStatus: 500,\n    extractStatus: 500,\n    extractAgentPreview: 1,\n    scrapeAgentPreview: 5,\n  },\n  price_credits: 99999999,\n  credits_used: 0,\n  coupon_credits: 99999999,\n  adjusted_credits_used: 0,\n  remaining_credits: 99999999,\n  total_credits_sum: 99999999,\n  plan_priority: {\n    bucketLimit: 25,\n    planModifier: 0.1,\n  },\n  concurrency: is_extract ? 200 : 2,\n  flags: null,\n  is_extract,\n});\n\nconst mockACUC: () => AuthCreditUsageChunk = () => ({\n  api_key: \"bypass\",\n  team_id: \"bypass\",\n  sub_id: \"bypass\",\n  sub_current_period_start: new Date().toISOString(),\n  sub_current_period_end: new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n  sub_user_id: \"bypass\",\n  price_id: \"bypass\",\n  rate_limits: {\n    crawl: 99999999,\n    scrape: 99999999,\n    extract: 99999999,\n    search: 99999999,\n    map: 99999999,\n    preview: 99999999,\n    crawlStatus: 99999999,\n    extractStatus: 99999999,\n    extractAgentPreview: 99999999,\n    scrapeAgentPreview: 99999999,\n  },\n  price_credits: 99999999,\n  credits_used: 0,\n  coupon_credits: 99999999,\n  adjusted_credits_used: 0,\n  remaining_credits: 99999999,\n  total_credits_sum: 99999999,\n  plan_priority: {\n    bucketLimit: 25,\n    planModifier: 0.1,\n  },\n  concurrency: 99999999,\n  flags: null,\n  is_extract: false,\n});\n\nexport async function getACUC(\n  api_key: string,\n  cacheOnly = false,\n  useCache = true,\n  mode?: RateLimiterMode,\n): Promise<AuthCreditUsageChunk | null> {\n  let isExtract =\n      mode === RateLimiterMode.Extract ||\n      mode === RateLimiterMode.ExtractStatus ||\n      mode === RateLimiterMode.ExtractAgentPreview;\n\n  if (api_key === process.env.PREVIEW_TOKEN) {\n    const acuc = mockPreviewACUC(api_key, isExtract);\n    acuc.is_extract = isExtract;\n    return acuc;\n  }\n  \n  if (process.env.USE_DB_AUTHENTICATION !== \"true\") {\n    const acuc = mockACUC();\n    acuc.is_extract = isExtract;\n    return acuc;\n  }\n\n  const cacheKeyACUC = `acuc_${api_key}_${isExtract ? \"extract\" : \"scrape\"}`;\n\n  if (useCache) {\n    const cachedACUC = await getValue(cacheKeyACUC);\n    if (cachedACUC !== null) {\n      return JSON.parse(cachedACUC);\n    }\n  }\n\n  if (!cacheOnly) {\n    let data;\n    let error;\n    let retries = 0;\n    const maxRetries = 5;\n    while (retries < maxRetries) {\n      const client =\n        Math.random() > (2/3) ? supabase_rr_service : supabase_service;\n      ({ data, error } = await client.rpc(\n        \"auth_credit_usage_chunk_32\",\n        { input_key: api_key, i_is_extract: isExtract, tally_untallied_credits: true },\n        { get: true },\n      ));\n\n      if (!error) {\n        break;\n      }\n\n      logger.warn(\n        `Failed to retrieve authentication and credit usage data after ${retries}, trying again...`,\n        { error }\n      );\n      retries++;\n      if (retries === maxRetries) {\n        throw new Error(\n          \"Failed to retrieve authentication and credit usage data after 3 attempts: \" +\n            JSON.stringify(error),\n        );\n      }\n\n      // Wait for a short time before retrying\n      await new Promise((resolve) => setTimeout(resolve, 200));\n    }\n\n    const chunk: AuthCreditUsageChunk | null =\n      data.length === 0 ? null : data[0].team_id === null ? null : data[0];\n    \n    if (chunk) {\n      chunk.is_extract = isExtract;\n    }\n\n    // NOTE: Should we cache null chunks? - mogery\n    if (chunk !== null && useCache) {\n      setCachedACUC(api_key, isExtract, chunk);\n    }\n\n    return chunk;\n  } else {\n    return null;\n  }\n}\n\nexport async function setCachedACUCTeam(\n  team_id: string,\n  is_extract: boolean,\n  acuc:\n    | AuthCreditUsageChunkFromTeam\n    | null\n    | ((acuc: AuthCreditUsageChunkFromTeam) => AuthCreditUsageChunkFromTeam | null),\n) {\n  const cacheKeyACUC = `acuc_team_${team_id}_${is_extract ? \"extract\" : \"scrape\"}`;\n  const redLockKey = `lock_${cacheKeyACUC}`;\n\n  try {\n    await redlock.using([redLockKey], 10000, {}, async (signal) => {\n      if (typeof acuc === \"function\") {\n        acuc = acuc(JSON.parse((await getValue(cacheKeyACUC)) ?? \"null\"));\n\n        if (acuc === null) {\n          if (signal.aborted) {\n            throw signal.error;\n          }\n\n          return;\n        }\n      }\n\n      if (signal.aborted) {\n        throw signal.error;\n      }\n\n      // Cache for 10 minutes. - mogery\n      await setValue(cacheKeyACUC, JSON.stringify(acuc), 600, true);\n    });\n  } catch (error) {\n    logger.error(`Error updating cached ACUC ${cacheKeyACUC}: ${error}`);\n  }\n}\n\nexport async function getACUCTeam(\n  team_id: string,\n  cacheOnly = false,\n  useCache = true,\n  mode?: RateLimiterMode,\n): Promise<AuthCreditUsageChunkFromTeam | null> {\n  let isExtract =\n      mode === RateLimiterMode.Extract ||\n      mode === RateLimiterMode.ExtractStatus ||\n      mode === RateLimiterMode.ExtractAgentPreview;\n\n  if (team_id.startsWith(\"preview\")) {\n    const acuc = mockPreviewACUC(team_id, isExtract);\n    return acuc;\n  }\n  \n  if (process.env.USE_DB_AUTHENTICATION !== \"true\") {\n    const acuc = mockACUC();\n    acuc.is_extract = isExtract;\n    return acuc;\n  }\n\n  const cacheKeyACUC = `acuc_team_${team_id}_${isExtract ? \"extract\" : \"scrape\"}`;\n\n  if (useCache) {\n    const cachedACUC = await getValue(cacheKeyACUC);\n    if (cachedACUC !== null) {\n      return JSON.parse(cachedACUC);\n    }\n  }\n\n  if (!cacheOnly) {\n    let data;\n    let error;\n    let retries = 0;\n    const maxRetries = 5;\n    \n    while (retries < maxRetries) {\n      const client =\n        Math.random() > (2/3) ? supabase_rr_service : supabase_service;\n      ({ data, error } = await client.rpc(\n        \"auth_credit_usage_chunk_32_from_team\",\n        { input_team: team_id, i_is_extract: isExtract, tally_untallied_credits: true },\n        { get: true },\n      ));\n\n      if (!error) {\n        break;\n      }\n\n      logger.warn(\n        `Failed to retrieve authentication and credit usage data after ${retries}, trying again...`,\n        { error }\n      );\n      retries++;\n      if (retries === maxRetries) {\n        throw new Error(\n          \"Failed to retrieve authentication and credit usage data after 3 attempts: \" +\n            JSON.stringify(error),\n        );\n      }\n\n      // Wait for a short time before retrying\n      await new Promise((resolve) => setTimeout(resolve, 200));\n    }\n\n    const chunk: AuthCreditUsageChunk | null =\n      data.length === 0 ? null : data[0].team_id === null ? null : data[0];\n\n    // NOTE: Should we cache null chunks? - mogery\n    if (chunk !== null && useCache) {\n      setCachedACUCTeam(team_id, isExtract, chunk);\n    }\n\n    return chunk ? { ...chunk, is_extract: isExtract } : null;\n  } else {\n    return null;\n  }\n}\n\nexport async function clearACUC(api_key: string): Promise<void> {\n  // Delete cache for all rate limiter modes\n  const modes = [true, false];\n  await Promise.all(\n    modes.map(async (mode) => {\n      const cacheKey = `acuc_${api_key}_${mode ? \"extract\" : \"scrape\"}`;\n      await deleteKey(cacheKey);\n    }),\n  );\n\n  // Also clear the base cache key\n  await deleteKey(`acuc_${api_key}`);\n}\n\nexport async function clearACUCTeam(team_id: string): Promise<void> {\n  // Delete cache for all rate limiter modes\n  const modes = [true, false];\n  await Promise.all(\n    modes.map(async (mode) => {\n      const cacheKey = `acuc_team_${team_id}_${mode ? \"extract\" : \"scrape\"}`;\n      await deleteKey(cacheKey);\n    }),\n  );\n\n  // Also clear the base cache key\n  await deleteKey(`acuc_team_${team_id}`);\n}\n\nexport async function authenticateUser(\n  req,\n  res,\n  mode?: RateLimiterMode,\n): Promise<AuthResponse> {\n  return withAuth(supaAuthenticateUser, {\n    success: true,\n    chunk: null,\n    team_id: \"bypass\",\n  })(req, res, mode);\n}\n\nexport async function supaAuthenticateUser(\n  req,\n  res,\n  mode?: RateLimiterMode,\n): Promise<AuthResponse> {\n  const authHeader =\n    req.headers.authorization ??\n    (req.headers[\"sec-websocket-protocol\"]\n      ? `Bearer ${req.headers[\"sec-websocket-protocol\"]}`\n      : null);\n  if (!authHeader) {\n    return { success: false, error: \"Unauthorized\", status: 401 };\n  }\n  const token = authHeader.split(\" \")[1]; // Extract the token from \"Bearer <token>\"\n  if (!token) {\n    return {\n      success: false,\n      error: \"Unauthorized: Token missing\",\n      status: 401,\n    };\n  }\n\n  const incomingIP = (req.headers[\"x-preview-ip\"] || req.headers[\"x-forwarded-for\"] ||\n    req.socket.remoteAddress) as string;\n  const iptoken = incomingIP + token;\n\n  let rateLimiter: RateLimiterRedis;\n  let subscriptionData: { team_id: string} | null = null;\n  let normalizedApi: string;\n\n  let teamId: string | null = null;\n  let priceId: string | null = null;\n  let chunk: AuthCreditUsageChunk | null = null;\n  if (token == \"this_is_just_a_preview_token\") {\n    throw new Error(\n      \"Unauthenticated Playground calls are temporarily disabled due to abuse. Please sign up.\",\n    );\n  }\n  if (token == process.env.PREVIEW_TOKEN) {\n    if (mode == RateLimiterMode.CrawlStatus) {\n      rateLimiter = getRateLimiter(RateLimiterMode.CrawlStatus, token);\n    } else if (mode == RateLimiterMode.ExtractStatus) {\n      rateLimiter = getRateLimiter(RateLimiterMode.ExtractStatus, token);\n    } else {\n      rateLimiter = getRateLimiter(RateLimiterMode.Preview, token);\n    }\n    teamId = `preview_${iptoken}`;\n  } else {\n    normalizedApi = parseApi(token);\n    if (!normalizedApiIsUuid(normalizedApi)) {\n      return {\n        success: false,\n        error: \"Unauthorized: Invalid token\",\n        status: 401,\n      };\n    }\n\n    chunk = await getACUC(normalizedApi, false, true, mode);\n\n    if (chunk === null) {\n      return {\n        success: false,\n        error: \"Unauthorized: Invalid token\",\n        status: 401,\n      };\n    }\n\n    teamId = chunk.team_id;\n    priceId = chunk.price_id;\n\n    subscriptionData = {\n      team_id: teamId,\n    };\n    rateLimiter = getRateLimiter(\n      mode ?? RateLimiterMode.Crawl,\n      chunk.rate_limits,\n    );\n  }\n\n  const team_endpoint_token =\n    token === process.env.PREVIEW_TOKEN ? iptoken : teamId;\n\n  try {\n    await rateLimiter.consume(team_endpoint_token);\n  } catch (rateLimiterRes) {\n    logger.error(`Rate limit exceeded: ${rateLimiterRes}`, {\n      teamId,\n      priceId,\n      mode,\n      rateLimits: chunk?.rate_limits,\n      rateLimiterRes,\n    });\n    const secs = Math.round(rateLimiterRes.msBeforeNext / 1000) || 1;\n    const retryDate = new Date(Date.now() + rateLimiterRes.msBeforeNext);\n\n    // We can only send a rate limit email every 7 days, send notification already has the date in between checking\n    const startDate = new Date();\n    const endDate = new Date();\n    endDate.setDate(endDate.getDate() + 7);\n\n    // await sendNotification(team_id, NotificationType.RATE_LIMIT_REACHED, startDate.toISOString(), endDate.toISOString());\n\n    return {\n      success: false,\n      error: `Rate limit exceeded. Consumed (req/min): ${rateLimiterRes.consumedPoints}, Remaining (req/min): ${rateLimiterRes.remainingPoints}. Upgrade your plan at https://firecrawl.dev/pricing for increased rate limits or please retry after ${secs}s, resets at ${retryDate}`,\n      status: 429,\n    };\n  }\n\n  if (\n    token === process.env.PREVIEW_TOKEN &&\n    (mode === RateLimiterMode.Scrape ||\n      mode === RateLimiterMode.Preview ||\n      mode === RateLimiterMode.Map ||\n      mode === RateLimiterMode.Crawl ||\n      mode === RateLimiterMode.CrawlStatus ||\n      mode === RateLimiterMode.Extract ||\n      mode === RateLimiterMode.Search)\n  ) {\n    return {\n      success: true,\n      team_id: `preview_${iptoken}`,\n      chunk: null,\n    };\n    // check the origin of the request and make sure its from firecrawl.dev\n    // const origin = req.headers.origin;\n    // if (origin && origin.includes(\"firecrawl.dev\")){\n    //   return { success: true, team_id: \"preview\" };\n    // }\n    // if(process.env.ENV !== \"production\") {\n    //   return { success: true, team_id: \"preview\" };\n    // }\n\n    // return { success: false, error: \"Unauthorized: Invalid token\", status: 401 };\n  }\n\n  return {\n    success: true,\n    team_id: teamId ?? undefined,\n    chunk,\n  };\n}\n"]}